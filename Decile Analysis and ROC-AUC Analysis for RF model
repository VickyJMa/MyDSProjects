{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "9d5424af",
   "metadata": {},
   "source": [
    "# Data Preparation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "f81c0bdc",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import datetime\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "#import seaborn as sns\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "4a108a70",
   "metadata": {},
   "outputs": [],
   "source": [
    "data = pd.read_csv(\"XYZloan_default_selected_vars.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "6983fdab",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "train, test = train_test_split(\n",
    "     data, test_size=0.40, random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "3a242f14",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>varname</th>\n",
       "      <th>dtype</th>\n",
       "      <th>source</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Unnamed: 0.1</td>\n",
       "      <td>int64</td>\n",
       "      <td>Un</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Unnamed: 0</td>\n",
       "      <td>int64</td>\n",
       "      <td>Un</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>id</td>\n",
       "      <td>int64</td>\n",
       "      <td>id</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>loan_default</td>\n",
       "      <td>int64</td>\n",
       "      <td>lo</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>AP001</td>\n",
       "      <td>int64</td>\n",
       "      <td>AP</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        varname  dtype source\n",
       "0  Unnamed: 0.1  int64     Un\n",
       "1    Unnamed: 0  int64     Un\n",
       "2            id  int64     id\n",
       "3  loan_default  int64     lo\n",
       "4         AP001  int64     AP"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "var = pd.DataFrame(train.dtypes).reset_index()\n",
    "var.columns = ['varname','dtype'] \n",
    "var['source'] = var['varname'].str[:2]\n",
    "var.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "5c2c23f0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['AP001', 'AP002', 'AP003', 'AP005', 'AP006', 'AP007', 'AP008', 'AP009']"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# \"AP004\" is a bad data field and should be removed.\n",
    "MB_list = list(var[var['source']=='MB']['varname'])\n",
    "AP_list = list(var[(var['source']=='AP') & (var['varname']!='AP004')]['varname'])\n",
    "TD_list = list(var[var['source']=='TD']['varname'])\n",
    "CR_list = list(var[var['source']=='CR']['varname'])\n",
    "PA_list = list(var[var['source']=='PA']['varname'])\n",
    "CD_list = list(var[var['source']=='CD']['varname'])\n",
    "AP_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "7469c121",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    38736\n",
       "1     9264\n",
       "Name: loan_default, dtype: int64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train['loan_default'].value_counts(dropna=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "001bbb6d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Checking whether there is an H2O instance running at http://localhost:54321. connected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "<style>\n",
       "\n",
       "#h2o-table-4.h2o-container {\n",
       "  overflow-x: auto;\n",
       "}\n",
       "#h2o-table-4 .h2o-table {\n",
       "  /* width: 100%; */\n",
       "  margin-top: 1em;\n",
       "  margin-bottom: 1em;\n",
       "}\n",
       "#h2o-table-4 .h2o-table caption {\n",
       "  white-space: nowrap;\n",
       "  caption-side: top;\n",
       "  text-align: left;\n",
       "  /* margin-left: 1em; */\n",
       "  margin: 0;\n",
       "  font-size: larger;\n",
       "}\n",
       "#h2o-table-4 .h2o-table thead {\n",
       "  white-space: nowrap; \n",
       "  position: sticky;\n",
       "  top: 0;\n",
       "  box-shadow: 0 -1px inset;\n",
       "}\n",
       "#h2o-table-4 .h2o-table tbody {\n",
       "  overflow: auto;\n",
       "}\n",
       "#h2o-table-4 .h2o-table th,\n",
       "#h2o-table-4 .h2o-table td {\n",
       "  text-align: right;\n",
       "  /* border: 1px solid; */\n",
       "}\n",
       "#h2o-table-4 .h2o-table tr:nth-child(even) {\n",
       "  /* background: #F5F5F5 */\n",
       "}\n",
       "\n",
       "</style>      \n",
       "<div id=\"h2o-table-4\" class=\"h2o-container\">\n",
       "  <table class=\"h2o-table\">\n",
       "    <caption></caption>\n",
       "    <thead></thead>\n",
       "    <tbody><tr><td>H2O_cluster_uptime:</td>\n",
       "<td>2 mins 18 secs</td></tr>\n",
       "<tr><td>H2O_cluster_timezone:</td>\n",
       "<td>America/New_York</td></tr>\n",
       "<tr><td>H2O_data_parsing_timezone:</td>\n",
       "<td>UTC</td></tr>\n",
       "<tr><td>H2O_cluster_version:</td>\n",
       "<td>3.44.0.2</td></tr>\n",
       "<tr><td>H2O_cluster_version_age:</td>\n",
       "<td>21 days, 11 hours and 23 minutes</td></tr>\n",
       "<tr><td>H2O_cluster_name:</td>\n",
       "<td>H2O_from_python_vickyma_rxjfot</td></tr>\n",
       "<tr><td>H2O_cluster_total_nodes:</td>\n",
       "<td>1</td></tr>\n",
       "<tr><td>H2O_cluster_free_memory:</td>\n",
       "<td>1.601 Gb</td></tr>\n",
       "<tr><td>H2O_cluster_total_cores:</td>\n",
       "<td>4</td></tr>\n",
       "<tr><td>H2O_cluster_allowed_cores:</td>\n",
       "<td>4</td></tr>\n",
       "<tr><td>H2O_cluster_status:</td>\n",
       "<td>locked, healthy</td></tr>\n",
       "<tr><td>H2O_connection_url:</td>\n",
       "<td>http://localhost:54321</td></tr>\n",
       "<tr><td>H2O_connection_proxy:</td>\n",
       "<td>{\"http\": null, \"https\": null}</td></tr>\n",
       "<tr><td>H2O_internal_security:</td>\n",
       "<td>False</td></tr>\n",
       "<tr><td>Python_version:</td>\n",
       "<td>3.9.13 final</td></tr></tbody>\n",
       "  </table>\n",
       "</div>\n"
      ],
      "text/plain": [
       "--------------------------  --------------------------------\n",
       "H2O_cluster_uptime:         2 mins 18 secs\n",
       "H2O_cluster_timezone:       America/New_York\n",
       "H2O_data_parsing_timezone:  UTC\n",
       "H2O_cluster_version:        3.44.0.2\n",
       "H2O_cluster_version_age:    21 days, 11 hours and 23 minutes\n",
       "H2O_cluster_name:           H2O_from_python_vickyma_rxjfot\n",
       "H2O_cluster_total_nodes:    1\n",
       "H2O_cluster_free_memory:    1.601 Gb\n",
       "H2O_cluster_total_cores:    4\n",
       "H2O_cluster_allowed_cores:  4\n",
       "H2O_cluster_status:         locked, healthy\n",
       "H2O_connection_url:         http://localhost:54321\n",
       "H2O_connection_proxy:       {\"http\": null, \"https\": null}\n",
       "H2O_internal_security:      False\n",
       "Python_version:             3.9.13 final\n",
       "--------------------------  --------------------------------"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import h2o\n",
    "h2o.init()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "da4384a6",
   "metadata": {},
   "outputs": [],
   "source": [
    "from h2o.estimators.random_forest import H2ORandomForestEstimator"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3f3601a9",
   "metadata": {},
   "source": [
    "# Random Forest\n",
    "\n",
    "- Random Forest is a type of machine learning algorithm that is commonly used for both classification and regression tasks. It belongs to the ensemble learning family, which means it combines the predictions of multiple individual models to create a more robust and accurate final prediction.\n",
    "\n",
    "- Anomaly detection is about finding instances in a dataset that deviate from the norm or behave unusually. Random Forest can be used for anomaly detection because it's good at learning the \"normal\" patterns in data and identifying when something doesn't fit those patterns."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1c0901a9",
   "metadata": {},
   "source": [
    "### I run with a small sample dataset before building the model on the entire dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "39ed64bd",
   "metadata": {},
   "outputs": [],
   "source": [
    "target='loan_default'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "961a8abb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parse progress: |████████████████████████████████████████████████████████████████| (done) 100%\n",
      "Parse progress: |████████████████████████████████████████████████████████████████| (done) 100%\n"
     ]
    }
   ],
   "source": [
    "train_smpl = train.sample(frac=0.1, random_state=1)\n",
    "test_smpl = test.sample(frac=0.1, random_state=1)\n",
    "train_hex = h2o.H2OFrame(train_smpl)\n",
    "test_hex = h2o.H2OFrame(test_smpl)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "2c53827e",
   "metadata": {},
   "outputs": [],
   "source": [
    "predictors = CR_list + TD_list + AP_list + MB_list + CR_list + PA_list "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "327c9b58",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "drf Model Build progress: |██████████████████████████████████████████████████████| (done) 100%\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<pre style='margin: 1em 0 1em 0;'>Model Details\n",
       "=============\n",
       "H2ORandomForestEstimator : Distributed Random Forest\n",
       "Model Key: rf_v1\n",
       "</pre>\n",
       "<div style='margin: 1em 0 1em 0;'>\n",
       "<style>\n",
       "\n",
       "#h2o-table-5.h2o-container {\n",
       "  overflow-x: auto;\n",
       "}\n",
       "#h2o-table-5 .h2o-table {\n",
       "  /* width: 100%; */\n",
       "  margin-top: 1em;\n",
       "  margin-bottom: 1em;\n",
       "}\n",
       "#h2o-table-5 .h2o-table caption {\n",
       "  white-space: nowrap;\n",
       "  caption-side: top;\n",
       "  text-align: left;\n",
       "  /* margin-left: 1em; */\n",
       "  margin: 0;\n",
       "  font-size: larger;\n",
       "}\n",
       "#h2o-table-5 .h2o-table thead {\n",
       "  white-space: nowrap; \n",
       "  position: sticky;\n",
       "  top: 0;\n",
       "  box-shadow: 0 -1px inset;\n",
       "}\n",
       "#h2o-table-5 .h2o-table tbody {\n",
       "  overflow: auto;\n",
       "}\n",
       "#h2o-table-5 .h2o-table th,\n",
       "#h2o-table-5 .h2o-table td {\n",
       "  text-align: right;\n",
       "  /* border: 1px solid; */\n",
       "}\n",
       "#h2o-table-5 .h2o-table tr:nth-child(even) {\n",
       "  /* background: #F5F5F5 */\n",
       "}\n",
       "\n",
       "</style>      \n",
       "<div id=\"h2o-table-5\" class=\"h2o-container\">\n",
       "  <table class=\"h2o-table\">\n",
       "    <caption>Model Summary: </caption>\n",
       "    <thead><tr><th></th>\n",
       "<th>number_of_trees</th>\n",
       "<th>number_of_internal_trees</th>\n",
       "<th>model_size_in_bytes</th>\n",
       "<th>min_depth</th>\n",
       "<th>max_depth</th>\n",
       "<th>mean_depth</th>\n",
       "<th>min_leaves</th>\n",
       "<th>max_leaves</th>\n",
       "<th>mean_leaves</th></tr></thead>\n",
       "    <tbody><tr><td></td>\n",
       "<td>300.0</td>\n",
       "<td>300.0</td>\n",
       "<td>108002.0</td>\n",
       "<td>6.0</td>\n",
       "<td>11.0</td>\n",
       "<td>7.66</td>\n",
       "<td>19.0</td>\n",
       "<td>25.0</td>\n",
       "<td>22.45</td></tr></tbody>\n",
       "  </table>\n",
       "</div>\n",
       "</div>\n",
       "<div style='margin: 1em 0 1em 0;'><pre style='margin: 1em 0 1em 0;'>ModelMetricsRegression: drf\n",
       "** Reported on train data. **\n",
       "\n",
       "MSE: 0.14767353573534184\n",
       "RMSE: 0.38428314526575563\n",
       "MAE: 0.2957980576763411\n",
       "RMSLE: 0.2694211114439255\n",
       "Mean Residual Deviance: 0.14767353573534184</pre></div>\n",
       "<div style='margin: 1em 0 1em 0;'><pre style='margin: 1em 0 1em 0;'>ModelMetricsRegression: drf\n",
       "** Reported on cross-validation data. **\n",
       "\n",
       "MSE: 0.1477604099297664\n",
       "RMSE: 0.3843961627406892\n",
       "MAE: 0.29597600286172465\n",
       "RMSLE: 0.26950533579774466\n",
       "Mean Residual Deviance: 0.1477604099297664</pre></div>\n",
       "<div style='margin: 1em 0 1em 0;'>\n",
       "<style>\n",
       "\n",
       "#h2o-table-6.h2o-container {\n",
       "  overflow-x: auto;\n",
       "}\n",
       "#h2o-table-6 .h2o-table {\n",
       "  /* width: 100%; */\n",
       "  margin-top: 1em;\n",
       "  margin-bottom: 1em;\n",
       "}\n",
       "#h2o-table-6 .h2o-table caption {\n",
       "  white-space: nowrap;\n",
       "  caption-side: top;\n",
       "  text-align: left;\n",
       "  /* margin-left: 1em; */\n",
       "  margin: 0;\n",
       "  font-size: larger;\n",
       "}\n",
       "#h2o-table-6 .h2o-table thead {\n",
       "  white-space: nowrap; \n",
       "  position: sticky;\n",
       "  top: 0;\n",
       "  box-shadow: 0 -1px inset;\n",
       "}\n",
       "#h2o-table-6 .h2o-table tbody {\n",
       "  overflow: auto;\n",
       "}\n",
       "#h2o-table-6 .h2o-table th,\n",
       "#h2o-table-6 .h2o-table td {\n",
       "  text-align: right;\n",
       "  /* border: 1px solid; */\n",
       "}\n",
       "#h2o-table-6 .h2o-table tr:nth-child(even) {\n",
       "  /* background: #F5F5F5 */\n",
       "}\n",
       "\n",
       "</style>      \n",
       "<div id=\"h2o-table-6\" class=\"h2o-container\">\n",
       "  <table class=\"h2o-table\">\n",
       "    <caption>Cross-Validation Metrics Summary: </caption>\n",
       "    <thead><tr><th></th>\n",
       "<th>mean</th>\n",
       "<th>sd</th>\n",
       "<th>cv_1_valid</th>\n",
       "<th>cv_2_valid</th>\n",
       "<th>cv_3_valid</th>\n",
       "<th>cv_4_valid</th>\n",
       "<th>cv_5_valid</th>\n",
       "<th>cv_6_valid</th>\n",
       "<th>cv_7_valid</th>\n",
       "<th>cv_8_valid</th>\n",
       "<th>cv_9_valid</th>\n",
       "<th>cv_10_valid</th></tr></thead>\n",
       "    <tbody><tr><td>mae</td>\n",
       "<td>0.2958619</td>\n",
       "<td>0.0105649</td>\n",
       "<td>0.2898653</td>\n",
       "<td>0.2884218</td>\n",
       "<td>0.2988107</td>\n",
       "<td>0.3006485</td>\n",
       "<td>0.2928425</td>\n",
       "<td>0.3148344</td>\n",
       "<td>0.2851892</td>\n",
       "<td>0.2990153</td>\n",
       "<td>0.2806215</td>\n",
       "<td>0.3083699</td></tr>\n",
       "<tr><td>mean_residual_deviance</td>\n",
       "<td>0.1476049</td>\n",
       "<td>0.0117422</td>\n",
       "<td>0.1409761</td>\n",
       "<td>0.1414926</td>\n",
       "<td>0.1520571</td>\n",
       "<td>0.1534992</td>\n",
       "<td>0.1461121</td>\n",
       "<td>0.1678841</td>\n",
       "<td>0.1324742</td>\n",
       "<td>0.1492754</td>\n",
       "<td>0.1310470</td>\n",
       "<td>0.1612311</td></tr>\n",
       "<tr><td>mse</td>\n",
       "<td>0.1476049</td>\n",
       "<td>0.0117422</td>\n",
       "<td>0.1409761</td>\n",
       "<td>0.1414926</td>\n",
       "<td>0.1520571</td>\n",
       "<td>0.1534992</td>\n",
       "<td>0.1461121</td>\n",
       "<td>0.1678841</td>\n",
       "<td>0.1324742</td>\n",
       "<td>0.1492754</td>\n",
       "<td>0.1310470</td>\n",
       "<td>0.1612311</td></tr>\n",
       "<tr><td>r2</td>\n",
       "<td>0.0287920</td>\n",
       "<td>0.0137831</td>\n",
       "<td>0.0086205</td>\n",
       "<td>0.0396453</td>\n",
       "<td>0.0410812</td>\n",
       "<td>0.0347524</td>\n",
       "<td>0.0503409</td>\n",
       "<td>0.0253746</td>\n",
       "<td>0.0139032</td>\n",
       "<td>0.0120922</td>\n",
       "<td>0.0286377</td>\n",
       "<td>0.0334718</td></tr>\n",
       "<tr><td>residual_deviance</td>\n",
       "<td>0.1476049</td>\n",
       "<td>0.0117422</td>\n",
       "<td>0.1409761</td>\n",
       "<td>0.1414926</td>\n",
       "<td>0.1520571</td>\n",
       "<td>0.1534992</td>\n",
       "<td>0.1461121</td>\n",
       "<td>0.1678841</td>\n",
       "<td>0.1324742</td>\n",
       "<td>0.1492754</td>\n",
       "<td>0.1310470</td>\n",
       "<td>0.1612311</td></tr>\n",
       "<tr><td>rmse</td>\n",
       "<td>0.3839212</td>\n",
       "<td>0.0152529</td>\n",
       "<td>0.3754678</td>\n",
       "<td>0.376155</td>\n",
       "<td>0.3899451</td>\n",
       "<td>0.3917897</td>\n",
       "<td>0.3822461</td>\n",
       "<td>0.4097366</td>\n",
       "<td>0.3639701</td>\n",
       "<td>0.3863618</td>\n",
       "<td>0.3620041</td>\n",
       "<td>0.4015359</td></tr>\n",
       "<tr><td>rmsle</td>\n",
       "<td>0.2693151</td>\n",
       "<td>0.0079124</td>\n",
       "<td>0.265959</td>\n",
       "<td>0.2641168</td>\n",
       "<td>0.2716589</td>\n",
       "<td>0.2730249</td>\n",
       "<td>0.2672345</td>\n",
       "<td>0.2830908</td>\n",
       "<td>0.2600658</td>\n",
       "<td>0.2720638</td>\n",
       "<td>0.2575979</td>\n",
       "<td>0.2783385</td></tr></tbody>\n",
       "  </table>\n",
       "</div>\n",
       "</div>\n",
       "<div style='margin: 1em 0 1em 0;'>\n",
       "<style>\n",
       "\n",
       "#h2o-table-7.h2o-container {\n",
       "  overflow-x: auto;\n",
       "}\n",
       "#h2o-table-7 .h2o-table {\n",
       "  /* width: 100%; */\n",
       "  margin-top: 1em;\n",
       "  margin-bottom: 1em;\n",
       "}\n",
       "#h2o-table-7 .h2o-table caption {\n",
       "  white-space: nowrap;\n",
       "  caption-side: top;\n",
       "  text-align: left;\n",
       "  /* margin-left: 1em; */\n",
       "  margin: 0;\n",
       "  font-size: larger;\n",
       "}\n",
       "#h2o-table-7 .h2o-table thead {\n",
       "  white-space: nowrap; \n",
       "  position: sticky;\n",
       "  top: 0;\n",
       "  box-shadow: 0 -1px inset;\n",
       "}\n",
       "#h2o-table-7 .h2o-table tbody {\n",
       "  overflow: auto;\n",
       "}\n",
       "#h2o-table-7 .h2o-table th,\n",
       "#h2o-table-7 .h2o-table td {\n",
       "  text-align: right;\n",
       "  /* border: 1px solid; */\n",
       "}\n",
       "#h2o-table-7 .h2o-table tr:nth-child(even) {\n",
       "  /* background: #F5F5F5 */\n",
       "}\n",
       "\n",
       "</style>      \n",
       "<div id=\"h2o-table-7\" class=\"h2o-container\">\n",
       "  <table class=\"h2o-table\">\n",
       "    <caption>Scoring History: </caption>\n",
       "    <thead><tr><th></th>\n",
       "<th>timestamp</th>\n",
       "<th>duration</th>\n",
       "<th>number_of_trees</th>\n",
       "<th>training_rmse</th>\n",
       "<th>training_mae</th>\n",
       "<th>training_deviance</th></tr></thead>\n",
       "    <tbody><tr><td></td>\n",
       "<td>2023-11-29 21:15:14</td>\n",
       "<td>38.629 sec</td>\n",
       "<td>0.0</td>\n",
       "<td>nan</td>\n",
       "<td>nan</td>\n",
       "<td>nan</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:15:15</td>\n",
       "<td>38.692 sec</td>\n",
       "<td>1.0</td>\n",
       "<td>0.3920307</td>\n",
       "<td>0.2962567</td>\n",
       "<td>0.1536881</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:15:15</td>\n",
       "<td>38.746 sec</td>\n",
       "<td>2.0</td>\n",
       "<td>0.3942032</td>\n",
       "<td>0.2970052</td>\n",
       "<td>0.1553962</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:15:15</td>\n",
       "<td>38.773 sec</td>\n",
       "<td>3.0</td>\n",
       "<td>0.3904279</td>\n",
       "<td>0.2939798</td>\n",
       "<td>0.1524340</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:15:15</td>\n",
       "<td>38.797 sec</td>\n",
       "<td>4.0</td>\n",
       "<td>0.3901757</td>\n",
       "<td>0.2949471</td>\n",
       "<td>0.1522371</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:15:15</td>\n",
       "<td>38.817 sec</td>\n",
       "<td>5.0</td>\n",
       "<td>0.3904523</td>\n",
       "<td>0.2967762</td>\n",
       "<td>0.1524530</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:15:15</td>\n",
       "<td>38.843 sec</td>\n",
       "<td>6.0</td>\n",
       "<td>0.3898358</td>\n",
       "<td>0.2966235</td>\n",
       "<td>0.1519720</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:15:15</td>\n",
       "<td>38.900 sec</td>\n",
       "<td>7.0</td>\n",
       "<td>0.3891432</td>\n",
       "<td>0.2966342</td>\n",
       "<td>0.1514324</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:15:15</td>\n",
       "<td>38.934 sec</td>\n",
       "<td>8.0</td>\n",
       "<td>0.3882354</td>\n",
       "<td>0.2954446</td>\n",
       "<td>0.1507267</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:15:15</td>\n",
       "<td>38.964 sec</td>\n",
       "<td>9.0</td>\n",
       "<td>0.3872396</td>\n",
       "<td>0.2955049</td>\n",
       "<td>0.1499545</td></tr>\n",
       "<tr><td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:15:18</td>\n",
       "<td>42.495 sec</td>\n",
       "<td>215.0</td>\n",
       "<td>0.3843113</td>\n",
       "<td>0.2957321</td>\n",
       "<td>0.1476952</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:15:18</td>\n",
       "<td>42.512 sec</td>\n",
       "<td>216.0</td>\n",
       "<td>0.3842989</td>\n",
       "<td>0.2957108</td>\n",
       "<td>0.1476856</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:15:18</td>\n",
       "<td>42.529 sec</td>\n",
       "<td>217.0</td>\n",
       "<td>0.3843004</td>\n",
       "<td>0.2957083</td>\n",
       "<td>0.1476868</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:15:18</td>\n",
       "<td>42.541 sec</td>\n",
       "<td>218.0</td>\n",
       "<td>0.3843089</td>\n",
       "<td>0.2957214</td>\n",
       "<td>0.1476933</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:15:18</td>\n",
       "<td>42.553 sec</td>\n",
       "<td>219.0</td>\n",
       "<td>0.3843005</td>\n",
       "<td>0.2957108</td>\n",
       "<td>0.1476869</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:15:18</td>\n",
       "<td>42.591 sec</td>\n",
       "<td>220.0</td>\n",
       "<td>0.3842941</td>\n",
       "<td>0.2957350</td>\n",
       "<td>0.1476819</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:15:18</td>\n",
       "<td>42.605 sec</td>\n",
       "<td>221.0</td>\n",
       "<td>0.3842941</td>\n",
       "<td>0.2957316</td>\n",
       "<td>0.1476820</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:15:18</td>\n",
       "<td>42.618 sec</td>\n",
       "<td>222.0</td>\n",
       "<td>0.3843023</td>\n",
       "<td>0.2957245</td>\n",
       "<td>0.1476883</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:15:18</td>\n",
       "<td>42.629 sec</td>\n",
       "<td>223.0</td>\n",
       "<td>0.3842976</td>\n",
       "<td>0.2957218</td>\n",
       "<td>0.1476847</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:15:20</td>\n",
       "<td>43.707 sec</td>\n",
       "<td>300.0</td>\n",
       "<td>0.3842831</td>\n",
       "<td>0.2957981</td>\n",
       "<td>0.1476735</td></tr></tbody>\n",
       "  </table>\n",
       "</div>\n",
       "<pre style='font-size: smaller; margin-bottom: 1em;'>[225 rows x 7 columns]</pre></div>\n",
       "<div style='margin: 1em 0 1em 0;'>\n",
       "<style>\n",
       "\n",
       "#h2o-table-8.h2o-container {\n",
       "  overflow-x: auto;\n",
       "}\n",
       "#h2o-table-8 .h2o-table {\n",
       "  /* width: 100%; */\n",
       "  margin-top: 1em;\n",
       "  margin-bottom: 1em;\n",
       "}\n",
       "#h2o-table-8 .h2o-table caption {\n",
       "  white-space: nowrap;\n",
       "  caption-side: top;\n",
       "  text-align: left;\n",
       "  /* margin-left: 1em; */\n",
       "  margin: 0;\n",
       "  font-size: larger;\n",
       "}\n",
       "#h2o-table-8 .h2o-table thead {\n",
       "  white-space: nowrap; \n",
       "  position: sticky;\n",
       "  top: 0;\n",
       "  box-shadow: 0 -1px inset;\n",
       "}\n",
       "#h2o-table-8 .h2o-table tbody {\n",
       "  overflow: auto;\n",
       "}\n",
       "#h2o-table-8 .h2o-table th,\n",
       "#h2o-table-8 .h2o-table td {\n",
       "  text-align: right;\n",
       "  /* border: 1px solid; */\n",
       "}\n",
       "#h2o-table-8 .h2o-table tr:nth-child(even) {\n",
       "  /* background: #F5F5F5 */\n",
       "}\n",
       "\n",
       "</style>      \n",
       "<div id=\"h2o-table-8\" class=\"h2o-container\">\n",
       "  <table class=\"h2o-table\">\n",
       "    <caption>Variable Importances: </caption>\n",
       "    <thead><tr><th>variable</th>\n",
       "<th>relative_importance</th>\n",
       "<th>scaled_importance</th>\n",
       "<th>percentage</th></tr></thead>\n",
       "    <tbody><tr><td>TD013</td>\n",
       "<td>1549.9637451</td>\n",
       "<td>1.0</td>\n",
       "<td>0.1624182</td></tr>\n",
       "<tr><td>MB007</td>\n",
       "<td>1368.9670410</td>\n",
       "<td>0.8832252</td>\n",
       "<td>0.1434518</td></tr>\n",
       "<tr><td>TD009</td>\n",
       "<td>1276.2861328</td>\n",
       "<td>0.8234297</td>\n",
       "<td>0.1337400</td></tr>\n",
       "<tr><td>TD005</td>\n",
       "<td>641.8096924</td>\n",
       "<td>0.4140805</td>\n",
       "<td>0.0672542</td></tr>\n",
       "<tr><td>AP003</td>\n",
       "<td>503.8271484</td>\n",
       "<td>0.3250574</td>\n",
       "<td>0.0527952</td></tr>\n",
       "<tr><td>TD014</td>\n",
       "<td>423.3284912</td>\n",
       "<td>0.2731215</td>\n",
       "<td>0.0443599</td></tr>\n",
       "<tr><td>AP001</td>\n",
       "<td>318.9553833</td>\n",
       "<td>0.2057825</td>\n",
       "<td>0.0334228</td></tr>\n",
       "<tr><td>CR019</td>\n",
       "<td>279.6249695</td>\n",
       "<td>0.1804074</td>\n",
       "<td>0.0293014</td></tr>\n",
       "<tr><td>CR009</td>\n",
       "<td>261.0901184</td>\n",
       "<td>0.1684492</td>\n",
       "<td>0.0273592</td></tr>\n",
       "<tr><td>TD010</td>\n",
       "<td>259.7542114</td>\n",
       "<td>0.1675873</td>\n",
       "<td>0.0272192</td></tr>\n",
       "<tr><td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td></tr>\n",
       "<tr><td>CR005</td>\n",
       "<td>21.1109638</td>\n",
       "<td>0.0136203</td>\n",
       "<td>0.0022122</td></tr>\n",
       "<tr><td>AP002</td>\n",
       "<td>20.8765163</td>\n",
       "<td>0.0134690</td>\n",
       "<td>0.0021876</td></tr>\n",
       "<tr><td>AP009</td>\n",
       "<td>14.8636532</td>\n",
       "<td>0.0095897</td>\n",
       "<td>0.0015575</td></tr>\n",
       "<tr><td>TD025</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD026</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD027</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD028</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD029</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD044</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>PA030</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr></tbody>\n",
       "  </table>\n",
       "</div>\n",
       "<pre style='font-size: smaller; margin-bottom: 1em;'>[40 rows x 4 columns]</pre></div><pre style=\"font-size: smaller; margin: 1em 0 0 0;\">\n",
       "\n",
       "[tips]\n",
       "Use `model.explain()` to inspect the model.\n",
       "--\n",
       "Use `h2o.display.toggle_user_tips()` to switch on/off this section.</pre>"
      ],
      "text/plain": [
       "Model Details\n",
       "=============\n",
       "H2ORandomForestEstimator : Distributed Random Forest\n",
       "Model Key: rf_v1\n",
       "\n",
       "\n",
       "Model Summary: \n",
       "    number_of_trees    number_of_internal_trees    model_size_in_bytes    min_depth    max_depth    mean_depth    min_leaves    max_leaves    mean_leaves\n",
       "--  -----------------  --------------------------  ---------------------  -----------  -----------  ------------  ------------  ------------  -------------\n",
       "    300                300                         108002                 6            11           7.66          19            25            22.45\n",
       "\n",
       "ModelMetricsRegression: drf\n",
       "** Reported on train data. **\n",
       "\n",
       "MSE: 0.14767353573534184\n",
       "RMSE: 0.38428314526575563\n",
       "MAE: 0.2957980576763411\n",
       "RMSLE: 0.2694211114439255\n",
       "Mean Residual Deviance: 0.14767353573534184\n",
       "\n",
       "ModelMetricsRegression: drf\n",
       "** Reported on cross-validation data. **\n",
       "\n",
       "MSE: 0.1477604099297664\n",
       "RMSE: 0.3843961627406892\n",
       "MAE: 0.29597600286172465\n",
       "RMSLE: 0.26950533579774466\n",
       "Mean Residual Deviance: 0.1477604099297664\n",
       "\n",
       "Cross-Validation Metrics Summary: \n",
       "                        mean      sd          cv_1_valid    cv_2_valid    cv_3_valid    cv_4_valid    cv_5_valid    cv_6_valid    cv_7_valid    cv_8_valid    cv_9_valid    cv_10_valid\n",
       "----------------------  --------  ----------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  -------------\n",
       "mae                     0.295862  0.0105649   0.289865      0.288422      0.298811      0.300648      0.292843      0.314834      0.285189      0.299015      0.280622      0.30837\n",
       "mean_residual_deviance  0.147605  0.0117422   0.140976      0.141493      0.152057      0.153499      0.146112      0.167884      0.132474      0.149275      0.131047      0.161231\n",
       "mse                     0.147605  0.0117422   0.140976      0.141493      0.152057      0.153499      0.146112      0.167884      0.132474      0.149275      0.131047      0.161231\n",
       "r2                      0.028792  0.0137831   0.00862054    0.0396453     0.0410812     0.0347524     0.0503409     0.0253746     0.0139032     0.0120922     0.0286377     0.0334718\n",
       "residual_deviance       0.147605  0.0117422   0.140976      0.141493      0.152057      0.153499      0.146112      0.167884      0.132474      0.149275      0.131047      0.161231\n",
       "rmse                    0.383921  0.0152529   0.375468      0.376155      0.389945      0.39179       0.382246      0.409737      0.36397       0.386362      0.362004      0.401536\n",
       "rmsle                   0.269315  0.00791244  0.265959      0.264117      0.271659      0.273025      0.267234      0.283091      0.260066      0.272064      0.257598      0.278338\n",
       "\n",
       "Scoring History: \n",
       "     timestamp            duration    number_of_trees    training_rmse        training_mae         training_deviance\n",
       "---  -------------------  ----------  -----------------  -------------------  -------------------  -------------------\n",
       "     2023-11-29 21:15:14  38.629 sec  0.0                nan                  nan                  nan\n",
       "     2023-11-29 21:15:15  38.692 sec  1.0                0.3920307054589556   0.296256731487853    0.1536880740226464\n",
       "     2023-11-29 21:15:15  38.746 sec  2.0                0.3942032053571326   0.29700516758134304  0.15539616711383766\n",
       "     2023-11-29 21:15:15  38.773 sec  3.0                0.3904279147638411   0.2939797914789087   0.15243395662684114\n",
       "     2023-11-29 21:15:15  38.797 sec  4.0                0.3901756870847142   0.2949471374634921   0.1522370667920288\n",
       "     2023-11-29 21:15:15  38.817 sec  5.0                0.39045233521620937  0.29677616864784884  0.15245302607579111\n",
       "     2023-11-29 21:15:15  38.843 sec  6.0                0.38983582738116856  0.2966234733230358   0.15197197230996023\n",
       "     2023-11-29 21:15:15  38.900 sec  7.0                0.38914318695596034  0.2966341661783077   0.1514324199542415\n",
       "     2023-11-29 21:15:15  38.934 sec  8.0                0.3882353582921885   0.295444631963733    0.150726693428264\n",
       "     2023-11-29 21:15:15  38.964 sec  9.0                0.3872396455558498   0.29550491952782904  0.14995454309022016\n",
       "---  ---                  ---         ---                ---                  ---                  ---\n",
       "     2023-11-29 21:15:18  42.495 sec  215.0              0.3843113034739587   0.29573211834202434  0.14769517797785317\n",
       "     2023-11-29 21:15:18  42.512 sec  216.0              0.3842988506336292   0.2957107699607174   0.14768560659832844\n",
       "     2023-11-29 21:15:18  42.529 sec  217.0              0.3843003942341456   0.2957083144774226   0.14768679300851972\n",
       "     2023-11-29 21:15:18  42.541 sec  218.0              0.38430888458888907  0.29572142739331236  0.14769331877395606\n",
       "     2023-11-29 21:15:18  42.553 sec  219.0              0.38430050135250476  0.29571081934860755  0.14768687533978653\n",
       "     2023-11-29 21:15:18  42.591 sec  220.0              0.38429408673971416  0.29573502188782896  0.14768194510311095\n",
       "     2023-11-29 21:15:18  42.605 sec  221.0              0.38429409902368056  0.2957315649037273   0.1476819545444224\n",
       "     2023-11-29 21:15:18  42.618 sec  222.0              0.3843023193365572   0.29572445770961364  0.14768827264745715\n",
       "     2023-11-29 21:15:18  42.629 sec  223.0              0.3842976401975627   0.29572175195540995  0.14768467626141535\n",
       "     2023-11-29 21:15:20  43.707 sec  300.0              0.38428314526575563  0.2957980576763411   0.14767353573534184\n",
       "[225 rows x 7 columns]\n",
       "\n",
       "\n",
       "Variable Importances: \n",
       "variable    relative_importance    scaled_importance     percentage\n",
       "----------  ---------------------  --------------------  ---------------------\n",
       "TD013       1549.9637451171875     1.0                   0.1624181903682103\n",
       "MB007       1368.967041015625      0.8832252014463229    0.14345183890650978\n",
       "TD009       1276.2861328125        0.8234296684894422    0.13373995665155053\n",
       "TD005       641.8096923828125      0.4140804547233377    0.06725419812301016\n",
       "AP003       503.8271484375         0.3250573763577982    0.05279523083387185\n",
       "TD014       423.3284912109375      0.27312154400032823   0.04435990692710485\n",
       "AP001       318.95538330078125     0.2057824799486946    0.0334228180027495\n",
       "CR019       279.6249694824219      0.18040742589193942   0.029301447642355812\n",
       "CR009       261.0901184082031      0.16844917775058216   0.02735921061926255\n",
       "TD010       259.75421142578125     0.1675872821181002    0.027219223090348566\n",
       "---         ---                    ---                   ---\n",
       "CR005       21.110963821411133     0.013620295241044496  0.002212183705331194\n",
       "AP002       20.876516342163086     0.013469035264811748  0.0021876163337163326\n",
       "AP009       14.863653182983398     0.00958967797137707   0.0015575381423249541\n",
       "TD025       0.0                    0.0                   0.0\n",
       "TD026       0.0                    0.0                   0.0\n",
       "TD027       0.0                    0.0                   0.0\n",
       "TD028       0.0                    0.0                   0.0\n",
       "TD029       0.0                    0.0                   0.0\n",
       "TD044       0.0                    0.0                   0.0\n",
       "PA030       0.0                    0.0                   0.0\n",
       "[40 rows x 4 columns]\n",
       "\n",
       "\n",
       "[tips]\n",
       "Use `model.explain()` to inspect the model.\n",
       "--\n",
       "Use `h2o.display.toggle_user_tips()` to switch on/off this section."
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rf_v1 = H2ORandomForestEstimator(\n",
    "        model_id = 'rf_v1',\n",
    "        ntrees = 300,\n",
    "        nfolds=10,\n",
    "        min_rows=100,\n",
    "        seed=1234)\n",
    "rf_v1.train(predictors,target,training_frame=train_hex)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "abf01179",
   "metadata": {},
   "source": [
    "### Explanation:\n",
    "\n",
    "- The model was trained with 300 trees, each having a depth between 6 and 11. The average depth is 7.66, indicating a moderately complex set of trees.\n",
    "- The training metrics (on the data used for training) show how well the model performs on the data it has seen before.\n",
    "- The cross-validation metrics provide an estimate of the model's performance on unseen data, using a technique where the model is trained on subsets of the data and tested on the remaining portions."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "2e0f6ef6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAh4AAAZXCAYAAAAo23n9AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8qNh9FAAAACXBIWXMAAA9hAAAPYQGoP6dpAADhEUlEQVR4nOzdf1yV9f3/8ecR8YDoOaAiCJFgOsnMSixDU3RT8Ody5bIxyePMVZKmaCty64dbUGbOMsVqqLnUXCP7tDID/aZmWhpJaZLa8gdNTlbKOf5IQLy+f3TjmidA5SCXqx732+26ybmu1/W+3m9oO8/b+/plMwzDEAAAgAWaXOwOAACAnw6CBwAAsAzBAwAAWIbgAQAALEPwAAAAliF4AAAAyxA8AACAZQgeAADAMgQPAABgGYIH0Ih+9atfKTg4WGVlZXXW/Pa3v1VgYKC+/PLLBh9v3759stlsWrx4cb33XbdunWw2m/75z3+es/bhhx+WzWbzo4cNP/b/qlWrVunhhx++2N0A/ucRPIBGNG7cOJ08eVLLli2rdbvH49HKlSs1bNgwRURENPh47dq10+bNmzV06NAGt4X6WbVqlR555JGL3Q3gfx7BA2hEgwcPVlRUlBYuXFjr9uXLl+vbb7/VuHHjGnScqqoqlZeXy2636/rrr1d4eHiD2sP5O3HixMXuAvCDQvAAGlFAQIDGjBmjwsJCbd++vcb2RYsWqV27dho8eLC++uorTZgwQV26dFGLFi3Utm1b/fznP9c777zjs0/16ZSZM2fqL3/5i+Li4mS32/X222/Xeqrls88+09ixY9WpUyc1b95c0dHRGj58eK39kaSTJ08qIyNDkZGRCg4OVlJSkrZt23Ze412xYoUSExMVEhKiFi1aKCUl5bz3/b7q0zkff/yxfv3rX8vpdKpVq1bKyMjQqVOntGvXLg0aNEgtW7ZUbGysZs6c6bN/9embF1988bzG89prrykxMVHNmzdXy5YtNXDgQG3evLnWPn344YcaOXKkwsLCdNlll8nlcmnevHmSJJvNZi779u2TJM2bN099+/ZV27ZtFRISoiuvvFIzZ85UZWWlT/v9+vVT165dtXXrVvXp00fNmzdXhw4d9Nhjj+n06dM+tWVlZZo6dao6dOggu92utm3basiQIfr000/NmoqKCv3lL39RfHy87Ha7wsPDNXbsWH311Vd+/U2AC4HgATSy3/3ud7LZbDVmPXbu3KktW7ZozJgxCggI0OHDhyVJDz30kN544w0tWrRIHTp0UL9+/bRu3boa7T799NP6f//v/2nWrFl68803FR8fX+vxDx48qNatW+uxxx7T6tWrNW/ePDVt2lQ9e/bUrl27atQ/8MAD+vzzz/W3v/1Nf/vb33Tw4EH169dPn3/++VnHmZWVpd/85jfq0qWL/vGPf+jvf/+7jh49qj59+mjnzp3n+duq6ZZbbtFVV12lvLw8jR8/Xn/96181ZcoUjRgxQkOHDtXKlSv185//XPfdd59eeeUVv8azbNky3XjjjXI4HFq+fLlyc3N15MgR9evXTxs3bqzR5k033aSOHTvq5Zdf1oIFC/SnP/1JI0eOlCRt3rzZXNq1aydJ+ve//63U1FT9/e9/1+uvv65x48bpiSee0B133FGjbbfbrd/+9rcaPXq0XnvtNQ0ePFiZmZl68cUXzZqjR4/qhhtu0LPPPquxY8fqX//6lxYsWKCf/exnKi0tlSSdPn1aN954ox577DGlpqbqjTfe0GOPPaaCggL169dP3377rd9/E6BBDACNLikpyWjTpo1RUVFhrps6daohydi9e3et+5w6dcqorKw0fvGLXxi/+tWvzPV79+41JBmXXXaZT3tnblu0aFGdfTl16pRRUVFhdOrUyZgyZYq5/u233zYkGd27dzdOnz5trt+3b58RGBho3H777ea6hx56yDjz/z4OHDhgNG3a1Jg4caLPsY4ePWpERkYat9xyS539OfPYL7/8co1jPPnkkz61V199tSHJeOWVV8x1lZWVRnh4uHHTTTfVezxVVVVGVFSUceWVVxpVVVU+fW/btq3Rq1evGn168MEHa4whPT3dOJ//S62qqjIqKyuNJUuWGAEBAcbhw4fNbUlJSYYk4/333/fZp0uXLkZKSor5ecaMGYYko6CgoM7jLF++3JBk5OXl+azfunWrIcmYP3/+OfsKNAZmPAALjBs3Tl9//bVee+01SdKpU6f04osvqk+fPurUqZNZt2DBAnXv3l1BQUFq2rSpAgMDtXbtWhUXF9do85e//KUCAwPPeexTp04pKytLXbp0UbNmzdS0aVM1a9ZMe/bsqbXd1NRUnztW2rdvr169euntt9+u8xhvvfWWTp06pdtuu02nTp0yl6CgICUlJdU6Y3O+hg0b5vP58ssvl81m0+DBg811TZs2VceOHbV///56j2fXrl06ePCg0tLS1KTJf/8vsUWLFrr55pv13nvv1biO4+abb67XGLZt26Zf/vKXat26tQICAhQYGKjbbrtNVVVV2r17t09tZGSkrrvuOp913bp18xnbm2++qZ/97GcaMGBAncd8/fXXFRoaquHDh/v8Ta6++mpFRkY26G8CNATBA7DAyJEj5XQ6tWjRIknf3QHx5Zdf+lxUOnv2bN11113q2bOn8vLy9N5772nr1q0aNGhQrdPi1dP455KRkaE//elPGjFihP71r3/p/fff19atW3XVVVfV2m5kZGSt67755ps6j1F9K/C1116rwMBAn2XFihX6+uuvz6uvtWnVqpXP52bNmql58+YKCgqqsf7kyZO19r22ddXjqf63tt9nVFSUTp8+rSNHjvisP9/fvSQdOHBAffr00X/+8x899dRTeuedd7R161bzmpDv/w1at25dow273e5T99VXX+mSSy4563G//PJLlZWVqVmzZjX+Jm63u0F/E6Ahml7sDgA/BcHBwfrNb36j559/XqWlpVq4cKFatmypX//612bNiy++qH79+iknJ8dn36NHj9ba5vk+R+PFF1/UbbfdpqysLJ/1X3/9tUJDQ2vUu93uWtfV9oVYrU2bNpKkf/7zn2rfvv159csq5xpP9b/V10ac6eDBg2rSpInCwsJ81tfnGSavvvqqjh8/rldeecXnd1NUVHTebXxfeHi4vvjii7PWtGnTRq1bt9bq1atr3d6yZUu/jw80BDMegEXGjRunqqoqPfHEE1q1apVuvfVWNW/e3Nxus9lkt9t99vn4449r3FlRX7W1+8Ybb+g///lPrfXLly+XYRjm5/3792vTpk3q169fncdISUlR06ZN9e9//1s9evSodblYzjWezp07Kzo6WsuWLfOpO378uPLy8sw7Xc6l+nf8/RmM6pBy5t/AMAw9//zzfo9p8ODB2r17t/7f//t/ddYMGzZM33zzjaqqqmr9e3Tu3Nnv4wMNwYwHYJEePXqoW7dumjNnjgzDqPHsjmHDhunPf/6zHnroISUlJWnXrl2aMWOG4uLidOrUKb+PO2zYMC1evFjx8fHq1q2bCgsL9cQTT9Q5VX/o0CH96le/0vjx4+XxePTQQw8pKChImZmZdR4jNjZWM2bM0PTp0/X5559r0KBB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PHmyXnzxRd1zzz2655571LdvXz3++OO68cYb9X//939as2aNz0Wh6enpWrZsmf7v//5PLVu2NGdInE6ngoODJUkvv/yywsPDdemll2r79u265557NGLEiBoXrgIAgIunUe5q+fLLL/XGG2/o5ptvrrHNZrPppptuMp/p0atXL7300ktatGiRunXrpsWLF2vFihXq2bOnuU9OTo48Ho/69eundu3amcuKFSvMmtLSUqWlpSk+Pl6TJk1SWlpanbfjAgCAi6PBz/H4MeE5HgAA+OeiPscDAACgNgQPAABgGYIHAACwDMEDAABYhuABAAAsQ/AAAACWIXgAAADLNNqTS3/IPJlnvwcZAAD4hxkPAABgGYIHAACwDMEDAABYhuABAAAsQ/AAAACWIXgAAADLcDttLZzZTinoYvei/oyHjIvdBQAAzooZDwAAYBmCBwAAsAzBAwAAWIbgAQAALEPwAAAAliF4AAAAyxA8AACAZQgeAADAMgQPAABgmQsSPDZt2qSAgAANGjTIZ/2+fftks9nMJSwsTH379tX69et96ubPn6+4uDgFBQUpISFB77zzjs92wzD08MMPKyoqSsHBwerXr58++eSTOo9z5vLyyy9fiCECAIAL4IIEj4ULF2rixInauHGjDhw4UGP7mjVrVFpaqvXr18vhcGjIkCHau3evJGnFihWaPHmypk+frm3btqlPnz4aPHiwTzszZ87U7Nmz9cwzz2jr1q2KjIzUwIEDdfToUUlSTEyMSktLfZZHHnlEISEhGjx48IUYIgAAuAAaHDyOHz+uf/zjH7rrrrs0bNgwLV68uEZN69atFRkZqW7duunZZ5/ViRMnlJ+fL0maPXu2xo0bp9tvv12XX3655syZo5iYGOXk5Ej6brZjzpw5mj59um666SZ17dpVL7zwgk6cOKFly5ZJkgICAhQZGemzrFy5UqNGjVKLFi0aOkQAAHCBNDh4rFixQp07d1bnzp01evRoLVq0SIZR98vKmjdvLkmqrKxURUWFCgsLlZyc7FOTnJysTZs2SZL27t0rt9vtU2O325WUlGTWfF9hYaGKioo0bty4s/a9vLxcXq/XZwEAAI2nwcEjNzdXo0ePliQNGjRIx44d09q1a2utPX78uDIzMxUQEKCkpCR9/fXXqqqqUkREhE9dRESE3G63JJn/nq2mtj5dfvnl6tWr11n7np2dLafTaS4xMTHnHjAAAPBbg4LHrl27tGXLFt16662SpKZNm2rUqFFauHChT12vXr3UokULtWzZUv/617+0ePFiXXnlleZ2m83mU28YRo1151MjSd9++62WLVt2ztkOScrMzJTH4zGXkpKSc+4DAAD817QhO+fm5urUqVOKjo421xmGocDAQB05csRct2LFCnXp0kWhoaFq3bq1ub5NmzYKCAioMXNx6NAhc4YjMjJS0nczH+3atau15kz//Oc/deLECd12223n7L/dbpfdbj/P0QIAgIbye8bj1KlTWrJkiZ588kkVFRWZy0cffaT27dtr6dKlZm1MTIwuu+wyn9AhSc2aNVNCQoIKCgp81hcUFJinSeLi4hQZGelTU1FRofXr19d6KiU3N1e//OUvFR4e7u/QAABAI/F7xuP111/XkSNHNG7cODmdTp9tI0eOVG5uroYNG3bOdjIyMpSWlqYePXooMTFRzz33nA4cOKA777xT0nenWCZPnqysrCx16tRJnTp1UlZWlpo3b67U1FSftj777DNt2LBBq1at8ndYAACgEfkdPHJzczVgwIAaoUOSbr75ZmVlZenw4cPnbGfUqFH65ptvNGPGDJWWlqpr165atWqV2rdvb9b84Q9/0LfffqsJEyboyJEj6tmzp/Lz89WyZUufthYuXKjo6Ogad8kAAID/DTbjbPe+/sR4vd7vgtT9koIudm/qz3iIPyUA4OKo/g71eDxyOBx11vGuFgAAYBmCBwAAsAzBAwAAWIbgAQAALEPwAAAAliF4AAAAyxA8AACAZRr0rpYfK0/m2e9BBgAA/mHGAwAAWIbgAQAALEPwAAAAliF4AAAAyxA8AACAZQgeAADAMtxOWwtntlMKuti9OH/GQ8bF7gIAAOeFGQ8AAGAZggcAALAMwQMAAFiG4AEAACxD8AAAAJYheAAAAMsQPAAAgGUIHgAAwDIEDwAAYJl6Bw+bzXbWxeVy1agLCQlRp06d5HK5VFhYWKPN7du3KykpScHBwYqOjtaMGTNkGL5P41y/fr0SEhIUFBSkDh06aMGCBTXaKSsrU3p6utq1a6egoCBdfvnlWrVqVX2HCAAAGkm9H5leWlpq/rxixQo9+OCD2rVrl7kuODjY/HnRokUaNGiQTp48qd27d+u5555Tz549tXDhQt12222SJK/Xq4EDB6p///7aunWr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0bhx4/Tmm29q7NixGjt2rHr06KEXXnhB/fv318qVK7V+/Xpt2rTJPCYuLk6LFi3SypUrVbt2bXOFxOFwyMfHR/n5+Xruuef0m9/8RsHBwTp58qTmzZunr7/+Wv/3f/9XXVMEAAAVVC1PtXzzzTd69913NWDAgFL7bDabfve735nf6dGtWzctWbJEqampateundLS0pSenq4uXbqYxyQnJ8vlcumuu+5ScHCwuaWnp0uSPDw89OWXX2rAgAG66aabdO+99+rbb7/VRx99pFtuuaU6pggAACrhmr/H4+eE7/EAAKByruv3eAAAAJSF4AEAACxD8AAAAJYheAAAAMsQPAAAgGUIHgAAwDIEDwAAYJlq++bSG5krofxnkAEAQOWw4gEAACxD8AAAAJYheAAAAMsQPAAAgGUIHgAAwDIEDwAAYBkepy2DI8kheVfuWGOyUbWDAQDgZ4QVDwAAYBmCBwAAsAzBAwAAWIbgAQAALEPwAAAAliF4AAAAyxA8AACAZQgeAADAMgQPAABgGYIHAACwTIWCR2xsrGw2m0aNGlVq32OPPSabzabY2Fi32pKtXr16iomJ0RdffOF23OnTpzV06FA5HA45HA4NHTpUZ86ccas5evSo+vXrJ19fX9WvX1+PP/64CgsLzf2HDx92O1fJtnbt2opMDwAAVLMKr3iEhoZqyZIl+v7778228+fPa/HixfrVr37lVhsTE6OcnBzl5OTo/fffl6enp+699163msGDB2vHjh1au3at1q5dqx07dmjo0KHm/qKiIvXt21f5+fnatGmTlixZoqVLl+pPf/pTqbGtX7/ePF9OTo7uvvvuik4PAABUowr/SFzHjh118OBBLVu2TA8++KAkadmyZQoNDVWzZs3cau12u4KCgiRJQUFB+vOf/6wePXro22+/VYMGDbR3716tXbtWn3zyibp06SJJev311xUeHq59+/apVatWysjI0J49e3Ts2DGFhIRIkmbMmKHY2Fg999xz8vf3N89Xr14983wAAOCnp1L3eIwYMUKpqanm6/nz5+sPf/hDucecPXtWCxcuVIsWLVSvXj1J0pYtW+RwOMzQIUldu3aVw+HQ5s2bzZq2bduaoUOSoqOjVVBQoKysLLdz/OY3v1HDhg11xx136O233/7ReRQUFCg3N9dtAwAA1adSwWPo0KHatGmTDh8+rCNHjujjjz/WkCFDStWtXr1afn5+8vPzU+3atbVq1Sqlp6erRo1Lp3U6nWrYsGGp4xo2bCin02nWBAYGuu0PCAhQzZo1zRo/Pz/NnDlTb7/9ttasWaNevXpp0KBBevPNN8udR1JSknlvicPhUGhoaGUuBwAAuEoV/qhFkurXr6++ffvqjTfekGEY6tu3r+rXr1+qrmfPnkpOTpYknTp1SvPmzdM999yjbdu2qUmTJpIkm81W6jjDMNzaf6ymfv36Gj9+vLmvc+fOOn36tF588cUyA1GJhIQExcfHm69zc3MJHwAAVKNKBQ9J+sMf/qDRo0dLkubOnVtmja+vr1q0aGG+7tSpkxwOh15//XU9++yzCgoK0jfffFPquG+//dZc5QgKCtLWrVvd9p8+fVoXLlwotRJyua5du+of//hHuXOw2+2y2+3l1gAAgKpT6e/xiImJUWFhoQoLCxUdHX1Vx9hsNtWoUcN8IiY8PFwul0vbtm0za7Zu3SqXy6Vu3bqZNbt27VJOTo5Zk5GRIbvdrk6dOl3xXNnZ2QoODq7M1AAAQDWp9IqHh4eH9u7da/5dloKCAvM+jNOnT+vll1/W2bNn1a9fP0nSzTffrJiYGD388MN69dVXJUmPPPKI7r33XrVq1UqSFBUVpTZt2mjo0KH629/+plOnTmnChAl6+OGHzSda3njjDXl5ealDhw6qUaOG3nnnHb300kt64YUXKjs9AABQDSodPCS5PcpalrVr15qrDrVr11br1q311ltv6a677jJrFi5cqMcff1xRUVGSLj2Z8vLLL5v7PTw89O677+qxxx7THXfcIR8fHw0ePFjTp093O9ezzz6rI0eOyMPDQzfddJPmz59f7v0dAADAejbDMIzrPYifitzcXDkcDmmiJO/K9WFM5nICAH55St5DXS5XuQsT/FYLAACwDMEDAABYhuABAAAsQ/AAAACWIXgAAADLEDwAAIBlCB4AAMAy1/QFYj9XroTyn0EGAACVw4oHAACwDMEDAABYhuABAAAsQ/AAAACWIXgAAADLEDwAAIBleJy2DI4kh+R9dbXGZKN6BwMAwM8IKx4AAMAyBA8AAGAZggcAALAMwQMAAFiG4AEAACxD8AAAAJYheAAAAMsQPAAAgGUIHgAAwDLXHDxiY2Nls9lks9nk5eWlZs2aacKECcrPzzdrHnnkEXl4eGjJkiVl9rF06VK1adNGdrtdbdq00fLly932Jycnq127dvL395e/v7/Cw8P13nvvudUsW7ZM0dHRql+/vmw2m3bs2HGtUwMAAFWsSlY8YmJilJOTo4MHD+rZZ5/VvHnzNGHCBEnSuXPnlJ6erieeeEIpKSmljt2yZYsGDRqkoUOH6vPPP9fQoUM1cOBAbd261axp3Lixnn/+eX366af69NNPdffdd6t///7avXu3WZOfn6877rhDzz//fFVMCQAAVAObYRjX9GMjsbGxOnPmjFasWGG2Pfzww1q9erVycnL0xhtv6JVXXtHatWsVHBysPXv2KCwszKwdNGiQcnNz3VYwYmJiFBAQoMWLF1/xvHXr1tXf/vY3jRw50q398OHDatq0qbKzs3XbbbdVaC65ublyOBzSRPFbLQAAVEDJe6jL5ZK/v/8V66rlHg8fHx9duHBBkpSSkqIhQ4bI4XCoT58+Sk1NdavdsmWLoqKi3Nqio6O1efPmMvsuKirSkiVLlJ+fr/Dw8GsaZ0FBgXJzc902AABQfao8eGzbtk2LFi1Sr169dODAAX3yyScaNGiQJGnIkCFKTU1VcXGxWe90OhUYGOjWR2BgoJxOp1vbzp075efnJ7vdrlGjRmn58uVq06bNNY01KSlJDofD3EJDQ6+pPwAAUL4qCR6rV6+Wn5+fvL29FR4erh49emjOnDlKSUkxb/iUpD59+ig/P1/r1693O95ms7m9NgyjVFurVq20Y8cOffLJJ/rjH/+o4cOHa8+ePdc07oSEBLlcLnM7duzYNfUHAADK51kVnfTs2VPJycny8vJSSEiIvLy8VFRUpAULFsjpdMrT83+nKSoqUkpKivnxSlBQUKnVjRMnTpRaBalZs6ZatGghSercubO2b9+u2bNn69VXX630uO12u+x2e6WPBwAAFVMlwcPX19cMBSXWrFmjvLw8ZWdny8PDw2z/8ssv9eCDD+rkyZOqV6+ewsPDlZmZqfHjx5s1GRkZ6tatW7nnNAxDBQUFVTF8AABgkSoJHmVJSUlR37591b59e7f2W265RePGjdObb76psWPHauzYserRo4deeOEF9e/fXytXrtT69eu1adMm85innnpK99xzj0JDQ5WXl6clS5boww8/1Nq1a82aU6dO6ejRozp+/Lgkad++fZIuragEBQVV1zQBAEAFVMtTLd98843effddDRgwoNQ+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7dIjjzyioUOHauvWrVc874gRI/Txxx9ryZIl+uKLL/R///d/iomJ0YEDByRJW7du1R/+8Ac99thj2rFjh3r27Klnn322UnOcPHmyJk2apM8++0yenp76/e9/ryeffFKzZ8/WRx99pK+++krPPPOM2zHvv/++9u7dqw8++ECLFy/W8uXLNXXqVHP/k08+qaVLl+qNN97QZ599phYtWig6OrrUKtGTTz6ppKQk7d27V1FRUfrTn/6kW265RTk5OcrJydGgQYMkSTVq1NBLL72kXbt26Y033tC///1vPfnkk259nTt3TtOnT9c///lPbdy4UUePHtWECRPM/cnJyYqLi9MjjzyinTt3atWqVWrRooWkSysuffv2ldPp1Jo1a5SVlaWOHTuqV69erGzh56Faf/sWQJV6++23jYCAAMPb29vo1q2bkZCQYHz++efm/nXr1hk1atQw9u3bd9V99unTx/jTn/5kvo6IiDDGjh1rGIZh/Oc//zFsNpvx3//+1+2YXr16GQkJCYZhGMbvf/97IyYmxm3/oEGDDIfDUe55JRnLly83DMMwDh06ZEgy/vGPf5j7Fy9ebEgy3n//fbMtKSnJaNWqlfl6+PDhRt26dY38/HyzLTk52fDz8zOKioqMs2fPGl5eXsbChQvN/YWFhUZISIjx4osvGobxv58RX7Fihdv4Jk+ebLRv377cORiGYfzrX/8y6tWrZ75OTU01JBn/+c9/zLa5c+cagYGB5uuQkBDj6aefLrO/999/3/D39zfOnz/v1t68eXPj1Vdf/dHxAD91rHgAN5ABAwbo+PHjWrVqlaKjo/Xhhx+qY8eO5scAO3bsUOPGjXXTTTeVeXxRUZGee+45tWvXTvXq1ZOfn58yMjJ09OjRMus/++wzGYahm266yVxx8fPz04YNG/TVV19Jkvbu3avw8HC34374+mq1a9fO/DswMFCSdOutt7q1nThxwu2Y9u3bq1atWm7nPnv2rI4dO6avvvpKFy5c0B133GHu9/Ly0u233669e/e69dO5c+erGuMHH3ygyMhINWrUSLVr19awYcN08uRJ5efnmzW1atVS8+bNzdfBwcHmuE+cOKHjx4+rV69eZfaflZWls2fPmv/9lGyHDh0yrzlwI+PmUuAG4+3trcjISEVGRuqZZ57RQw89pMmTJys2NlY+Pj7lHjtjxgz9/e9/16xZs8z7FMaNG+d2T8TliouL5eHhoaysLPPjmhJ+fn6SLn00UFW8vLzMv202W5ltxcXFV9WXzWYzx1bSVwnDMEq1+fr6/mifR44cUZ8+fTRq1Cj99a9/Vd26dbVp0yaNHDlSFy5cKHMePxzLj/13VFxcrODg4FL30UjiEWX8LLDiAdzg2rRpY/7bdrt27fT1119r//79ZdZ+9NFH6t+/v4YMGaL27durWbNm5r0aZenQoYOKiop04sQJtWjRwm0LCgoyz//JJ5+4HffD19Xp888/1/fff+92bj8/PzVu3FgtWrRQzZo1tWnTJnP/hQsX9Omnn+rmm28ut9+aNWuWerrl008/1cWLFzVjxgx17dpVN910k44fP16h8dauXVthYWF6//33y9zfsWNHOZ1OeXp6lrrm9evXr9C5gJ8iggdwgzh58qTuvvtuvfnmm/riiy906NAhvfXWW3rxxRfVv39/SVJERIR69OihAQMGKDMzU4cOHdJ7772ntWvXSpJatGihzMxMbd68WXv37tWjjz4qp9N5xXPedNNNevDBBzVs2DAtW7ZMhw4d0vbt2/XCCy9ozZo1kqTHH39ca9eu1Ysvvqj9+/fr5ZdfNs9nhcLCQo0cOVJ79uzRe++9p8mTJ2v06NGqUaOGfH199cc//lFPPPGE1q5dqz179ujhhx/WuXPnNHLkyHL7DQsL06FDh7Rjxw599913KigoUPPmzXXx4kXNmTNHBw8e1D//+U+98sorFR7zlClTNGPGDL300ks6cOCAPvvsM82ZM0eS1Lt3b4WHh+u+++7TunXrdPjwYW3evFmTJk3Sp59+WqlrBPykXNc7TABctfPnzxsTJ040OnbsaDgcDqNWrVpGq1atjEmTJhnnzp0z606ePGmMGDHCqFevnuHt7W20bdvWWL16tbmvf//+hp+fn9GwYUNj0qRJxrBhw4z+/fubx19+c6lhXLoZ85lnnjHCwsIMLy8vIygoyPjtb39rfPHFF2ZNSkqK0bhxY8PHx8fo16+fMX369ErdXJqdnW3uL7np8/Tp02ZbamqqW7/Dhw83+vfvbzzzzDNGvXr1DD8/P+Ohhx5yuzHz+++/N8aMGWPUr1/fsNvtxh133GFs27at3POUXO8BAwYYderUMSQZqamphmEYxsyZM43g4GDDx8fHiI6ONhYsWOB2/A/HaBiGsXz5cuOH/3f7yiuvGK1atTK8vLyM4OBgY8yYMea+3NxcY8yYMUZISIjh5eVlhIaGGg8++KBx9OjRcq8pcCOwGUYVfkALABaKjY3VmTNnftLfgArAHR+1AAAAyxA8AACAZfioBQAAWIYVDwAAYBmCBwAAsAzBAwAAWIbgAQAALEPwAAAAliF4AAAAyxA8AACAZQgeAADAMv8PI8P96j0s6HAAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 600x2000 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "def VarImp(model_name):\n",
    "    \n",
    "    from sklearn.metrics import roc_curve,auc\n",
    "    from sklearn.metrics import average_precision_score\n",
    "    from sklearn.metrics import precision_recall_curve\n",
    "    import matplotlib.pyplot as plt\n",
    "    \n",
    "    # plot the variable importance\n",
    "    plt.rcdefaults()\n",
    "    variables = model_name._model_json['output']['variable_importances']['variable']\n",
    "    y_pos = np.arange(len(variables))\n",
    "    fig, ax = plt.subplots(figsize = (6,len(variables)/2))\n",
    "    scaled_importance = model_name._model_json['output']['variable_importances']['scaled_importance']\n",
    "    ax.barh(y_pos,scaled_importance,align='center',color='green')\n",
    "    ax.set_yticks(y_pos)\n",
    "    ax.set_yticklabels(variables)\n",
    "    ax.invert_yaxis()\n",
    "    ax.set_xlabel('Scaled Importance')\n",
    "    ax.set_title('Variable Importance')\n",
    "    plt.show()\n",
    "    \n",
    "VarImp(rf_v1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "988e8ba4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>loan_default</th>\n",
       "      <th>predict</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0.274792</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>0.155529</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>0.120041</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>0.230445</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>0.120385</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   loan_default   predict\n",
       "0             0  0.274792\n",
       "1             0  0.155529\n",
       "2             0  0.120041\n",
       "3             0  0.230445\n",
       "4             0  0.120385"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predictions = rf_v1.predict(test_hex)\n",
    "predictions.head()\n",
    "test_scores = test_hex['loan_default'].cbind(predictions).as_data_frame()\n",
    "test_scores.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "1e64d414",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>actual</th>\n",
       "      <th>non_actual</th>\n",
       "      <th>cum_count</th>\n",
       "      <th>cum_actual</th>\n",
       "      <th>cum_non_actual</th>\n",
       "      <th>percent_cum_actual</th>\n",
       "      <th>percent_cum_non_actual</th>\n",
       "      <th>if_random</th>\n",
       "      <th>lift</th>\n",
       "      <th>K_S</th>\n",
       "      <th>gain</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>decile</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>320</td>\n",
       "      <td>100</td>\n",
       "      <td>220</td>\n",
       "      <td>320</td>\n",
       "      <td>100</td>\n",
       "      <td>220</td>\n",
       "      <td>0.17</td>\n",
       "      <td>0.08</td>\n",
       "      <td>60.0</td>\n",
       "      <td>1.67</td>\n",
       "      <td>9.0</td>\n",
       "      <td>31.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>320</td>\n",
       "      <td>91</td>\n",
       "      <td>229</td>\n",
       "      <td>640</td>\n",
       "      <td>191</td>\n",
       "      <td>449</td>\n",
       "      <td>0.32</td>\n",
       "      <td>0.17</td>\n",
       "      <td>120.0</td>\n",
       "      <td>1.59</td>\n",
       "      <td>15.0</td>\n",
       "      <td>29.84</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>320</td>\n",
       "      <td>78</td>\n",
       "      <td>242</td>\n",
       "      <td>960</td>\n",
       "      <td>269</td>\n",
       "      <td>691</td>\n",
       "      <td>0.45</td>\n",
       "      <td>0.27</td>\n",
       "      <td>180.0</td>\n",
       "      <td>1.49</td>\n",
       "      <td>18.0</td>\n",
       "      <td>28.02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>320</td>\n",
       "      <td>59</td>\n",
       "      <td>261</td>\n",
       "      <td>1280</td>\n",
       "      <td>328</td>\n",
       "      <td>952</td>\n",
       "      <td>0.55</td>\n",
       "      <td>0.37</td>\n",
       "      <td>240.0</td>\n",
       "      <td>1.37</td>\n",
       "      <td>18.0</td>\n",
       "      <td>25.62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>320</td>\n",
       "      <td>63</td>\n",
       "      <td>257</td>\n",
       "      <td>1600</td>\n",
       "      <td>391</td>\n",
       "      <td>1209</td>\n",
       "      <td>0.65</td>\n",
       "      <td>0.46</td>\n",
       "      <td>300.0</td>\n",
       "      <td>1.30</td>\n",
       "      <td>19.0</td>\n",
       "      <td>24.44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>320</td>\n",
       "      <td>54</td>\n",
       "      <td>266</td>\n",
       "      <td>1920</td>\n",
       "      <td>445</td>\n",
       "      <td>1475</td>\n",
       "      <td>0.74</td>\n",
       "      <td>0.57</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.24</td>\n",
       "      <td>17.0</td>\n",
       "      <td>23.18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>320</td>\n",
       "      <td>40</td>\n",
       "      <td>280</td>\n",
       "      <td>2240</td>\n",
       "      <td>485</td>\n",
       "      <td>1755</td>\n",
       "      <td>0.81</td>\n",
       "      <td>0.68</td>\n",
       "      <td>420.0</td>\n",
       "      <td>1.15</td>\n",
       "      <td>13.0</td>\n",
       "      <td>21.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>320</td>\n",
       "      <td>56</td>\n",
       "      <td>264</td>\n",
       "      <td>2560</td>\n",
       "      <td>541</td>\n",
       "      <td>2019</td>\n",
       "      <td>0.90</td>\n",
       "      <td>0.78</td>\n",
       "      <td>480.0</td>\n",
       "      <td>1.13</td>\n",
       "      <td>12.0</td>\n",
       "      <td>21.13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>320</td>\n",
       "      <td>34</td>\n",
       "      <td>286</td>\n",
       "      <td>2880</td>\n",
       "      <td>575</td>\n",
       "      <td>2305</td>\n",
       "      <td>0.96</td>\n",
       "      <td>0.89</td>\n",
       "      <td>540.0</td>\n",
       "      <td>1.06</td>\n",
       "      <td>7.0</td>\n",
       "      <td>19.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>320</td>\n",
       "      <td>25</td>\n",
       "      <td>295</td>\n",
       "      <td>3200</td>\n",
       "      <td>600</td>\n",
       "      <td>2600</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>600.0</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.75</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        count  actual  non_actual  cum_count  cum_actual  cum_non_actual  \\\n",
       "decile                                                                     \n",
       "0         320     100         220        320         100             220   \n",
       "1         320      91         229        640         191             449   \n",
       "2         320      78         242        960         269             691   \n",
       "3         320      59         261       1280         328             952   \n",
       "4         320      63         257       1600         391            1209   \n",
       "5         320      54         266       1920         445            1475   \n",
       "6         320      40         280       2240         485            1755   \n",
       "7         320      56         264       2560         541            2019   \n",
       "8         320      34         286       2880         575            2305   \n",
       "9         320      25         295       3200         600            2600   \n",
       "\n",
       "        percent_cum_actual  percent_cum_non_actual  if_random  lift   K_S  \\\n",
       "decile                                                                      \n",
       "0                     0.17                    0.08       60.0  1.67   9.0   \n",
       "1                     0.32                    0.17      120.0  1.59  15.0   \n",
       "2                     0.45                    0.27      180.0  1.49  18.0   \n",
       "3                     0.55                    0.37      240.0  1.37  18.0   \n",
       "4                     0.65                    0.46      300.0  1.30  19.0   \n",
       "5                     0.74                    0.57      360.0  1.24  17.0   \n",
       "6                     0.81                    0.68      420.0  1.15  13.0   \n",
       "7                     0.90                    0.78      480.0  1.13  12.0   \n",
       "8                     0.96                    0.89      540.0  1.06   7.0   \n",
       "9                     1.00                    1.00      600.0  1.00   0.0   \n",
       "\n",
       "         gain  \n",
       "decile         \n",
       "0       31.25  \n",
       "1       29.84  \n",
       "2       28.02  \n",
       "3       25.62  \n",
       "4       24.44  \n",
       "5       23.18  \n",
       "6       21.65  \n",
       "7       21.13  \n",
       "8       19.97  \n",
       "9       18.75  "
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def createGains(model):\n",
    "    predictions = model.predict(test_hex)\n",
    "    test_scores = test_hex['loan_default'].cbind(predictions).as_data_frame()\n",
    "\n",
    "    #sort on prediction (descending), add id, and decile for groups containing 1/10 of datapoints\n",
    "    test_scores = test_scores.sort_values(by='predict',ascending=False)\n",
    "    test_scores['row_id'] = range(0,0+len(test_scores))\n",
    "    test_scores['decile'] = ( test_scores['row_id'] / (len(test_scores)/10) ).astype(int)\n",
    "    #see count by decile\n",
    "    test_scores.loc[test_scores['decile'] == 10]=9\n",
    "    test_scores['decile'].value_counts()\n",
    "\n",
    "    #create gains table\n",
    "    gains = test_scores.groupby('decile')['loan_default'].agg(['count','sum'])\n",
    "    gains.columns = ['count','actual']\n",
    "    gains\n",
    "\n",
    "    #add features to gains table\n",
    "    gains['non_actual'] = gains['count'] - gains['actual']\n",
    "    gains['cum_count'] = gains['count'].cumsum()\n",
    "    gains['cum_actual'] = gains['actual'].cumsum()\n",
    "    gains['cum_non_actual'] = gains['non_actual'].cumsum()\n",
    "    gains['percent_cum_actual'] = (gains['cum_actual'] / np.max(gains['cum_actual'])).round(2)\n",
    "    gains['percent_cum_non_actual'] = (gains['cum_non_actual'] / np.max(gains['cum_non_actual'])).round(2)\n",
    "    gains['if_random'] = np.max(gains['cum_actual']) /10 \n",
    "    gains['if_random'] = gains['if_random'].cumsum()\n",
    "    gains['lift'] = (gains['cum_actual'] / gains['if_random']).round(2)\n",
    "    gains['K_S'] = np.abs( gains['percent_cum_actual'] -  gains['percent_cum_non_actual'] ) * 100\n",
    "    gains['gain']=(gains['cum_actual']/gains['cum_count']*100).round(2)\n",
    "    gains = pd.DataFrame(gains)\n",
    "    return(gains)\n",
    "\n",
    "createGains(rf_v1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "083ca0ea",
   "metadata": {},
   "source": [
    "### Interpretation:\n",
    "- Take the first decile (0): There are 320 instances, and the model predicted 100 actual positive cases. The cumulative percentage of actual positive cases at this point is 0.17%, which is higher than the expected random percentage of 0.08%. The lift is 1.67, indicating that this decile is 1.67 times more likely to contain actual positive cases than random chance."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "2383ca8f",
   "metadata": {},
   "outputs": [],
   "source": [
    "def ROC_AUC(my_result,df,target):\n",
    "    from sklearn.metrics import roc_curve,auc\n",
    "    from sklearn.metrics import average_precision_score\n",
    "    from sklearn.metrics import precision_recall_curve\n",
    "    import matplotlib.pyplot as plt\n",
    "\n",
    "    # ROC\n",
    "    y_actual = df[target].as_data_frame()\n",
    "    y_pred = my_result.predict(df).as_data_frame()\n",
    "    fpr = list()\n",
    "    tpr = list()\n",
    "    roc_auc = list()\n",
    "    fpr,tpr,_ = roc_curve(y_actual,y_pred)\n",
    "    roc_auc = auc(fpr,tpr)\n",
    "    \n",
    "    # Precision-Recall\n",
    "    average_precision = average_precision_score(y_actual,y_pred)\n",
    "\n",
    "    print('')\n",
    "    print('   * ROC curve: The ROC curve plots the true positive rate vs. the false rositive sate')\n",
    "    print('')\n",
    "    print('\t  * The area under the curve (AUC): A value between 0.5 (random) and 1.0 (perfect), measuring the prediction accuracy')\n",
    "    print('')\n",
    "    print('   * Recall (R) = The number of true positives / (the number of true positives + the number of false negatives)')\n",
    "    print('')\n",
    "    \n",
    "    # plotting\n",
    "    plt.figure(figsize=(10,4))\n",
    "\n",
    "    # ROC\n",
    "    plt.subplot(1,2,1)\n",
    "    plt.plot(fpr,tpr,color='darkorange',lw=2,label='ROC curve (aare=%0.2f)' % roc_auc)\n",
    "    plt.plot([0,1],[0,1],color='navy',lw=3,linestyle='--')\n",
    "    plt.xlim([0.0,1.0])\n",
    "    plt.ylim([0.0,1.05])\n",
    "    plt.xlabel('False Positive Rate')\n",
    "    plt.ylabel('True Positive Rate')\n",
    "    plt.title('Receiver operating characteristic: AUC={0:0.4f}'.format(roc_auc))\n",
    "    plt.legend(loc='lower right')\n",
    "\n",
    "    # Precision-Recall\n",
    "    plt.subplot(1,2,2)\n",
    "    precision,recall,_ = precision_recall_curve(y_actual,y_pred)\n",
    "    plt.step(recall,precision,color='b',alpha=0.2,where='post')\n",
    "    plt.fill_between(recall,precision,step='post',alpha=0.2,color='b')\n",
    "    plt.xlabel('Recall')\n",
    "    plt.ylabel('Precision')\n",
    "    plt.ylim([0.0,1.05])\n",
    "    plt.xlim([0.0,1.0])\n",
    "    plt.title('Precision-Recall curve: PR={0:0.4f}'.format(average_precision))\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "9e28bfa3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "\n",
      "   * ROC curve: The ROC curve plots the true positive rate vs. the false rositive sate\n",
      "\n",
      "\t  * The area under the curve (AUC): A value between 0.5 (random) and 1.0 (perfect), measuring the prediction accuracy\n",
      "\n",
      "   * Recall (R) = The number of true positives / (the number of true positives + the number of false negatives)\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 1000x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ROC_AUC(rf_v1,test_hex,'loan_default')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "50c4588b",
   "metadata": {},
   "source": [
    "# Best Model Using Grid-Search"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "433ca270",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Checking whether there is an H2O instance running at http://localhost:54321. connected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "<style>\n",
       "\n",
       "#h2o-table-18.h2o-container {\n",
       "  overflow-x: auto;\n",
       "}\n",
       "#h2o-table-18 .h2o-table {\n",
       "  /* width: 100%; */\n",
       "  margin-top: 1em;\n",
       "  margin-bottom: 1em;\n",
       "}\n",
       "#h2o-table-18 .h2o-table caption {\n",
       "  white-space: nowrap;\n",
       "  caption-side: top;\n",
       "  text-align: left;\n",
       "  /* margin-left: 1em; */\n",
       "  margin: 0;\n",
       "  font-size: larger;\n",
       "}\n",
       "#h2o-table-18 .h2o-table thead {\n",
       "  white-space: nowrap; \n",
       "  position: sticky;\n",
       "  top: 0;\n",
       "  box-shadow: 0 -1px inset;\n",
       "}\n",
       "#h2o-table-18 .h2o-table tbody {\n",
       "  overflow: auto;\n",
       "}\n",
       "#h2o-table-18 .h2o-table th,\n",
       "#h2o-table-18 .h2o-table td {\n",
       "  text-align: right;\n",
       "  /* border: 1px solid; */\n",
       "}\n",
       "#h2o-table-18 .h2o-table tr:nth-child(even) {\n",
       "  /* background: #F5F5F5 */\n",
       "}\n",
       "\n",
       "</style>      \n",
       "<div id=\"h2o-table-18\" class=\"h2o-container\">\n",
       "  <table class=\"h2o-table\">\n",
       "    <caption></caption>\n",
       "    <thead></thead>\n",
       "    <tbody><tr><td>H2O_cluster_uptime:</td>\n",
       "<td>15 hours 48 mins</td></tr>\n",
       "<tr><td>H2O_cluster_timezone:</td>\n",
       "<td>America/New_York</td></tr>\n",
       "<tr><td>H2O_data_parsing_timezone:</td>\n",
       "<td>UTC</td></tr>\n",
       "<tr><td>H2O_cluster_version:</td>\n",
       "<td>3.44.0.2</td></tr>\n",
       "<tr><td>H2O_cluster_version_age:</td>\n",
       "<td>22 days</td></tr>\n",
       "<tr><td>H2O_cluster_name:</td>\n",
       "<td>H2O_from_python_vickyma_rxjfot</td></tr>\n",
       "<tr><td>H2O_cluster_total_nodes:</td>\n",
       "<td>1</td></tr>\n",
       "<tr><td>H2O_cluster_free_memory:</td>\n",
       "<td>678 Mb</td></tr>\n",
       "<tr><td>H2O_cluster_total_cores:</td>\n",
       "<td>4</td></tr>\n",
       "<tr><td>H2O_cluster_allowed_cores:</td>\n",
       "<td>4</td></tr>\n",
       "<tr><td>H2O_cluster_status:</td>\n",
       "<td>locked, healthy</td></tr>\n",
       "<tr><td>H2O_connection_url:</td>\n",
       "<td>http://localhost:54321</td></tr>\n",
       "<tr><td>H2O_connection_proxy:</td>\n",
       "<td>{\"http\": null, \"https\": null}</td></tr>\n",
       "<tr><td>H2O_internal_security:</td>\n",
       "<td>False</td></tr>\n",
       "<tr><td>Python_version:</td>\n",
       "<td>3.9.13 final</td></tr></tbody>\n",
       "  </table>\n",
       "</div>\n"
      ],
      "text/plain": [
       "--------------------------  ------------------------------\n",
       "H2O_cluster_uptime:         15 hours 48 mins\n",
       "H2O_cluster_timezone:       America/New_York\n",
       "H2O_data_parsing_timezone:  UTC\n",
       "H2O_cluster_version:        3.44.0.2\n",
       "H2O_cluster_version_age:    22 days\n",
       "H2O_cluster_name:           H2O_from_python_vickyma_rxjfot\n",
       "H2O_cluster_total_nodes:    1\n",
       "H2O_cluster_free_memory:    678 Mb\n",
       "H2O_cluster_total_cores:    4\n",
       "H2O_cluster_allowed_cores:  4\n",
       "H2O_cluster_status:         locked, healthy\n",
       "H2O_connection_url:         http://localhost:54321\n",
       "H2O_connection_proxy:       {\"http\": null, \"https\": null}\n",
       "H2O_internal_security:      False\n",
       "Python_version:             3.9.13 final\n",
       "--------------------------  ------------------------------"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import h2o\n",
    "from h2o.estimators.random_forest import H2ORandomForestEstimator\n",
    "from h2o.grid.grid_search import H2OGridSearch\n",
    "\n",
    "h2o.init()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "eb0b9ed0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "drf Grid Build progress: |███████████████████████████████████████████████████████| (done) 100%\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "<style>\n",
       "\n",
       "#h2o-table-19.h2o-container {\n",
       "  overflow-x: auto;\n",
       "}\n",
       "#h2o-table-19 .h2o-table {\n",
       "  /* width: 100%; */\n",
       "  margin-top: 1em;\n",
       "  margin-bottom: 1em;\n",
       "}\n",
       "#h2o-table-19 .h2o-table caption {\n",
       "  white-space: nowrap;\n",
       "  caption-side: top;\n",
       "  text-align: left;\n",
       "  /* margin-left: 1em; */\n",
       "  margin: 0;\n",
       "  font-size: larger;\n",
       "}\n",
       "#h2o-table-19 .h2o-table thead {\n",
       "  white-space: nowrap; \n",
       "  position: sticky;\n",
       "  top: 0;\n",
       "  box-shadow: 0 -1px inset;\n",
       "}\n",
       "#h2o-table-19 .h2o-table tbody {\n",
       "  overflow: auto;\n",
       "}\n",
       "#h2o-table-19 .h2o-table th,\n",
       "#h2o-table-19 .h2o-table td {\n",
       "  text-align: right;\n",
       "  /* border: 1px solid; */\n",
       "}\n",
       "#h2o-table-19 .h2o-table tr:nth-child(even) {\n",
       "  /* background: #F5F5F5 */\n",
       "}\n",
       "\n",
       "</style>      \n",
       "<div id=\"h2o-table-19\" class=\"h2o-container\">\n",
       "  <table class=\"h2o-table\">\n",
       "    <caption>Hyper-Parameter Search Summary: ordered by increasing residual_deviance</caption>\n",
       "    <thead><tr><th></th>\n",
       "<th>col_sample_rate_per_tree</th>\n",
       "<th>max_depth</th>\n",
       "<th>ntrees</th>\n",
       "<th>sample_rate</th>\n",
       "<th>model_ids</th>\n",
       "<th>residual_deviance</th></tr></thead>\n",
       "    <tbody><tr><td></td>\n",
       "<td>0.2</td>\n",
       "<td>5.0</td>\n",
       "<td>300.0</td>\n",
       "<td>0.8</td>\n",
       "<td>Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_22</td>\n",
       "<td>0.1482217</td></tr>\n",
       "<tr><td></td>\n",
       "<td>0.2</td>\n",
       "<td>5.0</td>\n",
       "<td>100.0</td>\n",
       "<td>0.8</td>\n",
       "<td>Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_4</td>\n",
       "<td>0.1482793</td></tr>\n",
       "<tr><td></td>\n",
       "<td>0.5</td>\n",
       "<td>5.0</td>\n",
       "<td>300.0</td>\n",
       "<td>0.8</td>\n",
       "<td>Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_23</td>\n",
       "<td>0.1483928</td></tr>\n",
       "<tr><td></td>\n",
       "<td>0.2</td>\n",
       "<td>9.0</td>\n",
       "<td>300.0</td>\n",
       "<td>0.8</td>\n",
       "<td>Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_25</td>\n",
       "<td>0.1484326</td></tr>\n",
       "<tr><td></td>\n",
       "<td>0.2</td>\n",
       "<td>9.0</td>\n",
       "<td>200.0</td>\n",
       "<td>0.8</td>\n",
       "<td>Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_16</td>\n",
       "<td>0.1485371</td></tr>\n",
       "<tr><td></td>\n",
       "<td>0.5</td>\n",
       "<td>5.0</td>\n",
       "<td>200.0</td>\n",
       "<td>0.8</td>\n",
       "<td>Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_14</td>\n",
       "<td>0.1485387</td></tr>\n",
       "<tr><td></td>\n",
       "<td>1.0</td>\n",
       "<td>5.0</td>\n",
       "<td>200.0</td>\n",
       "<td>0.8</td>\n",
       "<td>Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_15</td>\n",
       "<td>0.1485524</td></tr>\n",
       "<tr><td></td>\n",
       "<td>0.2</td>\n",
       "<td>5.0</td>\n",
       "<td>200.0</td>\n",
       "<td>0.8</td>\n",
       "<td>Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_13</td>\n",
       "<td>0.1485965</td></tr>\n",
       "<tr><td></td>\n",
       "<td>1.0</td>\n",
       "<td>5.0</td>\n",
       "<td>300.0</td>\n",
       "<td>0.8</td>\n",
       "<td>Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_24</td>\n",
       "<td>0.1486787</td></tr>\n",
       "<tr><td></td>\n",
       "<td>0.2</td>\n",
       "<td>3.0</td>\n",
       "<td>300.0</td>\n",
       "<td>0.8</td>\n",
       "<td>Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_19</td>\n",
       "<td>0.1487143</td></tr>\n",
       "<tr><td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td></tr>\n",
       "<tr><td></td>\n",
       "<td>1.0</td>\n",
       "<td>9.0</td>\n",
       "<td>200.0</td>\n",
       "<td>1.0</td>\n",
       "<td>Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_45</td>\n",
       "<td>nan</td></tr>\n",
       "<tr><td></td>\n",
       "<td>0.2</td>\n",
       "<td>3.0</td>\n",
       "<td>300.0</td>\n",
       "<td>1.0</td>\n",
       "<td>Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_46</td>\n",
       "<td>nan</td></tr>\n",
       "<tr><td></td>\n",
       "<td>0.5</td>\n",
       "<td>3.0</td>\n",
       "<td>300.0</td>\n",
       "<td>1.0</td>\n",
       "<td>Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_47</td>\n",
       "<td>nan</td></tr>\n",
       "<tr><td></td>\n",
       "<td>1.0</td>\n",
       "<td>3.0</td>\n",
       "<td>300.0</td>\n",
       "<td>1.0</td>\n",
       "<td>Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_48</td>\n",
       "<td>nan</td></tr>\n",
       "<tr><td></td>\n",
       "<td>0.2</td>\n",
       "<td>5.0</td>\n",
       "<td>300.0</td>\n",
       "<td>1.0</td>\n",
       "<td>Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_49</td>\n",
       "<td>nan</td></tr>\n",
       "<tr><td></td>\n",
       "<td>0.5</td>\n",
       "<td>5.0</td>\n",
       "<td>300.0</td>\n",
       "<td>1.0</td>\n",
       "<td>Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_50</td>\n",
       "<td>nan</td></tr>\n",
       "<tr><td></td>\n",
       "<td>1.0</td>\n",
       "<td>5.0</td>\n",
       "<td>300.0</td>\n",
       "<td>1.0</td>\n",
       "<td>Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_51</td>\n",
       "<td>nan</td></tr>\n",
       "<tr><td></td>\n",
       "<td>0.2</td>\n",
       "<td>9.0</td>\n",
       "<td>300.0</td>\n",
       "<td>1.0</td>\n",
       "<td>Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_52</td>\n",
       "<td>nan</td></tr>\n",
       "<tr><td></td>\n",
       "<td>0.5</td>\n",
       "<td>9.0</td>\n",
       "<td>300.0</td>\n",
       "<td>1.0</td>\n",
       "<td>Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_53</td>\n",
       "<td>nan</td></tr>\n",
       "<tr><td></td>\n",
       "<td>1.0</td>\n",
       "<td>9.0</td>\n",
       "<td>300.0</td>\n",
       "<td>1.0</td>\n",
       "<td>Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_54</td>\n",
       "<td>nan</td></tr></tbody>\n",
       "  </table>\n",
       "</div>\n",
       "<pre style='font-size: smaller; margin-bottom: 1em;'>[54 rows x 7 columns]</pre>"
      ],
      "text/plain": [
       "Hyper-Parameter Search Summary: ordered by increasing residual_deviance\n",
       "     col_sample_rate_per_tree    max_depth    ntrees    sample_rate    model_ids                                                                                              residual_deviance\n",
       "---  --------------------------  -----------  --------  -------------  -----------------------------------------------------------------------------------------------------  -------------------\n",
       "     0.2                         5.0          300.0     0.8            Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_22  0.1482216545725569\n",
       "     0.2                         5.0          100.0     0.8            Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_4   0.14827934792029268\n",
       "     0.5                         5.0          300.0     0.8            Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_23  0.14839278944183865\n",
       "     0.2                         9.0          300.0     0.8            Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_25  0.14843255072586298\n",
       "     0.2                         9.0          200.0     0.8            Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_16  0.14853713368273\n",
       "     0.5                         5.0          200.0     0.8            Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_14  0.1485386710071823\n",
       "     1.0                         5.0          200.0     0.8            Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_15  0.148552447439614\n",
       "     0.2                         5.0          200.0     0.8            Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_13  0.14859652296587134\n",
       "     1.0                         5.0          300.0     0.8            Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_24  0.14867871918586859\n",
       "     0.2                         3.0          300.0     0.8            Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_19  0.14871433734084974\n",
       "---  ---                         ---          ---       ---            ---                                                                                                    ---\n",
       "     1.0                         9.0          200.0     1.0            Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_45  nan\n",
       "     0.2                         3.0          300.0     1.0            Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_46  nan\n",
       "     0.5                         3.0          300.0     1.0            Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_47  nan\n",
       "     1.0                         3.0          300.0     1.0            Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_48  nan\n",
       "     0.2                         5.0          300.0     1.0            Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_49  nan\n",
       "     0.5                         5.0          300.0     1.0            Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_50  nan\n",
       "     1.0                         5.0          300.0     1.0            Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_51  nan\n",
       "     0.2                         9.0          300.0     1.0            Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_52  nan\n",
       "     0.5                         9.0          300.0     1.0            Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_53  nan\n",
       "     1.0                         9.0          300.0     1.0            Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_54  nan\n",
       "[54 rows x 7 columns]\n"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rf_params1 = {'max_depth': [3, 5, 9],\n",
    "                'sample_rate': [0.8, 1.0],\n",
    "                'col_sample_rate_per_tree': [0.2, 0.5, 1.0],\n",
    "                'ntrees' : [100,200,300]\n",
    "                #'min_rows' :[50,100]\n",
    "               }\n",
    "\n",
    "rf_model = H2ORandomForestEstimator()#nfolds=10, min_rows=100, balance_classes=True, seed=1234\n",
    "\n",
    "# Perform grid search\n",
    "grid = H2OGridSearch(rf_model, rf_params1)\n",
    "grid.train(x=predictors, y=target, training_frame=train_hex)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "26895d5c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "0.6297474358974359"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.metrics import roc_curve,auc\n",
    "from sklearn.metrics import average_precision_score\n",
    "from sklearn.metrics import precision_recall_curve\n",
    "def ROC_AUC_index(my_result,df,target):\n",
    "    y_actual = df[target].as_data_frame()\n",
    "    y_pred = my_result.predict(df).as_data_frame()\n",
    "    fpr = list()\n",
    "    tpr = list()\n",
    "    roc_auc = list()\n",
    "    fpr,tpr,_ = roc_curve(y_actual,y_pred)\n",
    "    roc_auc = auc(fpr,tpr)\n",
    "    return roc_auc\n",
    "\n",
    "def PR_index(my_result,df,target):\n",
    "    y_actual = df[target].as_data_frame()\n",
    "    y_pred = my_result.predict(df).as_data_frame()\n",
    "    average_precision = average_precision_score(y_actual,y_pred)\n",
    "    return average_precision\n",
    "\n",
    "ROC_AUC_index(grid.get_grid()[0],test_hex,'loan_default')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "8d2ec7fc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n"
     ]
    }
   ],
   "source": [
    "best_roc_index = 0\n",
    "best_pr_index = 0\n",
    "best_roc_auc = 0\n",
    "best_pr_score = 0\n",
    "for i in range(len(grid.get_grid())):\n",
    "  inter_grid=grid.get_grid()[i]\n",
    "\n",
    "# Evaluate ROC AUC\n",
    "  roc_auc = ROC_AUC_index(inter_grid, test_hex, target)\n",
    "  if roc_auc > best_roc_auc:\n",
    "      best_roc_auc = roc_auc\n",
    "      best_roc_index = i\n",
    "\n",
    "# Evaluate PR index\n",
    "  pr_score = PR_index(inter_grid, test_hex, target)\n",
    "  if pr_score > best_pr_score:\n",
    "      best_pr_score = pr_score\n",
    "      best_pr_index = i"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "aac02b78",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Best PR Index: 46\n",
      "Best PR Score: 0.2742625562903985\n"
     ]
    }
   ],
   "source": [
    "# Print the results\n",
    "print(\"Best PR Index:\", best_pr_index)\n",
    "print(\"Best PR Score:\", best_pr_score)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "0fa9a49b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style='margin: 1em 0 1em 0;'>Model Details\n",
       "=============\n",
       "H2ORandomForestEstimator : Distributed Random Forest\n",
       "Model Key: Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_47\n",
       "</pre>\n",
       "<div style='margin: 1em 0 1em 0;'>\n",
       "<style>\n",
       "\n",
       "#h2o-table-20.h2o-container {\n",
       "  overflow-x: auto;\n",
       "}\n",
       "#h2o-table-20 .h2o-table {\n",
       "  /* width: 100%; */\n",
       "  margin-top: 1em;\n",
       "  margin-bottom: 1em;\n",
       "}\n",
       "#h2o-table-20 .h2o-table caption {\n",
       "  white-space: nowrap;\n",
       "  caption-side: top;\n",
       "  text-align: left;\n",
       "  /* margin-left: 1em; */\n",
       "  margin: 0;\n",
       "  font-size: larger;\n",
       "}\n",
       "#h2o-table-20 .h2o-table thead {\n",
       "  white-space: nowrap; \n",
       "  position: sticky;\n",
       "  top: 0;\n",
       "  box-shadow: 0 -1px inset;\n",
       "}\n",
       "#h2o-table-20 .h2o-table tbody {\n",
       "  overflow: auto;\n",
       "}\n",
       "#h2o-table-20 .h2o-table th,\n",
       "#h2o-table-20 .h2o-table td {\n",
       "  text-align: right;\n",
       "  /* border: 1px solid; */\n",
       "}\n",
       "#h2o-table-20 .h2o-table tr:nth-child(even) {\n",
       "  /* background: #F5F5F5 */\n",
       "}\n",
       "\n",
       "</style>      \n",
       "<div id=\"h2o-table-20\" class=\"h2o-container\">\n",
       "  <table class=\"h2o-table\">\n",
       "    <caption>Model Summary: </caption>\n",
       "    <thead><tr><th></th>\n",
       "<th>number_of_trees</th>\n",
       "<th>number_of_internal_trees</th>\n",
       "<th>model_size_in_bytes</th>\n",
       "<th>min_depth</th>\n",
       "<th>max_depth</th>\n",
       "<th>mean_depth</th>\n",
       "<th>min_leaves</th>\n",
       "<th>max_leaves</th>\n",
       "<th>mean_leaves</th></tr></thead>\n",
       "    <tbody><tr><td></td>\n",
       "<td>300.0</td>\n",
       "<td>300.0</td>\n",
       "<td>50222.0</td>\n",
       "<td>3.0</td>\n",
       "<td>3.0</td>\n",
       "<td>3.0</td>\n",
       "<td>7.0</td>\n",
       "<td>8.0</td>\n",
       "<td>7.9566665</td></tr></tbody>\n",
       "  </table>\n",
       "</div>\n",
       "</div>\n",
       "<div style='margin: 1em 0 1em 0;'><pre style='margin: 1em 0 1em 0;'>ModelMetricsRegression: drf\n",
       "** Reported on train data. **\n",
       "\n",
       "MSE: NaN\n",
       "RMSE: NaN\n",
       "MAE: NaN\n",
       "RMSLE: NaN\n",
       "Mean Residual Deviance: NaN</pre></div>\n",
       "<div style='margin: 1em 0 1em 0;'>\n",
       "<style>\n",
       "\n",
       "#h2o-table-21.h2o-container {\n",
       "  overflow-x: auto;\n",
       "}\n",
       "#h2o-table-21 .h2o-table {\n",
       "  /* width: 100%; */\n",
       "  margin-top: 1em;\n",
       "  margin-bottom: 1em;\n",
       "}\n",
       "#h2o-table-21 .h2o-table caption {\n",
       "  white-space: nowrap;\n",
       "  caption-side: top;\n",
       "  text-align: left;\n",
       "  /* margin-left: 1em; */\n",
       "  margin: 0;\n",
       "  font-size: larger;\n",
       "}\n",
       "#h2o-table-21 .h2o-table thead {\n",
       "  white-space: nowrap; \n",
       "  position: sticky;\n",
       "  top: 0;\n",
       "  box-shadow: 0 -1px inset;\n",
       "}\n",
       "#h2o-table-21 .h2o-table tbody {\n",
       "  overflow: auto;\n",
       "}\n",
       "#h2o-table-21 .h2o-table th,\n",
       "#h2o-table-21 .h2o-table td {\n",
       "  text-align: right;\n",
       "  /* border: 1px solid; */\n",
       "}\n",
       "#h2o-table-21 .h2o-table tr:nth-child(even) {\n",
       "  /* background: #F5F5F5 */\n",
       "}\n",
       "\n",
       "</style>      \n",
       "<div id=\"h2o-table-21\" class=\"h2o-container\">\n",
       "  <table class=\"h2o-table\">\n",
       "    <caption>Scoring History: </caption>\n",
       "    <thead><tr><th></th>\n",
       "<th>timestamp</th>\n",
       "<th>duration</th>\n",
       "<th>number_of_trees</th>\n",
       "<th>training_rmse</th>\n",
       "<th>training_mae</th>\n",
       "<th>training_deviance</th></tr></thead>\n",
       "    <tbody><tr><td></td>\n",
       "<td>2023-11-30 13:10:55</td>\n",
       "<td> 2 min 22.556 sec</td>\n",
       "<td>0.0</td>\n",
       "<td>nan</td>\n",
       "<td>nan</td>\n",
       "<td>nan</td></tr></tbody>\n",
       "  </table>\n",
       "</div>\n",
       "</div>\n",
       "<div style='margin: 1em 0 1em 0;'>\n",
       "<style>\n",
       "\n",
       "#h2o-table-22.h2o-container {\n",
       "  overflow-x: auto;\n",
       "}\n",
       "#h2o-table-22 .h2o-table {\n",
       "  /* width: 100%; */\n",
       "  margin-top: 1em;\n",
       "  margin-bottom: 1em;\n",
       "}\n",
       "#h2o-table-22 .h2o-table caption {\n",
       "  white-space: nowrap;\n",
       "  caption-side: top;\n",
       "  text-align: left;\n",
       "  /* margin-left: 1em; */\n",
       "  margin: 0;\n",
       "  font-size: larger;\n",
       "}\n",
       "#h2o-table-22 .h2o-table thead {\n",
       "  white-space: nowrap; \n",
       "  position: sticky;\n",
       "  top: 0;\n",
       "  box-shadow: 0 -1px inset;\n",
       "}\n",
       "#h2o-table-22 .h2o-table tbody {\n",
       "  overflow: auto;\n",
       "}\n",
       "#h2o-table-22 .h2o-table th,\n",
       "#h2o-table-22 .h2o-table td {\n",
       "  text-align: right;\n",
       "  /* border: 1px solid; */\n",
       "}\n",
       "#h2o-table-22 .h2o-table tr:nth-child(even) {\n",
       "  /* background: #F5F5F5 */\n",
       "}\n",
       "\n",
       "</style>      \n",
       "<div id=\"h2o-table-22\" class=\"h2o-container\">\n",
       "  <table class=\"h2o-table\">\n",
       "    <caption>Variable Importances: </caption>\n",
       "    <thead><tr><th>variable</th>\n",
       "<th>relative_importance</th>\n",
       "<th>scaled_importance</th>\n",
       "<th>percentage</th></tr></thead>\n",
       "    <tbody><tr><td>TD013</td>\n",
       "<td>1561.9902344</td>\n",
       "<td>1.0</td>\n",
       "<td>0.2081387</td></tr>\n",
       "<tr><td>MB007</td>\n",
       "<td>1051.5545654</td>\n",
       "<td>0.6732146</td>\n",
       "<td>0.1401220</td></tr>\n",
       "<tr><td>TD009</td>\n",
       "<td>976.2847290</td>\n",
       "<td>0.6250261</td>\n",
       "<td>0.1300921</td></tr>\n",
       "<tr><td>TD005</td>\n",
       "<td>693.0708008</td>\n",
       "<td>0.4437101</td>\n",
       "<td>0.0923532</td></tr>\n",
       "<tr><td>AP003</td>\n",
       "<td>390.5816345</td>\n",
       "<td>0.2500538</td>\n",
       "<td>0.0520459</td></tr>\n",
       "<tr><td>TD014</td>\n",
       "<td>369.3778992</td>\n",
       "<td>0.2364790</td>\n",
       "<td>0.0492204</td></tr>\n",
       "<tr><td>PA029</td>\n",
       "<td>246.2154388</td>\n",
       "<td>0.1576293</td>\n",
       "<td>0.0328088</td></tr>\n",
       "<tr><td>TD010</td>\n",
       "<td>209.3697510</td>\n",
       "<td>0.1340404</td>\n",
       "<td>0.0278990</td></tr>\n",
       "<tr><td>TD023</td>\n",
       "<td>187.8090210</td>\n",
       "<td>0.1202370</td>\n",
       "<td>0.0250260</td></tr>\n",
       "<tr><td>CR015</td>\n",
       "<td>180.7188110</td>\n",
       "<td>0.1156978</td>\n",
       "<td>0.0240812</td></tr>\n",
       "<tr><td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td></tr>\n",
       "<tr><td>TD002</td>\n",
       "<td>12.0875330</td>\n",
       "<td>0.0077385</td>\n",
       "<td>0.0016107</td></tr>\n",
       "<tr><td>CR018</td>\n",
       "<td>2.8365149</td>\n",
       "<td>0.0018160</td>\n",
       "<td>0.0003780</td></tr>\n",
       "<tr><td>AP002</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>AP009</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD025</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD026</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD027</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD028</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD029</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD044</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr></tbody>\n",
       "  </table>\n",
       "</div>\n",
       "<pre style='font-size: smaller; margin-bottom: 1em;'>[40 rows x 4 columns]</pre></div><pre style=\"font-size: smaller; margin: 1em 0 0 0;\">\n",
       "\n",
       "[tips]\n",
       "Use `model.explain()` to inspect the model.\n",
       "--\n",
       "Use `h2o.display.toggle_user_tips()` to switch on/off this section.</pre>"
      ],
      "text/plain": [
       "Model Details\n",
       "=============\n",
       "H2ORandomForestEstimator : Distributed Random Forest\n",
       "Model Key: Grid_DRF_Key_Frame__upload_9a2f0b1f54f276aafa823d0bcb114155.hex_model_python_1701310331368_4_model_47\n",
       "\n",
       "\n",
       "Model Summary: \n",
       "    number_of_trees    number_of_internal_trees    model_size_in_bytes    min_depth    max_depth    mean_depth    min_leaves    max_leaves    mean_leaves\n",
       "--  -----------------  --------------------------  ---------------------  -----------  -----------  ------------  ------------  ------------  -------------\n",
       "    300                300                         50222                  3            3            3             7             8             7.95667\n",
       "\n",
       "ModelMetricsRegression: drf\n",
       "** Reported on train data. **\n",
       "\n",
       "MSE: NaN\n",
       "RMSE: NaN\n",
       "MAE: NaN\n",
       "RMSLE: NaN\n",
       "Mean Residual Deviance: NaN\n",
       "\n",
       "Scoring History: \n",
       "    timestamp            duration          number_of_trees    training_rmse    training_mae    training_deviance\n",
       "--  -------------------  ----------------  -----------------  ---------------  --------------  -------------------\n",
       "    2023-11-30 13:10:55  2 min 22.556 sec  0                  nan              nan             nan\n",
       "\n",
       "Variable Importances: \n",
       "variable    relative_importance    scaled_importance      percentage\n",
       "----------  ---------------------  ---------------------  ---------------------\n",
       "TD013       1561.990234375         1.0                    0.20813871866307007\n",
       "MB007       1051.5545654296875     0.6732145581245882     0.1401220155133767\n",
       "TD009       976.2847290039062      0.6250261413411126     0.1300921401896621\n",
       "TD005       693.07080078125        0.44371007291128733    0.09235324603365273\n",
       "AP003       390.5816345214844      0.2500538261545329     0.052045882972602556\n",
       "TD014       369.3778991699219      0.23647900674470046    0.04922043745455745\n",
       "PA029       246.21543884277344     0.15762930742092107    0.03280876207033767\n",
       "TD010       209.3697509765625      0.13404037129613536    0.027898991130699772\n",
       "TD023       187.80902099609375     0.12023700075899763    0.025025975273868347\n",
       "CR015       180.71881103515625     0.11569778546500796    0.02408118881884153\n",
       "---         ---                    ---                    ---\n",
       "TD002       12.087532997131348     0.007738545818737425   0.0016106910110274663\n",
       "CR018       2.836514949798584      0.0018159620254819071  0.0003779720091245975\n",
       "AP002       0.0                    0.0                    0.0\n",
       "AP009       0.0                    0.0                    0.0\n",
       "TD025       0.0                    0.0                    0.0\n",
       "TD026       0.0                    0.0                    0.0\n",
       "TD027       0.0                    0.0                    0.0\n",
       "TD028       0.0                    0.0                    0.0\n",
       "TD029       0.0                    0.0                    0.0\n",
       "TD044       0.0                    0.0                    0.0\n",
       "[40 rows x 4 columns]\n",
       "\n",
       "\n",
       "[tips]\n",
       "Use `model.explain()` to inspect the model.\n",
       "--\n",
       "Use `h2o.display.toggle_user_tips()` to switch on/off this section."
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "best_rf_model = grid.get_grid()[46]\n",
    "best_rf_model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "76b1f928",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>actual</th>\n",
       "      <th>non_actual</th>\n",
       "      <th>cum_count</th>\n",
       "      <th>cum_actual</th>\n",
       "      <th>cum_non_actual</th>\n",
       "      <th>percent_cum_actual</th>\n",
       "      <th>percent_cum_non_actual</th>\n",
       "      <th>if_random</th>\n",
       "      <th>lift</th>\n",
       "      <th>K_S</th>\n",
       "      <th>gain</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>decile</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>320</td>\n",
       "      <td>102</td>\n",
       "      <td>218</td>\n",
       "      <td>320</td>\n",
       "      <td>102</td>\n",
       "      <td>218</td>\n",
       "      <td>0.17</td>\n",
       "      <td>0.08</td>\n",
       "      <td>60.0</td>\n",
       "      <td>1.70</td>\n",
       "      <td>9.0</td>\n",
       "      <td>31.87</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>320</td>\n",
       "      <td>81</td>\n",
       "      <td>239</td>\n",
       "      <td>640</td>\n",
       "      <td>183</td>\n",
       "      <td>457</td>\n",
       "      <td>0.30</td>\n",
       "      <td>0.18</td>\n",
       "      <td>120.0</td>\n",
       "      <td>1.52</td>\n",
       "      <td>12.0</td>\n",
       "      <td>28.59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>320</td>\n",
       "      <td>75</td>\n",
       "      <td>245</td>\n",
       "      <td>960</td>\n",
       "      <td>258</td>\n",
       "      <td>702</td>\n",
       "      <td>0.43</td>\n",
       "      <td>0.27</td>\n",
       "      <td>180.0</td>\n",
       "      <td>1.43</td>\n",
       "      <td>16.0</td>\n",
       "      <td>26.88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>320</td>\n",
       "      <td>64</td>\n",
       "      <td>256</td>\n",
       "      <td>1280</td>\n",
       "      <td>322</td>\n",
       "      <td>958</td>\n",
       "      <td>0.54</td>\n",
       "      <td>0.37</td>\n",
       "      <td>240.0</td>\n",
       "      <td>1.34</td>\n",
       "      <td>17.0</td>\n",
       "      <td>25.16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>320</td>\n",
       "      <td>63</td>\n",
       "      <td>257</td>\n",
       "      <td>1600</td>\n",
       "      <td>385</td>\n",
       "      <td>1215</td>\n",
       "      <td>0.64</td>\n",
       "      <td>0.47</td>\n",
       "      <td>300.0</td>\n",
       "      <td>1.28</td>\n",
       "      <td>17.0</td>\n",
       "      <td>24.06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>320</td>\n",
       "      <td>49</td>\n",
       "      <td>271</td>\n",
       "      <td>1920</td>\n",
       "      <td>434</td>\n",
       "      <td>1486</td>\n",
       "      <td>0.72</td>\n",
       "      <td>0.57</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.21</td>\n",
       "      <td>15.0</td>\n",
       "      <td>22.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>320</td>\n",
       "      <td>54</td>\n",
       "      <td>266</td>\n",
       "      <td>2240</td>\n",
       "      <td>488</td>\n",
       "      <td>1752</td>\n",
       "      <td>0.81</td>\n",
       "      <td>0.67</td>\n",
       "      <td>420.0</td>\n",
       "      <td>1.16</td>\n",
       "      <td>14.0</td>\n",
       "      <td>21.79</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>320</td>\n",
       "      <td>46</td>\n",
       "      <td>274</td>\n",
       "      <td>2560</td>\n",
       "      <td>534</td>\n",
       "      <td>2026</td>\n",
       "      <td>0.89</td>\n",
       "      <td>0.78</td>\n",
       "      <td>480.0</td>\n",
       "      <td>1.11</td>\n",
       "      <td>11.0</td>\n",
       "      <td>20.86</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>320</td>\n",
       "      <td>37</td>\n",
       "      <td>283</td>\n",
       "      <td>2880</td>\n",
       "      <td>571</td>\n",
       "      <td>2309</td>\n",
       "      <td>0.95</td>\n",
       "      <td>0.89</td>\n",
       "      <td>540.0</td>\n",
       "      <td>1.06</td>\n",
       "      <td>6.0</td>\n",
       "      <td>19.83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>320</td>\n",
       "      <td>29</td>\n",
       "      <td>291</td>\n",
       "      <td>3200</td>\n",
       "      <td>600</td>\n",
       "      <td>2600</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>600.0</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.75</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        count  actual  non_actual  cum_count  cum_actual  cum_non_actual  \\\n",
       "decile                                                                     \n",
       "0         320     102         218        320         102             218   \n",
       "1         320      81         239        640         183             457   \n",
       "2         320      75         245        960         258             702   \n",
       "3         320      64         256       1280         322             958   \n",
       "4         320      63         257       1600         385            1215   \n",
       "5         320      49         271       1920         434            1486   \n",
       "6         320      54         266       2240         488            1752   \n",
       "7         320      46         274       2560         534            2026   \n",
       "8         320      37         283       2880         571            2309   \n",
       "9         320      29         291       3200         600            2600   \n",
       "\n",
       "        percent_cum_actual  percent_cum_non_actual  if_random  lift   K_S  \\\n",
       "decile                                                                      \n",
       "0                     0.17                    0.08       60.0  1.70   9.0   \n",
       "1                     0.30                    0.18      120.0  1.52  12.0   \n",
       "2                     0.43                    0.27      180.0  1.43  16.0   \n",
       "3                     0.54                    0.37      240.0  1.34  17.0   \n",
       "4                     0.64                    0.47      300.0  1.28  17.0   \n",
       "5                     0.72                    0.57      360.0  1.21  15.0   \n",
       "6                     0.81                    0.67      420.0  1.16  14.0   \n",
       "7                     0.89                    0.78      480.0  1.11  11.0   \n",
       "8                     0.95                    0.89      540.0  1.06   6.0   \n",
       "9                     1.00                    1.00      600.0  1.00   0.0   \n",
       "\n",
       "         gain  \n",
       "decile         \n",
       "0       31.87  \n",
       "1       28.59  \n",
       "2       26.88  \n",
       "3       25.16  \n",
       "4       24.06  \n",
       "5       22.60  \n",
       "6       21.79  \n",
       "7       20.86  \n",
       "8       19.83  \n",
       "9       18.75  "
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "createGains(best_rf_model)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "341e2dae",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "\n",
      "   * ROC curve: The ROC curve plots the true positive rate vs. the false rositive sate\n",
      "\n",
      "\t  * The area under the curve (AUC): A value between 0.5 (random) and 1.0 (perfect), measuring the prediction accuracy\n",
      "\n",
      "   * Recall (R) = The number of true positives / (the number of true positives + the number of false negatives)\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "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ldX+t1jzcd2ZWXapoKAIBARswq1bb7S2jRpVA3/80Rimpuy8JCIiIiLKSkyyskJkEHBxBnBjqWa7V60sW2L633+lAhdhYZorqpmZmWDRopYYOPCzLLkuERERERFpYpJlaGG3tedgqXz+fZZccvXq6xg8eC+SkzXnWhUoYI3t2zujXj3fLLkuERERERFpY5JlaKklWH1uAq6pbMsghUKJH344ij//PK+1rUyZgti7txuKFnU26DWJiIiIiChtTLIM6coczcdFGgDN1gD2hl+XSgiBzp0DsWPHXa1tzZsXx+bNHeHgYGnw6xIRERERUdpYBcFQzk0GTo7WbOt0LEsSLACQyWRo1aqEVvuoUTWwd283JlhEREREREbCJMsQlHLg/BTNtq5ns/yy/fpVxpgxNQEA5uYmWL48ALNnN2UFQSIiIiIiI+JwQUM4PFjz8YBHgFOxbLn07783wtu3cRgwoDLq1vXJlmsSEREREVHqmGQZwu1VKd971TJ4giWEgCyV0u+mpiZYs6atQa9HREREREQZx3FlmXWwr+bjNrsMevqoqES0bbsF+/c/NOh5iYiIiIgoazDJyozQS8DtNZptNgUNdvonT96jVq0V2LPnPrp2DcTt228Mdm4iIiIiIsoaTLIyKvwesKGaZtvwGIOd/syZZ6hefTlu334LAIiOTkJAwCaEhcUZ7BpERERERGR4TLIyanVpzceNlwHmtgY59cqV19Cw4VqthCo6OglBQREGuQYREREREWUNFr4whDq/ARUGZvo0CoUS48YdwezZF7S2lS1bEHv3doOfn3Omr0NERERERFmHSZa+drUFHu/WbKv2faZPGxWViG7dtusscNGyZQls3NiBCwwTEREREeUCTLL0cWO5doJlAE+evEfr1pvU868+9N13NfHbb424wDARERERUS7BJEsfD7ZpPnYsCvS6lqlTnj79DO3bb0F4eLxGu7m5CZYsaYV+/Spn6vyUfkIIyOVyKBQKY4dClGuZmprCzMws1bX9iIiI8gMmWemVEAE8O5zyuOdVwD1zCdCKFVfx1Vf/IDlZqdHu6mqDHTs6o04dn0ydn9IvKSkJISEhiItj9UaizLKxsYGnpycsLCyMHQoREZFRMMlKj9jXwGIPzTanYpk65bhxR/DHH+e02suVc8OePV1Z4CIbKZVKPH36FKampvDy8oKFhQU/hSfK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\n",
      "text/plain": [
       "<Figure size 1000x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ROC_AUC(best_rf_model,test_hex,'loan_default')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "498344ce",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "max depth = 3\n",
      "sample rate = 1.0\n",
      "col sample rate = 0.5\n",
      "ntrees = 300\n",
      "min_rows = 1.0\n"
     ]
    }
   ],
   "source": [
    "best_rf_model_params = best_rf_model.params\n",
    "max_depth_value = best_rf_model_params['max_depth']['actual']\n",
    "sample_rate_value = best_rf_model_params['sample_rate']['actual']\n",
    "col_sample_rate_value = best_rf_model_params['col_sample_rate_per_tree']['actual']\n",
    "ntrees_value = best_rf_model_params['ntrees']['actual']\n",
    "min_rows = best_rf_model_params['min_rows']['actual']\n",
    "print(\"max depth =\",max_depth_value)\n",
    "print (\"sample rate =\", sample_rate_value)\n",
    "print(\"col sample rate =\", col_sample_rate_value)\n",
    "print(\"ntrees =\", ntrees_value)\n",
    "print(\"min_rows =\", min_rows)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e0703ccd",
   "metadata": {},
   "source": [
    "### Now the code works fine with the small dataset, we can model with the entire dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "3deb49d8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "drf Model Build progress: |██████████████████████████████████████████████████████| (done) 100%\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<pre style='margin: 1em 0 1em 0;'>Model Details\n",
       "=============\n",
       "H2ORandomForestEstimator : Distributed Random Forest\n",
       "Model Key: rf_v2\n",
       "</pre>\n",
       "<div style='margin: 1em 0 1em 0;'>\n",
       "<style>\n",
       "\n",
       "#h2o-table-9.h2o-container {\n",
       "  overflow-x: auto;\n",
       "}\n",
       "#h2o-table-9 .h2o-table {\n",
       "  /* width: 100%; */\n",
       "  margin-top: 1em;\n",
       "  margin-bottom: 1em;\n",
       "}\n",
       "#h2o-table-9 .h2o-table caption {\n",
       "  white-space: nowrap;\n",
       "  caption-side: top;\n",
       "  text-align: left;\n",
       "  /* margin-left: 1em; */\n",
       "  margin: 0;\n",
       "  font-size: larger;\n",
       "}\n",
       "#h2o-table-9 .h2o-table thead {\n",
       "  white-space: nowrap; \n",
       "  position: sticky;\n",
       "  top: 0;\n",
       "  box-shadow: 0 -1px inset;\n",
       "}\n",
       "#h2o-table-9 .h2o-table tbody {\n",
       "  overflow: auto;\n",
       "}\n",
       "#h2o-table-9 .h2o-table th,\n",
       "#h2o-table-9 .h2o-table td {\n",
       "  text-align: right;\n",
       "  /* border: 1px solid; */\n",
       "}\n",
       "#h2o-table-9 .h2o-table tr:nth-child(even) {\n",
       "  /* background: #F5F5F5 */\n",
       "}\n",
       "\n",
       "</style>      \n",
       "<div id=\"h2o-table-9\" class=\"h2o-container\">\n",
       "  <table class=\"h2o-table\">\n",
       "    <caption>Model Summary: </caption>\n",
       "    <thead><tr><th></th>\n",
       "<th>number_of_trees</th>\n",
       "<th>number_of_internal_trees</th>\n",
       "<th>model_size_in_bytes</th>\n",
       "<th>min_depth</th>\n",
       "<th>max_depth</th>\n",
       "<th>mean_depth</th>\n",
       "<th>min_leaves</th>\n",
       "<th>max_leaves</th>\n",
       "<th>mean_leaves</th></tr></thead>\n",
       "    <tbody><tr><td></td>\n",
       "<td>300.0</td>\n",
       "<td>300.0</td>\n",
       "<td>107997.0</td>\n",
       "<td>6.0</td>\n",
       "<td>11.0</td>\n",
       "<td>7.66</td>\n",
       "<td>19.0</td>\n",
       "<td>25.0</td>\n",
       "<td>22.45</td></tr></tbody>\n",
       "  </table>\n",
       "</div>\n",
       "</div>\n",
       "<div style='margin: 1em 0 1em 0;'><pre style='margin: 1em 0 1em 0;'>ModelMetricsRegression: drf\n",
       "** Reported on train data. **\n",
       "\n",
       "MSE: 0.14767353573534184\n",
       "RMSE: 0.38428314526575563\n",
       "MAE: 0.2957980576763411\n",
       "RMSLE: 0.2694211114439255\n",
       "Mean Residual Deviance: 0.14767353573534184</pre></div>\n",
       "<div style='margin: 1em 0 1em 0;'><pre style='margin: 1em 0 1em 0;'>ModelMetricsRegression: drf\n",
       "** Reported on cross-validation data. **\n",
       "\n",
       "MSE: 0.1477604099297664\n",
       "RMSE: 0.3843961627406892\n",
       "MAE: 0.29597600286172465\n",
       "RMSLE: 0.26950533579774466\n",
       "Mean Residual Deviance: 0.1477604099297664</pre></div>\n",
       "<div style='margin: 1em 0 1em 0;'>\n",
       "<style>\n",
       "\n",
       "#h2o-table-10.h2o-container {\n",
       "  overflow-x: auto;\n",
       "}\n",
       "#h2o-table-10 .h2o-table {\n",
       "  /* width: 100%; */\n",
       "  margin-top: 1em;\n",
       "  margin-bottom: 1em;\n",
       "}\n",
       "#h2o-table-10 .h2o-table caption {\n",
       "  white-space: nowrap;\n",
       "  caption-side: top;\n",
       "  text-align: left;\n",
       "  /* margin-left: 1em; */\n",
       "  margin: 0;\n",
       "  font-size: larger;\n",
       "}\n",
       "#h2o-table-10 .h2o-table thead {\n",
       "  white-space: nowrap; \n",
       "  position: sticky;\n",
       "  top: 0;\n",
       "  box-shadow: 0 -1px inset;\n",
       "}\n",
       "#h2o-table-10 .h2o-table tbody {\n",
       "  overflow: auto;\n",
       "}\n",
       "#h2o-table-10 .h2o-table th,\n",
       "#h2o-table-10 .h2o-table td {\n",
       "  text-align: right;\n",
       "  /* border: 1px solid; */\n",
       "}\n",
       "#h2o-table-10 .h2o-table tr:nth-child(even) {\n",
       "  /* background: #F5F5F5 */\n",
       "}\n",
       "\n",
       "</style>      \n",
       "<div id=\"h2o-table-10\" class=\"h2o-container\">\n",
       "  <table class=\"h2o-table\">\n",
       "    <caption>Cross-Validation Metrics Summary: </caption>\n",
       "    <thead><tr><th></th>\n",
       "<th>mean</th>\n",
       "<th>sd</th>\n",
       "<th>cv_1_valid</th>\n",
       "<th>cv_2_valid</th>\n",
       "<th>cv_3_valid</th>\n",
       "<th>cv_4_valid</th>\n",
       "<th>cv_5_valid</th>\n",
       "<th>cv_6_valid</th>\n",
       "<th>cv_7_valid</th>\n",
       "<th>cv_8_valid</th>\n",
       "<th>cv_9_valid</th>\n",
       "<th>cv_10_valid</th></tr></thead>\n",
       "    <tbody><tr><td>mae</td>\n",
       "<td>0.2958619</td>\n",
       "<td>0.0105649</td>\n",
       "<td>0.2898653</td>\n",
       "<td>0.2884218</td>\n",
       "<td>0.2988107</td>\n",
       "<td>0.3006485</td>\n",
       "<td>0.2928425</td>\n",
       "<td>0.3148344</td>\n",
       "<td>0.2851892</td>\n",
       "<td>0.2990153</td>\n",
       "<td>0.2806215</td>\n",
       "<td>0.3083699</td></tr>\n",
       "<tr><td>mean_residual_deviance</td>\n",
       "<td>0.1476049</td>\n",
       "<td>0.0117422</td>\n",
       "<td>0.1409761</td>\n",
       "<td>0.1414926</td>\n",
       "<td>0.1520571</td>\n",
       "<td>0.1534992</td>\n",
       "<td>0.1461121</td>\n",
       "<td>0.1678841</td>\n",
       "<td>0.1324742</td>\n",
       "<td>0.1492754</td>\n",
       "<td>0.1310470</td>\n",
       "<td>0.1612311</td></tr>\n",
       "<tr><td>mse</td>\n",
       "<td>0.1476049</td>\n",
       "<td>0.0117422</td>\n",
       "<td>0.1409761</td>\n",
       "<td>0.1414926</td>\n",
       "<td>0.1520571</td>\n",
       "<td>0.1534992</td>\n",
       "<td>0.1461121</td>\n",
       "<td>0.1678841</td>\n",
       "<td>0.1324742</td>\n",
       "<td>0.1492754</td>\n",
       "<td>0.1310470</td>\n",
       "<td>0.1612311</td></tr>\n",
       "<tr><td>r2</td>\n",
       "<td>0.0287920</td>\n",
       "<td>0.0137831</td>\n",
       "<td>0.0086205</td>\n",
       "<td>0.0396453</td>\n",
       "<td>0.0410812</td>\n",
       "<td>0.0347524</td>\n",
       "<td>0.0503409</td>\n",
       "<td>0.0253746</td>\n",
       "<td>0.0139032</td>\n",
       "<td>0.0120922</td>\n",
       "<td>0.0286377</td>\n",
       "<td>0.0334718</td></tr>\n",
       "<tr><td>residual_deviance</td>\n",
       "<td>0.1476049</td>\n",
       "<td>0.0117422</td>\n",
       "<td>0.1409761</td>\n",
       "<td>0.1414926</td>\n",
       "<td>0.1520571</td>\n",
       "<td>0.1534992</td>\n",
       "<td>0.1461121</td>\n",
       "<td>0.1678841</td>\n",
       "<td>0.1324742</td>\n",
       "<td>0.1492754</td>\n",
       "<td>0.1310470</td>\n",
       "<td>0.1612311</td></tr>\n",
       "<tr><td>rmse</td>\n",
       "<td>0.3839212</td>\n",
       "<td>0.0152529</td>\n",
       "<td>0.3754678</td>\n",
       "<td>0.376155</td>\n",
       "<td>0.3899451</td>\n",
       "<td>0.3917897</td>\n",
       "<td>0.3822461</td>\n",
       "<td>0.4097366</td>\n",
       "<td>0.3639701</td>\n",
       "<td>0.3863618</td>\n",
       "<td>0.3620041</td>\n",
       "<td>0.4015359</td></tr>\n",
       "<tr><td>rmsle</td>\n",
       "<td>0.2693151</td>\n",
       "<td>0.0079124</td>\n",
       "<td>0.265959</td>\n",
       "<td>0.2641168</td>\n",
       "<td>0.2716589</td>\n",
       "<td>0.2730249</td>\n",
       "<td>0.2672345</td>\n",
       "<td>0.2830908</td>\n",
       "<td>0.2600658</td>\n",
       "<td>0.2720638</td>\n",
       "<td>0.2575979</td>\n",
       "<td>0.2783385</td></tr></tbody>\n",
       "  </table>\n",
       "</div>\n",
       "</div>\n",
       "<div style='margin: 1em 0 1em 0;'>\n",
       "<style>\n",
       "\n",
       "#h2o-table-11.h2o-container {\n",
       "  overflow-x: auto;\n",
       "}\n",
       "#h2o-table-11 .h2o-table {\n",
       "  /* width: 100%; */\n",
       "  margin-top: 1em;\n",
       "  margin-bottom: 1em;\n",
       "}\n",
       "#h2o-table-11 .h2o-table caption {\n",
       "  white-space: nowrap;\n",
       "  caption-side: top;\n",
       "  text-align: left;\n",
       "  /* margin-left: 1em; */\n",
       "  margin: 0;\n",
       "  font-size: larger;\n",
       "}\n",
       "#h2o-table-11 .h2o-table thead {\n",
       "  white-space: nowrap; \n",
       "  position: sticky;\n",
       "  top: 0;\n",
       "  box-shadow: 0 -1px inset;\n",
       "}\n",
       "#h2o-table-11 .h2o-table tbody {\n",
       "  overflow: auto;\n",
       "}\n",
       "#h2o-table-11 .h2o-table th,\n",
       "#h2o-table-11 .h2o-table td {\n",
       "  text-align: right;\n",
       "  /* border: 1px solid; */\n",
       "}\n",
       "#h2o-table-11 .h2o-table tr:nth-child(even) {\n",
       "  /* background: #F5F5F5 */\n",
       "}\n",
       "\n",
       "</style>      \n",
       "<div id=\"h2o-table-11\" class=\"h2o-container\">\n",
       "  <table class=\"h2o-table\">\n",
       "    <caption>Scoring History: </caption>\n",
       "    <thead><tr><th></th>\n",
       "<th>timestamp</th>\n",
       "<th>duration</th>\n",
       "<th>number_of_trees</th>\n",
       "<th>training_rmse</th>\n",
       "<th>training_mae</th>\n",
       "<th>training_deviance</th></tr></thead>\n",
       "    <tbody><tr><td></td>\n",
       "<td>2023-11-29 21:15:56</td>\n",
       "<td>32.946 sec</td>\n",
       "<td>0.0</td>\n",
       "<td>nan</td>\n",
       "<td>nan</td>\n",
       "<td>nan</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:15:56</td>\n",
       "<td>32.971 sec</td>\n",
       "<td>1.0</td>\n",
       "<td>0.3920307</td>\n",
       "<td>0.2962567</td>\n",
       "<td>0.1536881</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:15:56</td>\n",
       "<td>32.988 sec</td>\n",
       "<td>2.0</td>\n",
       "<td>0.3942032</td>\n",
       "<td>0.2970052</td>\n",
       "<td>0.1553962</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:15:56</td>\n",
       "<td>33.000 sec</td>\n",
       "<td>3.0</td>\n",
       "<td>0.3904279</td>\n",
       "<td>0.2939798</td>\n",
       "<td>0.1524340</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:15:56</td>\n",
       "<td>33.013 sec</td>\n",
       "<td>4.0</td>\n",
       "<td>0.3901757</td>\n",
       "<td>0.2949471</td>\n",
       "<td>0.1522371</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:15:56</td>\n",
       "<td>33.026 sec</td>\n",
       "<td>5.0</td>\n",
       "<td>0.3904523</td>\n",
       "<td>0.2967762</td>\n",
       "<td>0.1524530</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:15:56</td>\n",
       "<td>33.049 sec</td>\n",
       "<td>6.0</td>\n",
       "<td>0.3898358</td>\n",
       "<td>0.2966235</td>\n",
       "<td>0.1519720</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:15:57</td>\n",
       "<td>33.069 sec</td>\n",
       "<td>7.0</td>\n",
       "<td>0.3891432</td>\n",
       "<td>0.2966342</td>\n",
       "<td>0.1514324</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:15:57</td>\n",
       "<td>33.086 sec</td>\n",
       "<td>8.0</td>\n",
       "<td>0.3882354</td>\n",
       "<td>0.2954446</td>\n",
       "<td>0.1507267</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:15:57</td>\n",
       "<td>33.105 sec</td>\n",
       "<td>9.0</td>\n",
       "<td>0.3872396</td>\n",
       "<td>0.2955049</td>\n",
       "<td>0.1499545</td></tr>\n",
       "<tr><td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:16:00</td>\n",
       "<td>36.676 sec</td>\n",
       "<td>291.0</td>\n",
       "<td>0.3842752</td>\n",
       "<td>0.2957442</td>\n",
       "<td>0.1476674</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:16:00</td>\n",
       "<td>36.687 sec</td>\n",
       "<td>292.0</td>\n",
       "<td>0.3842657</td>\n",
       "<td>0.2957205</td>\n",
       "<td>0.1476601</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:16:00</td>\n",
       "<td>36.699 sec</td>\n",
       "<td>293.0</td>\n",
       "<td>0.3842681</td>\n",
       "<td>0.2957301</td>\n",
       "<td>0.1476620</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:16:00</td>\n",
       "<td>36.710 sec</td>\n",
       "<td>294.0</td>\n",
       "<td>0.3842632</td>\n",
       "<td>0.2957453</td>\n",
       "<td>0.1476582</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:16:00</td>\n",
       "<td>36.721 sec</td>\n",
       "<td>295.0</td>\n",
       "<td>0.3842622</td>\n",
       "<td>0.2957566</td>\n",
       "<td>0.1476574</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:16:00</td>\n",
       "<td>36.731 sec</td>\n",
       "<td>296.0</td>\n",
       "<td>0.3842635</td>\n",
       "<td>0.2957443</td>\n",
       "<td>0.1476584</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:16:00</td>\n",
       "<td>36.741 sec</td>\n",
       "<td>297.0</td>\n",
       "<td>0.3842668</td>\n",
       "<td>0.2957617</td>\n",
       "<td>0.1476610</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:16:00</td>\n",
       "<td>36.752 sec</td>\n",
       "<td>298.0</td>\n",
       "<td>0.3842619</td>\n",
       "<td>0.2957862</td>\n",
       "<td>0.1476572</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:16:00</td>\n",
       "<td>36.764 sec</td>\n",
       "<td>299.0</td>\n",
       "<td>0.3842696</td>\n",
       "<td>0.2957938</td>\n",
       "<td>0.1476631</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:16:00</td>\n",
       "<td>36.774 sec</td>\n",
       "<td>300.0</td>\n",
       "<td>0.3842831</td>\n",
       "<td>0.2957981</td>\n",
       "<td>0.1476735</td></tr></tbody>\n",
       "  </table>\n",
       "</div>\n",
       "<pre style='font-size: smaller; margin-bottom: 1em;'>[301 rows x 7 columns]</pre></div>\n",
       "<div style='margin: 1em 0 1em 0;'>\n",
       "<style>\n",
       "\n",
       "#h2o-table-12.h2o-container {\n",
       "  overflow-x: auto;\n",
       "}\n",
       "#h2o-table-12 .h2o-table {\n",
       "  /* width: 100%; */\n",
       "  margin-top: 1em;\n",
       "  margin-bottom: 1em;\n",
       "}\n",
       "#h2o-table-12 .h2o-table caption {\n",
       "  white-space: nowrap;\n",
       "  caption-side: top;\n",
       "  text-align: left;\n",
       "  /* margin-left: 1em; */\n",
       "  margin: 0;\n",
       "  font-size: larger;\n",
       "}\n",
       "#h2o-table-12 .h2o-table thead {\n",
       "  white-space: nowrap; \n",
       "  position: sticky;\n",
       "  top: 0;\n",
       "  box-shadow: 0 -1px inset;\n",
       "}\n",
       "#h2o-table-12 .h2o-table tbody {\n",
       "  overflow: auto;\n",
       "}\n",
       "#h2o-table-12 .h2o-table th,\n",
       "#h2o-table-12 .h2o-table td {\n",
       "  text-align: right;\n",
       "  /* border: 1px solid; */\n",
       "}\n",
       "#h2o-table-12 .h2o-table tr:nth-child(even) {\n",
       "  /* background: #F5F5F5 */\n",
       "}\n",
       "\n",
       "</style>      \n",
       "<div id=\"h2o-table-12\" class=\"h2o-container\">\n",
       "  <table class=\"h2o-table\">\n",
       "    <caption>Variable Importances: </caption>\n",
       "    <thead><tr><th>variable</th>\n",
       "<th>relative_importance</th>\n",
       "<th>scaled_importance</th>\n",
       "<th>percentage</th></tr></thead>\n",
       "    <tbody><tr><td>TD013</td>\n",
       "<td>1549.9637451</td>\n",
       "<td>1.0</td>\n",
       "<td>0.1624182</td></tr>\n",
       "<tr><td>MB007</td>\n",
       "<td>1368.9670410</td>\n",
       "<td>0.8832252</td>\n",
       "<td>0.1434518</td></tr>\n",
       "<tr><td>TD009</td>\n",
       "<td>1276.2861328</td>\n",
       "<td>0.8234297</td>\n",
       "<td>0.1337400</td></tr>\n",
       "<tr><td>TD005</td>\n",
       "<td>641.8096924</td>\n",
       "<td>0.4140805</td>\n",
       "<td>0.0672542</td></tr>\n",
       "<tr><td>AP003</td>\n",
       "<td>503.8271484</td>\n",
       "<td>0.3250574</td>\n",
       "<td>0.0527952</td></tr>\n",
       "<tr><td>TD014</td>\n",
       "<td>423.3284912</td>\n",
       "<td>0.2731215</td>\n",
       "<td>0.0443599</td></tr>\n",
       "<tr><td>AP001</td>\n",
       "<td>318.9553833</td>\n",
       "<td>0.2057825</td>\n",
       "<td>0.0334228</td></tr>\n",
       "<tr><td>CR019</td>\n",
       "<td>279.6249695</td>\n",
       "<td>0.1804074</td>\n",
       "<td>0.0293014</td></tr>\n",
       "<tr><td>CR009</td>\n",
       "<td>261.0901184</td>\n",
       "<td>0.1684492</td>\n",
       "<td>0.0273592</td></tr>\n",
       "<tr><td>TD010</td>\n",
       "<td>259.7542114</td>\n",
       "<td>0.1675873</td>\n",
       "<td>0.0272192</td></tr>\n",
       "<tr><td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td></tr>\n",
       "<tr><td>CR005</td>\n",
       "<td>21.1109638</td>\n",
       "<td>0.0136203</td>\n",
       "<td>0.0022122</td></tr>\n",
       "<tr><td>AP002</td>\n",
       "<td>20.8765163</td>\n",
       "<td>0.0134690</td>\n",
       "<td>0.0021876</td></tr>\n",
       "<tr><td>AP009</td>\n",
       "<td>14.8636532</td>\n",
       "<td>0.0095897</td>\n",
       "<td>0.0015575</td></tr>\n",
       "<tr><td>TD025</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD026</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD027</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD028</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD029</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD044</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>PA030</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr></tbody>\n",
       "  </table>\n",
       "</div>\n",
       "<pre style='font-size: smaller; margin-bottom: 1em;'>[40 rows x 4 columns]</pre></div><pre style=\"font-size: smaller; margin: 1em 0 0 0;\">\n",
       "\n",
       "[tips]\n",
       "Use `model.explain()` to inspect the model.\n",
       "--\n",
       "Use `h2o.display.toggle_user_tips()` to switch on/off this section.</pre>"
      ],
      "text/plain": [
       "Model Details\n",
       "=============\n",
       "H2ORandomForestEstimator : Distributed Random Forest\n",
       "Model Key: rf_v2\n",
       "\n",
       "\n",
       "Model Summary: \n",
       "    number_of_trees    number_of_internal_trees    model_size_in_bytes    min_depth    max_depth    mean_depth    min_leaves    max_leaves    mean_leaves\n",
       "--  -----------------  --------------------------  ---------------------  -----------  -----------  ------------  ------------  ------------  -------------\n",
       "    300                300                         107997                 6            11           7.66          19            25            22.45\n",
       "\n",
       "ModelMetricsRegression: drf\n",
       "** Reported on train data. **\n",
       "\n",
       "MSE: 0.14767353573534184\n",
       "RMSE: 0.38428314526575563\n",
       "MAE: 0.2957980576763411\n",
       "RMSLE: 0.2694211114439255\n",
       "Mean Residual Deviance: 0.14767353573534184\n",
       "\n",
       "ModelMetricsRegression: drf\n",
       "** Reported on cross-validation data. **\n",
       "\n",
       "MSE: 0.1477604099297664\n",
       "RMSE: 0.3843961627406892\n",
       "MAE: 0.29597600286172465\n",
       "RMSLE: 0.26950533579774466\n",
       "Mean Residual Deviance: 0.1477604099297664\n",
       "\n",
       "Cross-Validation Metrics Summary: \n",
       "                        mean      sd          cv_1_valid    cv_2_valid    cv_3_valid    cv_4_valid    cv_5_valid    cv_6_valid    cv_7_valid    cv_8_valid    cv_9_valid    cv_10_valid\n",
       "----------------------  --------  ----------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  -------------\n",
       "mae                     0.295862  0.0105649   0.289865      0.288422      0.298811      0.300648      0.292843      0.314834      0.285189      0.299015      0.280622      0.30837\n",
       "mean_residual_deviance  0.147605  0.0117422   0.140976      0.141493      0.152057      0.153499      0.146112      0.167884      0.132474      0.149275      0.131047      0.161231\n",
       "mse                     0.147605  0.0117422   0.140976      0.141493      0.152057      0.153499      0.146112      0.167884      0.132474      0.149275      0.131047      0.161231\n",
       "r2                      0.028792  0.0137831   0.00862054    0.0396453     0.0410812     0.0347524     0.0503409     0.0253746     0.0139032     0.0120922     0.0286377     0.0334718\n",
       "residual_deviance       0.147605  0.0117422   0.140976      0.141493      0.152057      0.153499      0.146112      0.167884      0.132474      0.149275      0.131047      0.161231\n",
       "rmse                    0.383921  0.0152529   0.375468      0.376155      0.389945      0.39179       0.382246      0.409737      0.36397       0.386362      0.362004      0.401536\n",
       "rmsle                   0.269315  0.00791244  0.265959      0.264117      0.271659      0.273025      0.267234      0.283091      0.260066      0.272064      0.257598      0.278338\n",
       "\n",
       "Scoring History: \n",
       "     timestamp            duration    number_of_trees    training_rmse        training_mae         training_deviance\n",
       "---  -------------------  ----------  -----------------  -------------------  -------------------  -------------------\n",
       "     2023-11-29 21:15:56  32.946 sec  0.0                nan                  nan                  nan\n",
       "     2023-11-29 21:15:56  32.971 sec  1.0                0.3920307054589556   0.296256731487853    0.1536880740226464\n",
       "     2023-11-29 21:15:56  32.988 sec  2.0                0.3942032053571326   0.29700516758134304  0.15539616711383766\n",
       "     2023-11-29 21:15:56  33.000 sec  3.0                0.3904279147638411   0.2939797914789087   0.15243395662684114\n",
       "     2023-11-29 21:15:56  33.013 sec  4.0                0.3901756870847142   0.2949471374634921   0.1522370667920288\n",
       "     2023-11-29 21:15:56  33.026 sec  5.0                0.39045233521620937  0.29677616864784884  0.15245302607579111\n",
       "     2023-11-29 21:15:56  33.049 sec  6.0                0.38983582738116856  0.2966234733230358   0.15197197230996023\n",
       "     2023-11-29 21:15:57  33.069 sec  7.0                0.38914318695596034  0.2966341661783077   0.1514324199542415\n",
       "     2023-11-29 21:15:57  33.086 sec  8.0                0.3882353582921885   0.295444631963733    0.150726693428264\n",
       "     2023-11-29 21:15:57  33.105 sec  9.0                0.3872396455558498   0.29550491952782904  0.14995454309022016\n",
       "---  ---                  ---         ---                ---                  ---                  ---\n",
       "     2023-11-29 21:16:00  36.676 sec  291.0              0.3842751561590303   0.29574420545119123  0.14766739564104714\n",
       "     2023-11-29 21:16:00  36.687 sec  292.0              0.3842657023119154   0.29572054476098525  0.1476601299732696\n",
       "     2023-11-29 21:16:00  36.699 sec  293.0              0.3842681354073502   0.29573007800641554  0.14766199988944165\n",
       "     2023-11-29 21:16:00  36.710 sec  294.0              0.3842632264430452   0.2957453054292714   0.14765822719641905\n",
       "     2023-11-29 21:16:00  36.721 sec  295.0              0.38426218835802733  0.2957566383524423   0.1476574294017001\n",
       "     2023-11-29 21:16:00  36.731 sec  296.0              0.3842634520908914   0.29574430391087014  0.1476584006128088\n",
       "     2023-11-29 21:16:00  36.741 sec  297.0              0.38426683668938627  0.29576174118988896  0.14766100177926744\n",
       "     2023-11-29 21:16:00  36.752 sec  298.0              0.3842619320498129   0.29578619316161386  0.14765723242265505\n",
       "     2023-11-29 21:16:00  36.764 sec  299.0              0.38426961370502216  0.29579382240621244  0.14766313601700695\n",
       "     2023-11-29 21:16:00  36.774 sec  300.0              0.38428314526575563  0.2957980576763411   0.14767353573534184\n",
       "[301 rows x 7 columns]\n",
       "\n",
       "\n",
       "Variable Importances: \n",
       "variable    relative_importance    scaled_importance     percentage\n",
       "----------  ---------------------  --------------------  ---------------------\n",
       "TD013       1549.9637451171875     1.0                   0.1624181903682103\n",
       "MB007       1368.967041015625      0.8832252014463229    0.14345183890650978\n",
       "TD009       1276.2861328125        0.8234296684894422    0.13373995665155053\n",
       "TD005       641.8096923828125      0.4140804547233377    0.06725419812301016\n",
       "AP003       503.8271484375         0.3250573763577982    0.05279523083387185\n",
       "TD014       423.3284912109375      0.27312154400032823   0.04435990692710485\n",
       "AP001       318.95538330078125     0.2057824799486946    0.0334228180027495\n",
       "CR019       279.6249694824219      0.18040742589193942   0.029301447642355812\n",
       "CR009       261.0901184082031      0.16844917775058216   0.02735921061926255\n",
       "TD010       259.75421142578125     0.1675872821181002    0.027219223090348566\n",
       "---         ---                    ---                   ---\n",
       "CR005       21.110963821411133     0.013620295241044496  0.002212183705331194\n",
       "AP002       20.876516342163086     0.013469035264811748  0.0021876163337163326\n",
       "AP009       14.863653182983398     0.00958967797137707   0.0015575381423249541\n",
       "TD025       0.0                    0.0                   0.0\n",
       "TD026       0.0                    0.0                   0.0\n",
       "TD027       0.0                    0.0                   0.0\n",
       "TD028       0.0                    0.0                   0.0\n",
       "TD029       0.0                    0.0                   0.0\n",
       "TD044       0.0                    0.0                   0.0\n",
       "PA030       0.0                    0.0                   0.0\n",
       "[40 rows x 4 columns]\n",
       "\n",
       "\n",
       "[tips]\n",
       "Use `model.explain()` to inspect the model.\n",
       "--\n",
       "Use `h2o.display.toggle_user_tips()` to switch on/off this section."
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rf_v2 = H2ORandomForestEstimator(\n",
    "        model_id = 'rf_v2',\n",
    "        ntrees = 300,\n",
    "        nfolds=10,\n",
    "        min_rows=100,\n",
    "        seed=1234)\n",
    "rf_v2.train(predictors,target,training_frame=train_hex)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "28b45fcd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>actual</th>\n",
       "      <th>non_actual</th>\n",
       "      <th>cum_count</th>\n",
       "      <th>cum_actual</th>\n",
       "      <th>cum_non_actual</th>\n",
       "      <th>percent_cum_actual</th>\n",
       "      <th>percent_cum_non_actual</th>\n",
       "      <th>if_random</th>\n",
       "      <th>lift</th>\n",
       "      <th>K_S</th>\n",
       "      <th>gain</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>decile</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>320</td>\n",
       "      <td>100</td>\n",
       "      <td>220</td>\n",
       "      <td>320</td>\n",
       "      <td>100</td>\n",
       "      <td>220</td>\n",
       "      <td>0.17</td>\n",
       "      <td>0.08</td>\n",
       "      <td>60.0</td>\n",
       "      <td>1.67</td>\n",
       "      <td>9.0</td>\n",
       "      <td>31.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>320</td>\n",
       "      <td>91</td>\n",
       "      <td>229</td>\n",
       "      <td>640</td>\n",
       "      <td>191</td>\n",
       "      <td>449</td>\n",
       "      <td>0.32</td>\n",
       "      <td>0.17</td>\n",
       "      <td>120.0</td>\n",
       "      <td>1.59</td>\n",
       "      <td>15.0</td>\n",
       "      <td>29.84</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>320</td>\n",
       "      <td>78</td>\n",
       "      <td>242</td>\n",
       "      <td>960</td>\n",
       "      <td>269</td>\n",
       "      <td>691</td>\n",
       "      <td>0.45</td>\n",
       "      <td>0.27</td>\n",
       "      <td>180.0</td>\n",
       "      <td>1.49</td>\n",
       "      <td>18.0</td>\n",
       "      <td>28.02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>320</td>\n",
       "      <td>59</td>\n",
       "      <td>261</td>\n",
       "      <td>1280</td>\n",
       "      <td>328</td>\n",
       "      <td>952</td>\n",
       "      <td>0.55</td>\n",
       "      <td>0.37</td>\n",
       "      <td>240.0</td>\n",
       "      <td>1.37</td>\n",
       "      <td>18.0</td>\n",
       "      <td>25.62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>320</td>\n",
       "      <td>63</td>\n",
       "      <td>257</td>\n",
       "      <td>1600</td>\n",
       "      <td>391</td>\n",
       "      <td>1209</td>\n",
       "      <td>0.65</td>\n",
       "      <td>0.46</td>\n",
       "      <td>300.0</td>\n",
       "      <td>1.30</td>\n",
       "      <td>19.0</td>\n",
       "      <td>24.44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>320</td>\n",
       "      <td>54</td>\n",
       "      <td>266</td>\n",
       "      <td>1920</td>\n",
       "      <td>445</td>\n",
       "      <td>1475</td>\n",
       "      <td>0.74</td>\n",
       "      <td>0.57</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.24</td>\n",
       "      <td>17.0</td>\n",
       "      <td>23.18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>320</td>\n",
       "      <td>40</td>\n",
       "      <td>280</td>\n",
       "      <td>2240</td>\n",
       "      <td>485</td>\n",
       "      <td>1755</td>\n",
       "      <td>0.81</td>\n",
       "      <td>0.68</td>\n",
       "      <td>420.0</td>\n",
       "      <td>1.15</td>\n",
       "      <td>13.0</td>\n",
       "      <td>21.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>320</td>\n",
       "      <td>56</td>\n",
       "      <td>264</td>\n",
       "      <td>2560</td>\n",
       "      <td>541</td>\n",
       "      <td>2019</td>\n",
       "      <td>0.90</td>\n",
       "      <td>0.78</td>\n",
       "      <td>480.0</td>\n",
       "      <td>1.13</td>\n",
       "      <td>12.0</td>\n",
       "      <td>21.13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>320</td>\n",
       "      <td>34</td>\n",
       "      <td>286</td>\n",
       "      <td>2880</td>\n",
       "      <td>575</td>\n",
       "      <td>2305</td>\n",
       "      <td>0.96</td>\n",
       "      <td>0.89</td>\n",
       "      <td>540.0</td>\n",
       "      <td>1.06</td>\n",
       "      <td>7.0</td>\n",
       "      <td>19.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>320</td>\n",
       "      <td>25</td>\n",
       "      <td>295</td>\n",
       "      <td>3200</td>\n",
       "      <td>600</td>\n",
       "      <td>2600</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>600.0</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.75</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        count  actual  non_actual  cum_count  cum_actual  cum_non_actual  \\\n",
       "decile                                                                     \n",
       "0         320     100         220        320         100             220   \n",
       "1         320      91         229        640         191             449   \n",
       "2         320      78         242        960         269             691   \n",
       "3         320      59         261       1280         328             952   \n",
       "4         320      63         257       1600         391            1209   \n",
       "5         320      54         266       1920         445            1475   \n",
       "6         320      40         280       2240         485            1755   \n",
       "7         320      56         264       2560         541            2019   \n",
       "8         320      34         286       2880         575            2305   \n",
       "9         320      25         295       3200         600            2600   \n",
       "\n",
       "        percent_cum_actual  percent_cum_non_actual  if_random  lift   K_S  \\\n",
       "decile                                                                      \n",
       "0                     0.17                    0.08       60.0  1.67   9.0   \n",
       "1                     0.32                    0.17      120.0  1.59  15.0   \n",
       "2                     0.45                    0.27      180.0  1.49  18.0   \n",
       "3                     0.55                    0.37      240.0  1.37  18.0   \n",
       "4                     0.65                    0.46      300.0  1.30  19.0   \n",
       "5                     0.74                    0.57      360.0  1.24  17.0   \n",
       "6                     0.81                    0.68      420.0  1.15  13.0   \n",
       "7                     0.90                    0.78      480.0  1.13  12.0   \n",
       "8                     0.96                    0.89      540.0  1.06   7.0   \n",
       "9                     1.00                    1.00      600.0  1.00   0.0   \n",
       "\n",
       "         gain  \n",
       "decile         \n",
       "0       31.25  \n",
       "1       29.84  \n",
       "2       28.02  \n",
       "3       25.62  \n",
       "4       24.44  \n",
       "5       23.18  \n",
       "6       21.65  \n",
       "7       21.13  \n",
       "8       19.97  \n",
       "9       18.75  "
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "createGains(rf_v2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "d5a8f52a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "drf Model Build progress: |██████████████████████████████████████████████████████| (done) 100%\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<pre style='margin: 1em 0 1em 0;'>Model Details\n",
       "=============\n",
       "H2ORandomForestEstimator : Distributed Random Forest\n",
       "Model Key: rf_v3\n",
       "</pre>\n",
       "<div style='margin: 1em 0 1em 0;'>\n",
       "<style>\n",
       "\n",
       "#h2o-table-13.h2o-container {\n",
       "  overflow-x: auto;\n",
       "}\n",
       "#h2o-table-13 .h2o-table {\n",
       "  /* width: 100%; */\n",
       "  margin-top: 1em;\n",
       "  margin-bottom: 1em;\n",
       "}\n",
       "#h2o-table-13 .h2o-table caption {\n",
       "  white-space: nowrap;\n",
       "  caption-side: top;\n",
       "  text-align: left;\n",
       "  /* margin-left: 1em; */\n",
       "  margin: 0;\n",
       "  font-size: larger;\n",
       "}\n",
       "#h2o-table-13 .h2o-table thead {\n",
       "  white-space: nowrap; \n",
       "  position: sticky;\n",
       "  top: 0;\n",
       "  box-shadow: 0 -1px inset;\n",
       "}\n",
       "#h2o-table-13 .h2o-table tbody {\n",
       "  overflow: auto;\n",
       "}\n",
       "#h2o-table-13 .h2o-table th,\n",
       "#h2o-table-13 .h2o-table td {\n",
       "  text-align: right;\n",
       "  /* border: 1px solid; */\n",
       "}\n",
       "#h2o-table-13 .h2o-table tr:nth-child(even) {\n",
       "  /* background: #F5F5F5 */\n",
       "}\n",
       "\n",
       "</style>      \n",
       "<div id=\"h2o-table-13\" class=\"h2o-container\">\n",
       "  <table class=\"h2o-table\">\n",
       "    <caption>Model Summary: </caption>\n",
       "    <thead><tr><th></th>\n",
       "<th>number_of_trees</th>\n",
       "<th>number_of_internal_trees</th>\n",
       "<th>model_size_in_bytes</th>\n",
       "<th>min_depth</th>\n",
       "<th>max_depth</th>\n",
       "<th>mean_depth</th>\n",
       "<th>min_leaves</th>\n",
       "<th>max_leaves</th>\n",
       "<th>mean_leaves</th></tr></thead>\n",
       "    <tbody><tr><td></td>\n",
       "<td>300.0</td>\n",
       "<td>300.0</td>\n",
       "<td>107999.0</td>\n",
       "<td>6.0</td>\n",
       "<td>11.0</td>\n",
       "<td>7.66</td>\n",
       "<td>19.0</td>\n",
       "<td>25.0</td>\n",
       "<td>22.45</td></tr></tbody>\n",
       "  </table>\n",
       "</div>\n",
       "</div>\n",
       "<div style='margin: 1em 0 1em 0;'><pre style='margin: 1em 0 1em 0;'>ModelMetricsRegression: drf\n",
       "** Reported on train data. **\n",
       "\n",
       "MSE: 0.14767353573534184\n",
       "RMSE: 0.38428314526575563\n",
       "MAE: 0.2957980576763411\n",
       "RMSLE: 0.2694211114439255\n",
       "Mean Residual Deviance: 0.14767353573534184</pre></div>\n",
       "<div style='margin: 1em 0 1em 0;'><pre style='margin: 1em 0 1em 0;'>ModelMetricsRegression: drf\n",
       "** Reported on cross-validation data. **\n",
       "\n",
       "MSE: 0.1477604099297664\n",
       "RMSE: 0.3843961627406892\n",
       "MAE: 0.29597600286172465\n",
       "RMSLE: 0.26950533579774466\n",
       "Mean Residual Deviance: 0.1477604099297664</pre></div>\n",
       "<div style='margin: 1em 0 1em 0;'>\n",
       "<style>\n",
       "\n",
       "#h2o-table-14.h2o-container {\n",
       "  overflow-x: auto;\n",
       "}\n",
       "#h2o-table-14 .h2o-table {\n",
       "  /* width: 100%; */\n",
       "  margin-top: 1em;\n",
       "  margin-bottom: 1em;\n",
       "}\n",
       "#h2o-table-14 .h2o-table caption {\n",
       "  white-space: nowrap;\n",
       "  caption-side: top;\n",
       "  text-align: left;\n",
       "  /* margin-left: 1em; */\n",
       "  margin: 0;\n",
       "  font-size: larger;\n",
       "}\n",
       "#h2o-table-14 .h2o-table thead {\n",
       "  white-space: nowrap; \n",
       "  position: sticky;\n",
       "  top: 0;\n",
       "  box-shadow: 0 -1px inset;\n",
       "}\n",
       "#h2o-table-14 .h2o-table tbody {\n",
       "  overflow: auto;\n",
       "}\n",
       "#h2o-table-14 .h2o-table th,\n",
       "#h2o-table-14 .h2o-table td {\n",
       "  text-align: right;\n",
       "  /* border: 1px solid; */\n",
       "}\n",
       "#h2o-table-14 .h2o-table tr:nth-child(even) {\n",
       "  /* background: #F5F5F5 */\n",
       "}\n",
       "\n",
       "</style>      \n",
       "<div id=\"h2o-table-14\" class=\"h2o-container\">\n",
       "  <table class=\"h2o-table\">\n",
       "    <caption>Cross-Validation Metrics Summary: </caption>\n",
       "    <thead><tr><th></th>\n",
       "<th>mean</th>\n",
       "<th>sd</th>\n",
       "<th>cv_1_valid</th>\n",
       "<th>cv_2_valid</th>\n",
       "<th>cv_3_valid</th>\n",
       "<th>cv_4_valid</th>\n",
       "<th>cv_5_valid</th>\n",
       "<th>cv_6_valid</th>\n",
       "<th>cv_7_valid</th>\n",
       "<th>cv_8_valid</th>\n",
       "<th>cv_9_valid</th>\n",
       "<th>cv_10_valid</th></tr></thead>\n",
       "    <tbody><tr><td>mae</td>\n",
       "<td>0.2958619</td>\n",
       "<td>0.0105649</td>\n",
       "<td>0.2898653</td>\n",
       "<td>0.2884218</td>\n",
       "<td>0.2988107</td>\n",
       "<td>0.3006485</td>\n",
       "<td>0.2928425</td>\n",
       "<td>0.3148344</td>\n",
       "<td>0.2851892</td>\n",
       "<td>0.2990153</td>\n",
       "<td>0.2806215</td>\n",
       "<td>0.3083699</td></tr>\n",
       "<tr><td>mean_residual_deviance</td>\n",
       "<td>0.1476049</td>\n",
       "<td>0.0117422</td>\n",
       "<td>0.1409761</td>\n",
       "<td>0.1414926</td>\n",
       "<td>0.1520571</td>\n",
       "<td>0.1534992</td>\n",
       "<td>0.1461121</td>\n",
       "<td>0.1678841</td>\n",
       "<td>0.1324742</td>\n",
       "<td>0.1492754</td>\n",
       "<td>0.1310470</td>\n",
       "<td>0.1612311</td></tr>\n",
       "<tr><td>mse</td>\n",
       "<td>0.1476049</td>\n",
       "<td>0.0117422</td>\n",
       "<td>0.1409761</td>\n",
       "<td>0.1414926</td>\n",
       "<td>0.1520571</td>\n",
       "<td>0.1534992</td>\n",
       "<td>0.1461121</td>\n",
       "<td>0.1678841</td>\n",
       "<td>0.1324742</td>\n",
       "<td>0.1492754</td>\n",
       "<td>0.1310470</td>\n",
       "<td>0.1612311</td></tr>\n",
       "<tr><td>r2</td>\n",
       "<td>0.0287920</td>\n",
       "<td>0.0137831</td>\n",
       "<td>0.0086205</td>\n",
       "<td>0.0396453</td>\n",
       "<td>0.0410812</td>\n",
       "<td>0.0347524</td>\n",
       "<td>0.0503409</td>\n",
       "<td>0.0253746</td>\n",
       "<td>0.0139032</td>\n",
       "<td>0.0120922</td>\n",
       "<td>0.0286377</td>\n",
       "<td>0.0334718</td></tr>\n",
       "<tr><td>residual_deviance</td>\n",
       "<td>0.1476049</td>\n",
       "<td>0.0117422</td>\n",
       "<td>0.1409761</td>\n",
       "<td>0.1414926</td>\n",
       "<td>0.1520571</td>\n",
       "<td>0.1534992</td>\n",
       "<td>0.1461121</td>\n",
       "<td>0.1678841</td>\n",
       "<td>0.1324742</td>\n",
       "<td>0.1492754</td>\n",
       "<td>0.1310470</td>\n",
       "<td>0.1612311</td></tr>\n",
       "<tr><td>rmse</td>\n",
       "<td>0.3839212</td>\n",
       "<td>0.0152529</td>\n",
       "<td>0.3754678</td>\n",
       "<td>0.376155</td>\n",
       "<td>0.3899451</td>\n",
       "<td>0.3917897</td>\n",
       "<td>0.3822461</td>\n",
       "<td>0.4097366</td>\n",
       "<td>0.3639701</td>\n",
       "<td>0.3863618</td>\n",
       "<td>0.3620041</td>\n",
       "<td>0.4015359</td></tr>\n",
       "<tr><td>rmsle</td>\n",
       "<td>0.2693151</td>\n",
       "<td>0.0079124</td>\n",
       "<td>0.265959</td>\n",
       "<td>0.2641168</td>\n",
       "<td>0.2716589</td>\n",
       "<td>0.2730249</td>\n",
       "<td>0.2672345</td>\n",
       "<td>0.2830908</td>\n",
       "<td>0.2600658</td>\n",
       "<td>0.2720638</td>\n",
       "<td>0.2575979</td>\n",
       "<td>0.2783385</td></tr></tbody>\n",
       "  </table>\n",
       "</div>\n",
       "</div>\n",
       "<div style='margin: 1em 0 1em 0;'>\n",
       "<style>\n",
       "\n",
       "#h2o-table-15.h2o-container {\n",
       "  overflow-x: auto;\n",
       "}\n",
       "#h2o-table-15 .h2o-table {\n",
       "  /* width: 100%; */\n",
       "  margin-top: 1em;\n",
       "  margin-bottom: 1em;\n",
       "}\n",
       "#h2o-table-15 .h2o-table caption {\n",
       "  white-space: nowrap;\n",
       "  caption-side: top;\n",
       "  text-align: left;\n",
       "  /* margin-left: 1em; */\n",
       "  margin: 0;\n",
       "  font-size: larger;\n",
       "}\n",
       "#h2o-table-15 .h2o-table thead {\n",
       "  white-space: nowrap; \n",
       "  position: sticky;\n",
       "  top: 0;\n",
       "  box-shadow: 0 -1px inset;\n",
       "}\n",
       "#h2o-table-15 .h2o-table tbody {\n",
       "  overflow: auto;\n",
       "}\n",
       "#h2o-table-15 .h2o-table th,\n",
       "#h2o-table-15 .h2o-table td {\n",
       "  text-align: right;\n",
       "  /* border: 1px solid; */\n",
       "}\n",
       "#h2o-table-15 .h2o-table tr:nth-child(even) {\n",
       "  /* background: #F5F5F5 */\n",
       "}\n",
       "\n",
       "</style>      \n",
       "<div id=\"h2o-table-15\" class=\"h2o-container\">\n",
       "  <table class=\"h2o-table\">\n",
       "    <caption>Scoring History: </caption>\n",
       "    <thead><tr><th></th>\n",
       "<th>timestamp</th>\n",
       "<th>duration</th>\n",
       "<th>number_of_trees</th>\n",
       "<th>training_rmse</th>\n",
       "<th>training_mae</th>\n",
       "<th>training_deviance</th></tr></thead>\n",
       "    <tbody><tr><td></td>\n",
       "<td>2023-11-29 21:16:27</td>\n",
       "<td>25.240 sec</td>\n",
       "<td>0.0</td>\n",
       "<td>nan</td>\n",
       "<td>nan</td>\n",
       "<td>nan</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:16:27</td>\n",
       "<td>25.251 sec</td>\n",
       "<td>1.0</td>\n",
       "<td>0.3920307</td>\n",
       "<td>0.2962567</td>\n",
       "<td>0.1536881</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:16:27</td>\n",
       "<td>25.261 sec</td>\n",
       "<td>2.0</td>\n",
       "<td>0.3942032</td>\n",
       "<td>0.2970052</td>\n",
       "<td>0.1553962</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:16:27</td>\n",
       "<td>25.272 sec</td>\n",
       "<td>3.0</td>\n",
       "<td>0.3904279</td>\n",
       "<td>0.2939798</td>\n",
       "<td>0.1524340</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:16:27</td>\n",
       "<td>25.284 sec</td>\n",
       "<td>4.0</td>\n",
       "<td>0.3901757</td>\n",
       "<td>0.2949471</td>\n",
       "<td>0.1522371</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:16:27</td>\n",
       "<td>25.295 sec</td>\n",
       "<td>5.0</td>\n",
       "<td>0.3904523</td>\n",
       "<td>0.2967762</td>\n",
       "<td>0.1524530</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:16:27</td>\n",
       "<td>25.305 sec</td>\n",
       "<td>6.0</td>\n",
       "<td>0.3898358</td>\n",
       "<td>0.2966235</td>\n",
       "<td>0.1519720</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:16:27</td>\n",
       "<td>25.316 sec</td>\n",
       "<td>7.0</td>\n",
       "<td>0.3891432</td>\n",
       "<td>0.2966342</td>\n",
       "<td>0.1514324</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:16:27</td>\n",
       "<td>25.324 sec</td>\n",
       "<td>8.0</td>\n",
       "<td>0.3882354</td>\n",
       "<td>0.2954446</td>\n",
       "<td>0.1507267</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:16:27</td>\n",
       "<td>25.335 sec</td>\n",
       "<td>9.0</td>\n",
       "<td>0.3872396</td>\n",
       "<td>0.2955049</td>\n",
       "<td>0.1499545</td></tr>\n",
       "<tr><td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:16:30</td>\n",
       "<td>28.232 sec</td>\n",
       "<td>291.0</td>\n",
       "<td>0.3842752</td>\n",
       "<td>0.2957442</td>\n",
       "<td>0.1476674</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:16:30</td>\n",
       "<td>28.245 sec</td>\n",
       "<td>292.0</td>\n",
       "<td>0.3842657</td>\n",
       "<td>0.2957205</td>\n",
       "<td>0.1476601</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:16:30</td>\n",
       "<td>28.260 sec</td>\n",
       "<td>293.0</td>\n",
       "<td>0.3842681</td>\n",
       "<td>0.2957301</td>\n",
       "<td>0.1476620</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:16:30</td>\n",
       "<td>28.278 sec</td>\n",
       "<td>294.0</td>\n",
       "<td>0.3842632</td>\n",
       "<td>0.2957453</td>\n",
       "<td>0.1476582</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:16:30</td>\n",
       "<td>28.294 sec</td>\n",
       "<td>295.0</td>\n",
       "<td>0.3842622</td>\n",
       "<td>0.2957566</td>\n",
       "<td>0.1476574</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:16:30</td>\n",
       "<td>28.305 sec</td>\n",
       "<td>296.0</td>\n",
       "<td>0.3842635</td>\n",
       "<td>0.2957443</td>\n",
       "<td>0.1476584</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:16:30</td>\n",
       "<td>28.314 sec</td>\n",
       "<td>297.0</td>\n",
       "<td>0.3842668</td>\n",
       "<td>0.2957617</td>\n",
       "<td>0.1476610</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:16:30</td>\n",
       "<td>28.324 sec</td>\n",
       "<td>298.0</td>\n",
       "<td>0.3842619</td>\n",
       "<td>0.2957862</td>\n",
       "<td>0.1476572</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:16:30</td>\n",
       "<td>28.342 sec</td>\n",
       "<td>299.0</td>\n",
       "<td>0.3842696</td>\n",
       "<td>0.2957938</td>\n",
       "<td>0.1476631</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-29 21:16:30</td>\n",
       "<td>28.352 sec</td>\n",
       "<td>300.0</td>\n",
       "<td>0.3842831</td>\n",
       "<td>0.2957981</td>\n",
       "<td>0.1476735</td></tr></tbody>\n",
       "  </table>\n",
       "</div>\n",
       "<pre style='font-size: smaller; margin-bottom: 1em;'>[301 rows x 7 columns]</pre></div>\n",
       "<div style='margin: 1em 0 1em 0;'>\n",
       "<style>\n",
       "\n",
       "#h2o-table-16.h2o-container {\n",
       "  overflow-x: auto;\n",
       "}\n",
       "#h2o-table-16 .h2o-table {\n",
       "  /* width: 100%; */\n",
       "  margin-top: 1em;\n",
       "  margin-bottom: 1em;\n",
       "}\n",
       "#h2o-table-16 .h2o-table caption {\n",
       "  white-space: nowrap;\n",
       "  caption-side: top;\n",
       "  text-align: left;\n",
       "  /* margin-left: 1em; */\n",
       "  margin: 0;\n",
       "  font-size: larger;\n",
       "}\n",
       "#h2o-table-16 .h2o-table thead {\n",
       "  white-space: nowrap; \n",
       "  position: sticky;\n",
       "  top: 0;\n",
       "  box-shadow: 0 -1px inset;\n",
       "}\n",
       "#h2o-table-16 .h2o-table tbody {\n",
       "  overflow: auto;\n",
       "}\n",
       "#h2o-table-16 .h2o-table th,\n",
       "#h2o-table-16 .h2o-table td {\n",
       "  text-align: right;\n",
       "  /* border: 1px solid; */\n",
       "}\n",
       "#h2o-table-16 .h2o-table tr:nth-child(even) {\n",
       "  /* background: #F5F5F5 */\n",
       "}\n",
       "\n",
       "</style>      \n",
       "<div id=\"h2o-table-16\" class=\"h2o-container\">\n",
       "  <table class=\"h2o-table\">\n",
       "    <caption>Variable Importances: </caption>\n",
       "    <thead><tr><th>variable</th>\n",
       "<th>relative_importance</th>\n",
       "<th>scaled_importance</th>\n",
       "<th>percentage</th></tr></thead>\n",
       "    <tbody><tr><td>TD013</td>\n",
       "<td>1549.9637451</td>\n",
       "<td>1.0</td>\n",
       "<td>0.1624182</td></tr>\n",
       "<tr><td>MB007</td>\n",
       "<td>1368.9670410</td>\n",
       "<td>0.8832252</td>\n",
       "<td>0.1434518</td></tr>\n",
       "<tr><td>TD009</td>\n",
       "<td>1276.2861328</td>\n",
       "<td>0.8234297</td>\n",
       "<td>0.1337400</td></tr>\n",
       "<tr><td>TD005</td>\n",
       "<td>641.8096924</td>\n",
       "<td>0.4140805</td>\n",
       "<td>0.0672542</td></tr>\n",
       "<tr><td>AP003</td>\n",
       "<td>503.8271484</td>\n",
       "<td>0.3250574</td>\n",
       "<td>0.0527952</td></tr>\n",
       "<tr><td>TD014</td>\n",
       "<td>423.3284912</td>\n",
       "<td>0.2731215</td>\n",
       "<td>0.0443599</td></tr>\n",
       "<tr><td>AP001</td>\n",
       "<td>318.9553833</td>\n",
       "<td>0.2057825</td>\n",
       "<td>0.0334228</td></tr>\n",
       "<tr><td>CR019</td>\n",
       "<td>279.6249695</td>\n",
       "<td>0.1804074</td>\n",
       "<td>0.0293014</td></tr>\n",
       "<tr><td>CR009</td>\n",
       "<td>261.0901184</td>\n",
       "<td>0.1684492</td>\n",
       "<td>0.0273592</td></tr>\n",
       "<tr><td>TD010</td>\n",
       "<td>259.7542114</td>\n",
       "<td>0.1675873</td>\n",
       "<td>0.0272192</td></tr>\n",
       "<tr><td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td></tr>\n",
       "<tr><td>CR005</td>\n",
       "<td>21.1109638</td>\n",
       "<td>0.0136203</td>\n",
       "<td>0.0022122</td></tr>\n",
       "<tr><td>AP002</td>\n",
       "<td>20.8765163</td>\n",
       "<td>0.0134690</td>\n",
       "<td>0.0021876</td></tr>\n",
       "<tr><td>AP009</td>\n",
       "<td>14.8636532</td>\n",
       "<td>0.0095897</td>\n",
       "<td>0.0015575</td></tr>\n",
       "<tr><td>TD025</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD026</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD027</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD028</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD029</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD044</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>PA030</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr></tbody>\n",
       "  </table>\n",
       "</div>\n",
       "<pre style='font-size: smaller; margin-bottom: 1em;'>[40 rows x 4 columns]</pre></div><pre style=\"font-size: smaller; margin: 1em 0 0 0;\">\n",
       "\n",
       "[tips]\n",
       "Use `model.explain()` to inspect the model.\n",
       "--\n",
       "Use `h2o.display.toggle_user_tips()` to switch on/off this section.</pre>"
      ],
      "text/plain": [
       "Model Details\n",
       "=============\n",
       "H2ORandomForestEstimator : Distributed Random Forest\n",
       "Model Key: rf_v3\n",
       "\n",
       "\n",
       "Model Summary: \n",
       "    number_of_trees    number_of_internal_trees    model_size_in_bytes    min_depth    max_depth    mean_depth    min_leaves    max_leaves    mean_leaves\n",
       "--  -----------------  --------------------------  ---------------------  -----------  -----------  ------------  ------------  ------------  -------------\n",
       "    300                300                         107999                 6            11           7.66          19            25            22.45\n",
       "\n",
       "ModelMetricsRegression: drf\n",
       "** Reported on train data. **\n",
       "\n",
       "MSE: 0.14767353573534184\n",
       "RMSE: 0.38428314526575563\n",
       "MAE: 0.2957980576763411\n",
       "RMSLE: 0.2694211114439255\n",
       "Mean Residual Deviance: 0.14767353573534184\n",
       "\n",
       "ModelMetricsRegression: drf\n",
       "** Reported on cross-validation data. **\n",
       "\n",
       "MSE: 0.1477604099297664\n",
       "RMSE: 0.3843961627406892\n",
       "MAE: 0.29597600286172465\n",
       "RMSLE: 0.26950533579774466\n",
       "Mean Residual Deviance: 0.1477604099297664\n",
       "\n",
       "Cross-Validation Metrics Summary: \n",
       "                        mean      sd          cv_1_valid    cv_2_valid    cv_3_valid    cv_4_valid    cv_5_valid    cv_6_valid    cv_7_valid    cv_8_valid    cv_9_valid    cv_10_valid\n",
       "----------------------  --------  ----------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  -------------\n",
       "mae                     0.295862  0.0105649   0.289865      0.288422      0.298811      0.300648      0.292843      0.314834      0.285189      0.299015      0.280622      0.30837\n",
       "mean_residual_deviance  0.147605  0.0117422   0.140976      0.141493      0.152057      0.153499      0.146112      0.167884      0.132474      0.149275      0.131047      0.161231\n",
       "mse                     0.147605  0.0117422   0.140976      0.141493      0.152057      0.153499      0.146112      0.167884      0.132474      0.149275      0.131047      0.161231\n",
       "r2                      0.028792  0.0137831   0.00862054    0.0396453     0.0410812     0.0347524     0.0503409     0.0253746     0.0139032     0.0120922     0.0286377     0.0334718\n",
       "residual_deviance       0.147605  0.0117422   0.140976      0.141493      0.152057      0.153499      0.146112      0.167884      0.132474      0.149275      0.131047      0.161231\n",
       "rmse                    0.383921  0.0152529   0.375468      0.376155      0.389945      0.39179       0.382246      0.409737      0.36397       0.386362      0.362004      0.401536\n",
       "rmsle                   0.269315  0.00791244  0.265959      0.264117      0.271659      0.273025      0.267234      0.283091      0.260066      0.272064      0.257598      0.278338\n",
       "\n",
       "Scoring History: \n",
       "     timestamp            duration    number_of_trees    training_rmse        training_mae         training_deviance\n",
       "---  -------------------  ----------  -----------------  -------------------  -------------------  -------------------\n",
       "     2023-11-29 21:16:27  25.240 sec  0.0                nan                  nan                  nan\n",
       "     2023-11-29 21:16:27  25.251 sec  1.0                0.3920307054589556   0.296256731487853    0.1536880740226464\n",
       "     2023-11-29 21:16:27  25.261 sec  2.0                0.3942032053571326   0.29700516758134304  0.15539616711383766\n",
       "     2023-11-29 21:16:27  25.272 sec  3.0                0.3904279147638411   0.2939797914789087   0.15243395662684114\n",
       "     2023-11-29 21:16:27  25.284 sec  4.0                0.3901756870847142   0.2949471374634921   0.1522370667920288\n",
       "     2023-11-29 21:16:27  25.295 sec  5.0                0.39045233521620937  0.29677616864784884  0.15245302607579111\n",
       "     2023-11-29 21:16:27  25.305 sec  6.0                0.38983582738116856  0.2966234733230358   0.15197197230996023\n",
       "     2023-11-29 21:16:27  25.316 sec  7.0                0.38914318695596034  0.2966341661783077   0.1514324199542415\n",
       "     2023-11-29 21:16:27  25.324 sec  8.0                0.3882353582921885   0.295444631963733    0.150726693428264\n",
       "     2023-11-29 21:16:27  25.335 sec  9.0                0.3872396455558498   0.29550491952782904  0.14995454309022016\n",
       "---  ---                  ---         ---                ---                  ---                  ---\n",
       "     2023-11-29 21:16:30  28.232 sec  291.0              0.3842751561590303   0.29574420545119123  0.14766739564104714\n",
       "     2023-11-29 21:16:30  28.245 sec  292.0              0.3842657023119154   0.29572054476098525  0.1476601299732696\n",
       "     2023-11-29 21:16:30  28.260 sec  293.0              0.3842681354073502   0.29573007800641554  0.14766199988944165\n",
       "     2023-11-29 21:16:30  28.278 sec  294.0              0.3842632264430452   0.2957453054292714   0.14765822719641905\n",
       "     2023-11-29 21:16:30  28.294 sec  295.0              0.38426218835802733  0.2957566383524423   0.1476574294017001\n",
       "     2023-11-29 21:16:30  28.305 sec  296.0              0.3842634520908914   0.29574430391087014  0.1476584006128088\n",
       "     2023-11-29 21:16:30  28.314 sec  297.0              0.38426683668938627  0.29576174118988896  0.14766100177926744\n",
       "     2023-11-29 21:16:30  28.324 sec  298.0              0.3842619320498129   0.29578619316161386  0.14765723242265505\n",
       "     2023-11-29 21:16:30  28.342 sec  299.0              0.38426961370502216  0.29579382240621244  0.14766313601700695\n",
       "     2023-11-29 21:16:30  28.352 sec  300.0              0.38428314526575563  0.2957980576763411   0.14767353573534184\n",
       "[301 rows x 7 columns]\n",
       "\n",
       "\n",
       "Variable Importances: \n",
       "variable    relative_importance    scaled_importance     percentage\n",
       "----------  ---------------------  --------------------  ---------------------\n",
       "TD013       1549.9637451171875     1.0                   0.1624181903682103\n",
       "MB007       1368.967041015625      0.8832252014463229    0.14345183890650978\n",
       "TD009       1276.2861328125        0.8234296684894422    0.13373995665155053\n",
       "TD005       641.8096923828125      0.4140804547233377    0.06725419812301016\n",
       "AP003       503.8271484375         0.3250573763577982    0.05279523083387185\n",
       "TD014       423.3284912109375      0.27312154400032823   0.04435990692710485\n",
       "AP001       318.95538330078125     0.2057824799486946    0.0334228180027495\n",
       "CR019       279.6249694824219      0.18040742589193942   0.029301447642355812\n",
       "CR009       261.0901184082031      0.16844917775058216   0.02735921061926255\n",
       "TD010       259.75421142578125     0.1675872821181002    0.027219223090348566\n",
       "---         ---                    ---                   ---\n",
       "CR005       21.110963821411133     0.013620295241044496  0.002212183705331194\n",
       "AP002       20.876516342163086     0.013469035264811748  0.0021876163337163326\n",
       "AP009       14.863653182983398     0.00958967797137707   0.0015575381423249541\n",
       "TD025       0.0                    0.0                   0.0\n",
       "TD026       0.0                    0.0                   0.0\n",
       "TD027       0.0                    0.0                   0.0\n",
       "TD028       0.0                    0.0                   0.0\n",
       "TD029       0.0                    0.0                   0.0\n",
       "TD044       0.0                    0.0                   0.0\n",
       "PA030       0.0                    0.0                   0.0\n",
       "[40 rows x 4 columns]\n",
       "\n",
       "\n",
       "[tips]\n",
       "Use `model.explain()` to inspect the model.\n",
       "--\n",
       "Use `h2o.display.toggle_user_tips()` to switch on/off this section."
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rf_v3 = H2ORandomForestEstimator(\n",
    "        model_id = 'rf_v3',\n",
    "        ntrees = 300,\n",
    "        nfolds=10,\n",
    "        min_rows=100,\n",
    "        balance_classes = True,\n",
    "        seed=1234)\n",
    "rf_v3.train(predictors,target,training_frame=train_hex)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "6c4d0d7e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "\n",
      "   * ROC curve: The ROC curve plots the true positive rate vs. the false rositive sate\n",
      "\n",
      "\t  * The area under the curve (AUC): A value between 0.5 (random) and 1.0 (perfect), measuring the prediction accuracy\n",
      "\n",
      "   * Recall (R) = The number of true positives / (the number of true positives + the number of false negatives)\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ROC_AUC(rf_v3,test_hex,'loan_default')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "cba5ffef",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>actual</th>\n",
       "      <th>non_actual</th>\n",
       "      <th>cum_count</th>\n",
       "      <th>cum_actual</th>\n",
       "      <th>cum_non_actual</th>\n",
       "      <th>percent_cum_actual</th>\n",
       "      <th>percent_cum_non_actual</th>\n",
       "      <th>if_random</th>\n",
       "      <th>lift</th>\n",
       "      <th>K_S</th>\n",
       "      <th>gain</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>decile</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>320</td>\n",
       "      <td>100</td>\n",
       "      <td>220</td>\n",
       "      <td>320</td>\n",
       "      <td>100</td>\n",
       "      <td>220</td>\n",
       "      <td>0.17</td>\n",
       "      <td>0.08</td>\n",
       "      <td>60.0</td>\n",
       "      <td>1.67</td>\n",
       "      <td>9.0</td>\n",
       "      <td>31.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>320</td>\n",
       "      <td>91</td>\n",
       "      <td>229</td>\n",
       "      <td>640</td>\n",
       "      <td>191</td>\n",
       "      <td>449</td>\n",
       "      <td>0.32</td>\n",
       "      <td>0.17</td>\n",
       "      <td>120.0</td>\n",
       "      <td>1.59</td>\n",
       "      <td>15.0</td>\n",
       "      <td>29.84</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>320</td>\n",
       "      <td>78</td>\n",
       "      <td>242</td>\n",
       "      <td>960</td>\n",
       "      <td>269</td>\n",
       "      <td>691</td>\n",
       "      <td>0.45</td>\n",
       "      <td>0.27</td>\n",
       "      <td>180.0</td>\n",
       "      <td>1.49</td>\n",
       "      <td>18.0</td>\n",
       "      <td>28.02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>320</td>\n",
       "      <td>59</td>\n",
       "      <td>261</td>\n",
       "      <td>1280</td>\n",
       "      <td>328</td>\n",
       "      <td>952</td>\n",
       "      <td>0.55</td>\n",
       "      <td>0.37</td>\n",
       "      <td>240.0</td>\n",
       "      <td>1.37</td>\n",
       "      <td>18.0</td>\n",
       "      <td>25.62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>320</td>\n",
       "      <td>63</td>\n",
       "      <td>257</td>\n",
       "      <td>1600</td>\n",
       "      <td>391</td>\n",
       "      <td>1209</td>\n",
       "      <td>0.65</td>\n",
       "      <td>0.46</td>\n",
       "      <td>300.0</td>\n",
       "      <td>1.30</td>\n",
       "      <td>19.0</td>\n",
       "      <td>24.44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>320</td>\n",
       "      <td>54</td>\n",
       "      <td>266</td>\n",
       "      <td>1920</td>\n",
       "      <td>445</td>\n",
       "      <td>1475</td>\n",
       "      <td>0.74</td>\n",
       "      <td>0.57</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.24</td>\n",
       "      <td>17.0</td>\n",
       "      <td>23.18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>320</td>\n",
       "      <td>40</td>\n",
       "      <td>280</td>\n",
       "      <td>2240</td>\n",
       "      <td>485</td>\n",
       "      <td>1755</td>\n",
       "      <td>0.81</td>\n",
       "      <td>0.68</td>\n",
       "      <td>420.0</td>\n",
       "      <td>1.15</td>\n",
       "      <td>13.0</td>\n",
       "      <td>21.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>320</td>\n",
       "      <td>56</td>\n",
       "      <td>264</td>\n",
       "      <td>2560</td>\n",
       "      <td>541</td>\n",
       "      <td>2019</td>\n",
       "      <td>0.90</td>\n",
       "      <td>0.78</td>\n",
       "      <td>480.0</td>\n",
       "      <td>1.13</td>\n",
       "      <td>12.0</td>\n",
       "      <td>21.13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>320</td>\n",
       "      <td>34</td>\n",
       "      <td>286</td>\n",
       "      <td>2880</td>\n",
       "      <td>575</td>\n",
       "      <td>2305</td>\n",
       "      <td>0.96</td>\n",
       "      <td>0.89</td>\n",
       "      <td>540.0</td>\n",
       "      <td>1.06</td>\n",
       "      <td>7.0</td>\n",
       "      <td>19.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>320</td>\n",
       "      <td>25</td>\n",
       "      <td>295</td>\n",
       "      <td>3200</td>\n",
       "      <td>600</td>\n",
       "      <td>2600</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>600.0</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.75</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        count  actual  non_actual  cum_count  cum_actual  cum_non_actual  \\\n",
       "decile                                                                     \n",
       "0         320     100         220        320         100             220   \n",
       "1         320      91         229        640         191             449   \n",
       "2         320      78         242        960         269             691   \n",
       "3         320      59         261       1280         328             952   \n",
       "4         320      63         257       1600         391            1209   \n",
       "5         320      54         266       1920         445            1475   \n",
       "6         320      40         280       2240         485            1755   \n",
       "7         320      56         264       2560         541            2019   \n",
       "8         320      34         286       2880         575            2305   \n",
       "9         320      25         295       3200         600            2600   \n",
       "\n",
       "        percent_cum_actual  percent_cum_non_actual  if_random  lift   K_S  \\\n",
       "decile                                                                      \n",
       "0                     0.17                    0.08       60.0  1.67   9.0   \n",
       "1                     0.32                    0.17      120.0  1.59  15.0   \n",
       "2                     0.45                    0.27      180.0  1.49  18.0   \n",
       "3                     0.55                    0.37      240.0  1.37  18.0   \n",
       "4                     0.65                    0.46      300.0  1.30  19.0   \n",
       "5                     0.74                    0.57      360.0  1.24  17.0   \n",
       "6                     0.81                    0.68      420.0  1.15  13.0   \n",
       "7                     0.90                    0.78      480.0  1.13  12.0   \n",
       "8                     0.96                    0.89      540.0  1.06   7.0   \n",
       "9                     1.00                    1.00      600.0  1.00   0.0   \n",
       "\n",
       "         gain  \n",
       "decile         \n",
       "0       31.25  \n",
       "1       29.84  \n",
       "2       28.02  \n",
       "3       25.62  \n",
       "4       24.44  \n",
       "5       23.18  \n",
       "6       21.65  \n",
       "7       21.13  \n",
       "8       19.97  \n",
       "9       18.75  "
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "createGains(rf_v3)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d2cf03ea",
   "metadata": {},
   "source": [
    "### Interpretations:\n",
    "\n",
    "1. Decile Analysis:\n",
    "\n",
    "- In the first decile, I have 320 instances, and the model predicted 100 actual positive cases. The lift is 1.67, indicating that this decile is 1.67 times more likely to contain actual positive cases than random chance.\n",
    "- The K-S value of 9.0 suggests decent discrimination between positive and negative cases.\n",
    "\n",
    "2. Variable Importance:\n",
    "\n",
    "- \"TD013\" is the most important variable. This means that changes in \"TD013\" have the most significant impact on the model's predictions.\n",
    "\n",
    "3. Scoring History:\n",
    "\n",
    "- The training process involved building 300 trees.\n",
    "- AUC is 0.6319, indicating some level of discrimination between positive and negative instances."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2bb71fa1",
   "metadata": {},
   "source": [
    "# UnderSampling\n",
    "\n",
    "Undersampling involves reducing the number of instances in the majority class to balance it with the minority class. It randomly remove instances from the majority class until the class distribution is more balanced. It helps prevent the model from being dominated by the majority class, allowing it to pay more attention to the minority class. Undersampling is useful when the majority class has redundant or similar instances.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "be51242e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dtype('int64')"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y = data[target]\n",
    "X = data.drop(target,axis=1)\n",
    "y.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "3e018019",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "15488"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y1_cnt = data[target].sum()\n",
    "y1_cnt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "a2ad668e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "30976"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "N = 2\n",
    "y0_cnt = y1_cnt * N\n",
    "y0_cnt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "4f6fbee0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Looking in indexes: https://pypi.org/simple, https://pypi.ngc.nvidia.com\n",
      "Collecting imblearn\n",
      "  Downloading imblearn-0.0-py2.py3-none-any.whl (1.9 kB)\n",
      "Requirement already satisfied: imbalanced-learn in /Users/vickyma/opt/anaconda3/lib/python3.9/site-packages (from imblearn) (0.11.0)\n",
      "Requirement already satisfied: joblib>=1.1.1 in /Users/vickyma/opt/anaconda3/lib/python3.9/site-packages (from imbalanced-learn->imblearn) (1.3.2)\n",
      "Requirement already satisfied: scipy>=1.5.0 in /Users/vickyma/opt/anaconda3/lib/python3.9/site-packages (from imbalanced-learn->imblearn) (1.9.1)\n",
      "Requirement already satisfied: scikit-learn>=1.0.2 in /Users/vickyma/opt/anaconda3/lib/python3.9/site-packages (from imbalanced-learn->imblearn) (1.0.2)\n",
      "Requirement already satisfied: numpy>=1.17.3 in /Users/vickyma/opt/anaconda3/lib/python3.9/site-packages (from imbalanced-learn->imblearn) (1.24.4)\n",
      "Requirement already satisfied: threadpoolctl>=2.0.0 in /Users/vickyma/opt/anaconda3/lib/python3.9/site-packages (from imbalanced-learn->imblearn) (2.2.0)\n",
      "Installing collected packages: imblearn\n",
      "Successfully installed imblearn-0.0\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install imblearn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "bb66e4af",
   "metadata": {},
   "outputs": [],
   "source": [
    "from imblearn.datasets import make_imbalance\n",
    "X_rs, y_rs = make_imbalance(X, y, \n",
    "                            sampling_strategy={1:y1_cnt , 0:  y0_cnt},\n",
    "                            random_state=0)\n",
    "X_rs = pd.DataFrame(X_rs)\n",
    "y_rs = pd.DataFrame(y_rs)   "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "2654f8fe",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parse progress: |████████████████████████████████████████████████████████████████| (done) 100%\n"
     ]
    }
   ],
   "source": [
    "y_rs = data[data[target]==1]\n",
    "X_rs = data[data[target]==0].sample(n=y0_cnt)\n",
    "smpl = pd.concat([X_rs,y_rs])\n",
    "smpl_hex = h2o.H2OFrame(smpl)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "ddb4dc78",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "drf Model Build progress: |██████████████████████████████████████████████████████| (done) 100%\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<pre style='margin: 1em 0 1em 0;'>Model Details\n",
       "=============\n",
       "H2ORandomForestEstimator : Distributed Random Forest\n",
       "Model Key: rf_v4\n",
       "</pre>\n",
       "<div style='margin: 1em 0 1em 0;'>\n",
       "<style>\n",
       "\n",
       "#h2o-table-15.h2o-container {\n",
       "  overflow-x: auto;\n",
       "}\n",
       "#h2o-table-15 .h2o-table {\n",
       "  /* width: 100%; */\n",
       "  margin-top: 1em;\n",
       "  margin-bottom: 1em;\n",
       "}\n",
       "#h2o-table-15 .h2o-table caption {\n",
       "  white-space: nowrap;\n",
       "  caption-side: top;\n",
       "  text-align: left;\n",
       "  /* margin-left: 1em; */\n",
       "  margin: 0;\n",
       "  font-size: larger;\n",
       "}\n",
       "#h2o-table-15 .h2o-table thead {\n",
       "  white-space: nowrap; \n",
       "  position: sticky;\n",
       "  top: 0;\n",
       "  box-shadow: 0 -1px inset;\n",
       "}\n",
       "#h2o-table-15 .h2o-table tbody {\n",
       "  overflow: auto;\n",
       "}\n",
       "#h2o-table-15 .h2o-table th,\n",
       "#h2o-table-15 .h2o-table td {\n",
       "  text-align: right;\n",
       "  /* border: 1px solid; */\n",
       "}\n",
       "#h2o-table-15 .h2o-table tr:nth-child(even) {\n",
       "  /* background: #F5F5F5 */\n",
       "}\n",
       "\n",
       "</style>      \n",
       "<div id=\"h2o-table-15\" class=\"h2o-container\">\n",
       "  <table class=\"h2o-table\">\n",
       "    <caption>Model Summary: </caption>\n",
       "    <thead><tr><th></th>\n",
       "<th>number_of_trees</th>\n",
       "<th>number_of_internal_trees</th>\n",
       "<th>model_size_in_bytes</th>\n",
       "<th>min_depth</th>\n",
       "<th>max_depth</th>\n",
       "<th>mean_depth</th>\n",
       "<th>min_leaves</th>\n",
       "<th>max_leaves</th>\n",
       "<th>mean_leaves</th></tr></thead>\n",
       "    <tbody><tr><td></td>\n",
       "<td>300.0</td>\n",
       "<td>300.0</td>\n",
       "<td>940756.0</td>\n",
       "<td>12.0</td>\n",
       "<td>18.0</td>\n",
       "<td>14.126667</td>\n",
       "<td>211.0</td>\n",
       "<td>230.0</td>\n",
       "<td>220.02667</td></tr></tbody>\n",
       "  </table>\n",
       "</div>\n",
       "</div>\n",
       "<div style='margin: 1em 0 1em 0;'><pre style='margin: 1em 0 1em 0;'>ModelMetricsRegression: drf\n",
       "** Reported on train data. **\n",
       "\n",
       "MSE: 0.20668949969901124\n",
       "RMSE: 0.45463116886000154\n",
       "MAE: 0.4162627495128115\n",
       "RMSLE: 0.31945204775804414\n",
       "Mean Residual Deviance: 0.20668949969901124</pre></div>\n",
       "<div style='margin: 1em 0 1em 0;'><pre style='margin: 1em 0 1em 0;'>ModelMetricsRegression: drf\n",
       "** Reported on cross-validation data. **\n",
       "\n",
       "MSE: 0.20679165228476326\n",
       "RMSE: 0.4547435016410496\n",
       "MAE: 0.4165702095886562\n",
       "RMSLE: 0.31953450833066077\n",
       "Mean Residual Deviance: 0.20679165228476326</pre></div>\n",
       "<div style='margin: 1em 0 1em 0;'>\n",
       "<style>\n",
       "\n",
       "#h2o-table-16.h2o-container {\n",
       "  overflow-x: auto;\n",
       "}\n",
       "#h2o-table-16 .h2o-table {\n",
       "  /* width: 100%; */\n",
       "  margin-top: 1em;\n",
       "  margin-bottom: 1em;\n",
       "}\n",
       "#h2o-table-16 .h2o-table caption {\n",
       "  white-space: nowrap;\n",
       "  caption-side: top;\n",
       "  text-align: left;\n",
       "  /* margin-left: 1em; */\n",
       "  margin: 0;\n",
       "  font-size: larger;\n",
       "}\n",
       "#h2o-table-16 .h2o-table thead {\n",
       "  white-space: nowrap; \n",
       "  position: sticky;\n",
       "  top: 0;\n",
       "  box-shadow: 0 -1px inset;\n",
       "}\n",
       "#h2o-table-16 .h2o-table tbody {\n",
       "  overflow: auto;\n",
       "}\n",
       "#h2o-table-16 .h2o-table th,\n",
       "#h2o-table-16 .h2o-table td {\n",
       "  text-align: right;\n",
       "  /* border: 1px solid; */\n",
       "}\n",
       "#h2o-table-16 .h2o-table tr:nth-child(even) {\n",
       "  /* background: #F5F5F5 */\n",
       "}\n",
       "\n",
       "</style>      \n",
       "<div id=\"h2o-table-16\" class=\"h2o-container\">\n",
       "  <table class=\"h2o-table\">\n",
       "    <caption>Cross-Validation Metrics Summary: </caption>\n",
       "    <thead><tr><th></th>\n",
       "<th>mean</th>\n",
       "<th>sd</th>\n",
       "<th>cv_1_valid</th>\n",
       "<th>cv_2_valid</th>\n",
       "<th>cv_3_valid</th>\n",
       "<th>cv_4_valid</th>\n",
       "<th>cv_5_valid</th>\n",
       "<th>cv_6_valid</th>\n",
       "<th>cv_7_valid</th>\n",
       "<th>cv_8_valid</th>\n",
       "<th>cv_9_valid</th>\n",
       "<th>cv_10_valid</th></tr></thead>\n",
       "    <tbody><tr><td>mae</td>\n",
       "<td>0.4165813</td>\n",
       "<td>0.0029904</td>\n",
       "<td>0.4184532</td>\n",
       "<td>0.4206578</td>\n",
       "<td>0.4132665</td>\n",
       "<td>0.4116972</td>\n",
       "<td>0.4157034</td>\n",
       "<td>0.4154771</td>\n",
       "<td>0.4156955</td>\n",
       "<td>0.4189383</td>\n",
       "<td>0.4205478</td>\n",
       "<td>0.4153758</td></tr>\n",
       "<tr><td>mean_residual_deviance</td>\n",
       "<td>0.2068002</td>\n",
       "<td>0.0027750</td>\n",
       "<td>0.2086977</td>\n",
       "<td>0.2104999</td>\n",
       "<td>0.2038051</td>\n",
       "<td>0.2024051</td>\n",
       "<td>0.2059156</td>\n",
       "<td>0.2057651</td>\n",
       "<td>0.2064373</td>\n",
       "<td>0.2092187</td>\n",
       "<td>0.2103236</td>\n",
       "<td>0.2049340</td></tr>\n",
       "<tr><td>mse</td>\n",
       "<td>0.2068002</td>\n",
       "<td>0.0027750</td>\n",
       "<td>0.2086977</td>\n",
       "<td>0.2104999</td>\n",
       "<td>0.2038051</td>\n",
       "<td>0.2024051</td>\n",
       "<td>0.2059156</td>\n",
       "<td>0.2057651</td>\n",
       "<td>0.2064373</td>\n",
       "<td>0.2092187</td>\n",
       "<td>0.2103236</td>\n",
       "<td>0.2049340</td></tr>\n",
       "<tr><td>r2</td>\n",
       "<td>0.0693031</td>\n",
       "<td>0.0049959</td>\n",
       "<td>0.0673524</td>\n",
       "<td>0.0665574</td>\n",
       "<td>0.0737517</td>\n",
       "<td>0.0751860</td>\n",
       "<td>0.0705541</td>\n",
       "<td>0.0762884</td>\n",
       "<td>0.0690327</td>\n",
       "<td>0.0608904</td>\n",
       "<td>0.0632287</td>\n",
       "<td>0.0701896</td></tr>\n",
       "<tr><td>residual_deviance</td>\n",
       "<td>0.2068002</td>\n",
       "<td>0.0027750</td>\n",
       "<td>0.2086977</td>\n",
       "<td>0.2104999</td>\n",
       "<td>0.2038051</td>\n",
       "<td>0.2024051</td>\n",
       "<td>0.2059156</td>\n",
       "<td>0.2057651</td>\n",
       "<td>0.2064373</td>\n",
       "<td>0.2092187</td>\n",
       "<td>0.2103236</td>\n",
       "<td>0.2049340</td></tr>\n",
       "<tr><td>rmse</td>\n",
       "<td>0.4547437</td>\n",
       "<td>0.0030515</td>\n",
       "<td>0.4568344</td>\n",
       "<td>0.4588027</td>\n",
       "<td>0.4514478</td>\n",
       "<td>0.4498946</td>\n",
       "<td>0.4537793</td>\n",
       "<td>0.4536133</td>\n",
       "<td>0.4543537</td>\n",
       "<td>0.4574043</td>\n",
       "<td>0.4586106</td>\n",
       "<td>0.4526963</td></tr>\n",
       "<tr><td>rmsle</td>\n",
       "<td>0.3195365</td>\n",
       "<td>0.0015849</td>\n",
       "<td>0.3202648</td>\n",
       "<td>0.3214006</td>\n",
       "<td>0.317807</td>\n",
       "<td>0.316954</td>\n",
       "<td>0.3193320</td>\n",
       "<td>0.3185371</td>\n",
       "<td>0.3191992</td>\n",
       "<td>0.3212192</td>\n",
       "<td>0.3216875</td>\n",
       "<td>0.3189631</td></tr></tbody>\n",
       "  </table>\n",
       "</div>\n",
       "</div>\n",
       "<div style='margin: 1em 0 1em 0;'>\n",
       "<style>\n",
       "\n",
       "#h2o-table-17.h2o-container {\n",
       "  overflow-x: auto;\n",
       "}\n",
       "#h2o-table-17 .h2o-table {\n",
       "  /* width: 100%; */\n",
       "  margin-top: 1em;\n",
       "  margin-bottom: 1em;\n",
       "}\n",
       "#h2o-table-17 .h2o-table caption {\n",
       "  white-space: nowrap;\n",
       "  caption-side: top;\n",
       "  text-align: left;\n",
       "  /* margin-left: 1em; */\n",
       "  margin: 0;\n",
       "  font-size: larger;\n",
       "}\n",
       "#h2o-table-17 .h2o-table thead {\n",
       "  white-space: nowrap; \n",
       "  position: sticky;\n",
       "  top: 0;\n",
       "  box-shadow: 0 -1px inset;\n",
       "}\n",
       "#h2o-table-17 .h2o-table tbody {\n",
       "  overflow: auto;\n",
       "}\n",
       "#h2o-table-17 .h2o-table th,\n",
       "#h2o-table-17 .h2o-table td {\n",
       "  text-align: right;\n",
       "  /* border: 1px solid; */\n",
       "}\n",
       "#h2o-table-17 .h2o-table tr:nth-child(even) {\n",
       "  /* background: #F5F5F5 */\n",
       "}\n",
       "\n",
       "</style>      \n",
       "<div id=\"h2o-table-17\" class=\"h2o-container\">\n",
       "  <table class=\"h2o-table\">\n",
       "    <caption>Scoring History: </caption>\n",
       "    <thead><tr><th></th>\n",
       "<th>timestamp</th>\n",
       "<th>duration</th>\n",
       "<th>number_of_trees</th>\n",
       "<th>training_rmse</th>\n",
       "<th>training_mae</th>\n",
       "<th>training_deviance</th></tr></thead>\n",
       "    <tbody><tr><td></td>\n",
       "<td>2023-11-21 13:48:11</td>\n",
       "<td> 9 min 33.473 sec</td>\n",
       "<td>0.0</td>\n",
       "<td>nan</td>\n",
       "<td>nan</td>\n",
       "<td>nan</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 13:48:11</td>\n",
       "<td> 9 min 33.662 sec</td>\n",
       "<td>1.0</td>\n",
       "<td>0.4648400</td>\n",
       "<td>0.4160695</td>\n",
       "<td>0.2160763</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 13:48:11</td>\n",
       "<td> 9 min 33.846 sec</td>\n",
       "<td>2.0</td>\n",
       "<td>0.4633612</td>\n",
       "<td>0.4161815</td>\n",
       "<td>0.2147036</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 13:48:11</td>\n",
       "<td> 9 min 34.024 sec</td>\n",
       "<td>3.0</td>\n",
       "<td>0.4621725</td>\n",
       "<td>0.4166387</td>\n",
       "<td>0.2136035</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 13:48:12</td>\n",
       "<td> 9 min 34.203 sec</td>\n",
       "<td>4.0</td>\n",
       "<td>0.4616117</td>\n",
       "<td>0.4171188</td>\n",
       "<td>0.2130853</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 13:48:12</td>\n",
       "<td> 9 min 34.412 sec</td>\n",
       "<td>5.0</td>\n",
       "<td>0.4608834</td>\n",
       "<td>0.4172116</td>\n",
       "<td>0.2124135</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 13:48:12</td>\n",
       "<td> 9 min 34.593 sec</td>\n",
       "<td>6.0</td>\n",
       "<td>0.4602816</td>\n",
       "<td>0.4173187</td>\n",
       "<td>0.2118591</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 13:48:12</td>\n",
       "<td> 9 min 34.790 sec</td>\n",
       "<td>7.0</td>\n",
       "<td>0.4593695</td>\n",
       "<td>0.4169995</td>\n",
       "<td>0.2110204</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 13:48:13</td>\n",
       "<td> 9 min 35.265 sec</td>\n",
       "<td>8.0</td>\n",
       "<td>0.4590379</td>\n",
       "<td>0.4171504</td>\n",
       "<td>0.2107158</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 13:48:13</td>\n",
       "<td> 9 min 35.469 sec</td>\n",
       "<td>9.0</td>\n",
       "<td>0.4587167</td>\n",
       "<td>0.4170857</td>\n",
       "<td>0.2104210</td></tr>\n",
       "<tr><td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 13:48:48</td>\n",
       "<td>10 min 10.204 sec</td>\n",
       "<td>148.0</td>\n",
       "<td>0.4547343</td>\n",
       "<td>0.4163617</td>\n",
       "<td>0.2067833</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 13:48:52</td>\n",
       "<td>10 min 14.306 sec</td>\n",
       "<td>165.0</td>\n",
       "<td>0.4547410</td>\n",
       "<td>0.4163775</td>\n",
       "<td>0.2067894</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 13:48:56</td>\n",
       "<td>10 min 18.315 sec</td>\n",
       "<td>179.0</td>\n",
       "<td>0.4547458</td>\n",
       "<td>0.4163835</td>\n",
       "<td>0.2067938</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 13:49:00</td>\n",
       "<td>10 min 22.387 sec</td>\n",
       "<td>197.0</td>\n",
       "<td>0.4547191</td>\n",
       "<td>0.4163751</td>\n",
       "<td>0.2067694</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 13:49:04</td>\n",
       "<td>10 min 26.558 sec</td>\n",
       "<td>211.0</td>\n",
       "<td>0.4546906</td>\n",
       "<td>0.4163466</td>\n",
       "<td>0.2067436</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 13:49:08</td>\n",
       "<td>10 min 30.729 sec</td>\n",
       "<td>225.0</td>\n",
       "<td>0.4546853</td>\n",
       "<td>0.4163160</td>\n",
       "<td>0.2067387</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 13:49:13</td>\n",
       "<td>10 min 35.217 sec</td>\n",
       "<td>235.0</td>\n",
       "<td>0.4546706</td>\n",
       "<td>0.4163021</td>\n",
       "<td>0.2067254</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 13:49:17</td>\n",
       "<td>10 min 39.339 sec</td>\n",
       "<td>253.0</td>\n",
       "<td>0.4546593</td>\n",
       "<td>0.4163084</td>\n",
       "<td>0.2067151</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 13:49:21</td>\n",
       "<td>10 min 43.489 sec</td>\n",
       "<td>276.0</td>\n",
       "<td>0.4546309</td>\n",
       "<td>0.4162780</td>\n",
       "<td>0.2066893</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 13:49:25</td>\n",
       "<td>10 min 47.527 sec</td>\n",
       "<td>300.0</td>\n",
       "<td>0.4546312</td>\n",
       "<td>0.4162627</td>\n",
       "<td>0.2066895</td></tr></tbody>\n",
       "  </table>\n",
       "</div>\n",
       "<pre style='font-size: smaller; margin-bottom: 1em;'>[32 rows x 7 columns]</pre></div>\n",
       "<div style='margin: 1em 0 1em 0;'>\n",
       "<style>\n",
       "\n",
       "#h2o-table-18.h2o-container {\n",
       "  overflow-x: auto;\n",
       "}\n",
       "#h2o-table-18 .h2o-table {\n",
       "  /* width: 100%; */\n",
       "  margin-top: 1em;\n",
       "  margin-bottom: 1em;\n",
       "}\n",
       "#h2o-table-18 .h2o-table caption {\n",
       "  white-space: nowrap;\n",
       "  caption-side: top;\n",
       "  text-align: left;\n",
       "  /* margin-left: 1em; */\n",
       "  margin: 0;\n",
       "  font-size: larger;\n",
       "}\n",
       "#h2o-table-18 .h2o-table thead {\n",
       "  white-space: nowrap; \n",
       "  position: sticky;\n",
       "  top: 0;\n",
       "  box-shadow: 0 -1px inset;\n",
       "}\n",
       "#h2o-table-18 .h2o-table tbody {\n",
       "  overflow: auto;\n",
       "}\n",
       "#h2o-table-18 .h2o-table th,\n",
       "#h2o-table-18 .h2o-table td {\n",
       "  text-align: right;\n",
       "  /* border: 1px solid; */\n",
       "}\n",
       "#h2o-table-18 .h2o-table tr:nth-child(even) {\n",
       "  /* background: #F5F5F5 */\n",
       "}\n",
       "\n",
       "</style>      \n",
       "<div id=\"h2o-table-18\" class=\"h2o-container\">\n",
       "  <table class=\"h2o-table\">\n",
       "    <caption>Variable Importances: </caption>\n",
       "    <thead><tr><th>variable</th>\n",
       "<th>relative_importance</th>\n",
       "<th>scaled_importance</th>\n",
       "<th>percentage</th></tr></thead>\n",
       "    <tbody><tr><td>TD013</td>\n",
       "<td>34948.1015625</td>\n",
       "<td>1.0</td>\n",
       "<td>0.1745313</td></tr>\n",
       "<tr><td>AP003</td>\n",
       "<td>28749.2714844</td>\n",
       "<td>0.8226276</td>\n",
       "<td>0.1435742</td></tr>\n",
       "<tr><td>TD009</td>\n",
       "<td>22157.8847656</td>\n",
       "<td>0.6340226</td>\n",
       "<td>0.1106568</td></tr>\n",
       "<tr><td>MB007</td>\n",
       "<td>18953.6953125</td>\n",
       "<td>0.5423383</td>\n",
       "<td>0.0946550</td></tr>\n",
       "<tr><td>TD005</td>\n",
       "<td>11892.5908203</td>\n",
       "<td>0.3402929</td>\n",
       "<td>0.0593918</td></tr>\n",
       "<tr><td>TD014</td>\n",
       "<td>10792.9277344</td>\n",
       "<td>0.3088273</td>\n",
       "<td>0.0539000</td></tr>\n",
       "<tr><td>CR015</td>\n",
       "<td>10161.7021484</td>\n",
       "<td>0.2907655</td>\n",
       "<td>0.0507477</td></tr>\n",
       "<tr><td>AP005</td>\n",
       "<td>8372.5996094</td>\n",
       "<td>0.2395724</td>\n",
       "<td>0.0418129</td></tr>\n",
       "<tr><td>MB005</td>\n",
       "<td>4432.2006836</td>\n",
       "<td>0.1268224</td>\n",
       "<td>0.0221345</td></tr>\n",
       "<tr><td>TD010</td>\n",
       "<td>4372.6845703</td>\n",
       "<td>0.1251194</td>\n",
       "<td>0.0218372</td></tr>\n",
       "<tr><td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td></tr>\n",
       "<tr><td>TD026</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD027</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD028</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD029</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD044</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD048</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD051</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD054</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD061</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD062</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr></tbody>\n",
       "  </table>\n",
       "</div>\n",
       "<pre style='font-size: smaller; margin-bottom: 1em;'>[46 rows x 4 columns]</pre></div><pre style=\"font-size: smaller; margin: 1em 0 0 0;\">\n",
       "\n",
       "[tips]\n",
       "Use `model.explain()` to inspect the model.\n",
       "--\n",
       "Use `h2o.display.toggle_user_tips()` to switch on/off this section.</pre>"
      ],
      "text/plain": [
       "Model Details\n",
       "=============\n",
       "H2ORandomForestEstimator : Distributed Random Forest\n",
       "Model Key: rf_v4\n",
       "\n",
       "\n",
       "Model Summary: \n",
       "    number_of_trees    number_of_internal_trees    model_size_in_bytes    min_depth    max_depth    mean_depth    min_leaves    max_leaves    mean_leaves\n",
       "--  -----------------  --------------------------  ---------------------  -----------  -----------  ------------  ------------  ------------  -------------\n",
       "    300                300                         940756                 12           18           14.1267       211           230           220.027\n",
       "\n",
       "ModelMetricsRegression: drf\n",
       "** Reported on train data. **\n",
       "\n",
       "MSE: 0.20668949969901124\n",
       "RMSE: 0.45463116886000154\n",
       "MAE: 0.4162627495128115\n",
       "RMSLE: 0.31945204775804414\n",
       "Mean Residual Deviance: 0.20668949969901124\n",
       "\n",
       "ModelMetricsRegression: drf\n",
       "** Reported on cross-validation data. **\n",
       "\n",
       "MSE: 0.20679165228476326\n",
       "RMSE: 0.4547435016410496\n",
       "MAE: 0.4165702095886562\n",
       "RMSLE: 0.31953450833066077\n",
       "Mean Residual Deviance: 0.20679165228476326\n",
       "\n",
       "Cross-Validation Metrics Summary: \n",
       "                        mean       sd          cv_1_valid    cv_2_valid    cv_3_valid    cv_4_valid    cv_5_valid    cv_6_valid    cv_7_valid    cv_8_valid    cv_9_valid    cv_10_valid\n",
       "----------------------  ---------  ----------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  -------------\n",
       "mae                     0.416581   0.00299037  0.418453      0.420658      0.413266      0.411697      0.415703      0.415477      0.415695      0.418938      0.420548      0.415376\n",
       "mean_residual_deviance  0.2068     0.00277504  0.208698      0.2105        0.203805      0.202405      0.205916      0.205765      0.206437      0.209219      0.210324      0.204934\n",
       "mse                     0.2068     0.00277504  0.208698      0.2105        0.203805      0.202405      0.205916      0.205765      0.206437      0.209219      0.210324      0.204934\n",
       "r2                      0.0693031  0.00499591  0.0673524     0.0665574     0.0737517     0.075186      0.0705541     0.0762884     0.0690327     0.0608904     0.0632287     0.0701896\n",
       "residual_deviance       0.2068     0.00277504  0.208698      0.2105        0.203805      0.202405      0.205916      0.205765      0.206437      0.209219      0.210324      0.204934\n",
       "rmse                    0.454744   0.00305153  0.456834      0.458803      0.451448      0.449895      0.453779      0.453613      0.454354      0.457404      0.458611      0.452696\n",
       "rmsle                   0.319536   0.00158491  0.320265      0.321401      0.317807      0.316954      0.319332      0.318537      0.319199      0.321219      0.321688      0.318963\n",
       "\n",
       "Scoring History: \n",
       "     timestamp            duration           number_of_trees    training_rmse        training_mae         training_deviance\n",
       "---  -------------------  -----------------  -----------------  -------------------  -------------------  -------------------\n",
       "     2023-11-21 13:48:11  9 min 33.473 sec   0.0                nan                  nan                  nan\n",
       "     2023-11-21 13:48:11  9 min 33.662 sec   1.0                0.46484004143657126  0.4160695253162338   0.2160762641227533\n",
       "     2023-11-21 13:48:11  9 min 33.846 sec   2.0                0.46336123642169724  0.4161814671418938   0.21470363541824403\n",
       "     2023-11-21 13:48:11  9 min 34.024 sec   3.0                0.4621725462427433   0.4166387352240995   0.21360346250050066\n",
       "     2023-11-21 13:48:12  9 min 34.203 sec   4.0                0.4616116794434578   0.4171187973479355   0.21308534259860967\n",
       "     2023-11-21 13:48:12  9 min 34.412 sec   5.0                0.4608833739148114   0.41721164993504434  0.21241348435109986\n",
       "     2023-11-21 13:48:12  9 min 34.593 sec   6.0                0.46028156942015114  0.4173186526812139   0.2118591231478774\n",
       "     2023-11-21 13:48:12  9 min 34.790 sec   7.0                0.459369522808057    0.41699953429800796  0.21102035848490197\n",
       "     2023-11-21 13:48:13  9 min 35.265 sec   8.0                0.4590379413519057   0.41715043316021255  0.2107158316005956\n",
       "     2023-11-21 13:48:13  9 min 35.469 sec   9.0                0.45871673955577735  0.4170857065028385   0.21042104714868287\n",
       "---  ---                  ---                ---                ---                  ---                  ---\n",
       "     2023-11-21 13:48:48  10 min 10.204 sec  148.0              0.4547343283160275   0.416361695919841    0.2067833093490287\n",
       "     2023-11-21 13:48:52  10 min 14.306 sec  165.0              0.454741036553598    0.4163775148226675   0.20678941032584072\n",
       "     2023-11-21 13:48:56  10 min 18.315 sec  179.0              0.4547458244546051   0.41638349270540215  0.2067937648588985\n",
       "     2023-11-21 13:49:00  10 min 22.387 sec  197.0              0.45471905428512494  0.4163750767669591   0.20676941832995838\n",
       "     2023-11-21 13:49:04  10 min 26.558 sec  211.0              0.45469063194093123  0.4163466079968693   0.20674357077484337\n",
       "     2023-11-21 13:49:08  10 min 30.729 sec  225.0              0.4546853295522549   0.41631596508001073  0.20673874891004262\n",
       "     2023-11-21 13:49:13  10 min 35.217 sec  235.0              0.45467060340297066  0.41630209273203167  0.20672535759882146\n",
       "     2023-11-21 13:49:17  10 min 39.339 sec  253.0              0.45465929018986423  0.4163083631684471   0.20671507015595117\n",
       "     2023-11-21 13:49:21  10 min 43.489 sec  276.0              0.4546309387924272   0.4162780296980641   0.2066892905072837\n",
       "     2023-11-21 13:49:25  10 min 47.527 sec  300.0              0.45463116886000154  0.4162627495128115   0.20668949969901124\n",
       "[32 rows x 7 columns]\n",
       "\n",
       "\n",
       "Variable Importances: \n",
       "variable    relative_importance    scaled_importance    percentage\n",
       "----------  ---------------------  -------------------  --------------------\n",
       "TD013       34948.1015625          1.0                  0.17453126874688465\n",
       "AP003       28749.271484375        0.822627559123942    0.14357423160005447\n",
       "TD009       22157.884765625        0.6340225584499516   0.11065676154041587\n",
       "MB007       18953.6953125          0.5423383378523109   0.0946549981954404\n",
       "TD005       11892.5908203125       0.34029289971714755  0.059391751533190144\n",
       "TD014       10792.927734375        0.3088272968153447   0.05390001993685284\n",
       "CR015       10161.7021484375       0.29076549781294003  0.05074767124111194\n",
       "AP005       8372.599609375         0.2395723726051822   0.04181287014748384\n",
       "MB005       4432.20068359375       0.12682235902477715  0.02213446722606727\n",
       "TD010       4372.6845703125        0.12511937343699597  0.021837242990774164\n",
       "---         ---                    ---                  ---\n",
       "TD026       0.0                    0.0                  0.0\n",
       "TD027       0.0                    0.0                  0.0\n",
       "TD028       0.0                    0.0                  0.0\n",
       "TD029       0.0                    0.0                  0.0\n",
       "TD044       0.0                    0.0                  0.0\n",
       "TD048       0.0                    0.0                  0.0\n",
       "TD051       0.0                    0.0                  0.0\n",
       "TD054       0.0                    0.0                  0.0\n",
       "TD061       0.0                    0.0                  0.0\n",
       "TD062       0.0                    0.0                  0.0\n",
       "[46 rows x 4 columns]\n",
       "\n",
       "\n",
       "[tips]\n",
       "Use `model.explain()` to inspect the model.\n",
       "--\n",
       "Use `h2o.display.toggle_user_tips()` to switch on/off this section."
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rf_v4 = H2ORandomForestEstimator(\n",
    "        model_id = 'rf_v4',\n",
    "        ntrees = 300,\n",
    "        nfolds=10,\n",
    "        min_rows=100,\n",
    "        seed=1234)\n",
    "rf_v4.train(predictors,target,training_frame=smpl_hex)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "b7f922a7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "\n",
      "   * ROC curve: The ROC curve plots the true positive rate vs. the false rositive sate\n",
      "\n",
      "\t  * The area under the curve (AUC): A value between 0.5 (random) and 1.0 (perfect), measuring the prediction accuracy\n",
      "\n",
      "   * Recall (R) = The number of true positives / (the number of true positives + the number of false negatives)\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ROC_AUC(rf_v4,smpl_hex,'loan_default')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "4044932a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "\n",
      "   * ROC curve: The ROC curve plots the true positive rate vs. the false rositive sate\n",
      "\n",
      "\t  * The area under the curve (AUC): A value between 0.5 (random) and 1.0 (perfect), measuring the prediction accuracy\n",
      "\n",
      "   * Recall (R) = The number of true positives / (the number of true positives + the number of false negatives)\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ROC_AUC(rf_v4,test_hex,'loan_default')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "bb41f703",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>actual</th>\n",
       "      <th>non_actual</th>\n",
       "      <th>cum_count</th>\n",
       "      <th>cum_actual</th>\n",
       "      <th>cum_non_actual</th>\n",
       "      <th>percent_cum_actual</th>\n",
       "      <th>percent_cum_non_actual</th>\n",
       "      <th>if_random</th>\n",
       "      <th>lift</th>\n",
       "      <th>K_S</th>\n",
       "      <th>gain</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>decile</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>320</td>\n",
       "      <td>131</td>\n",
       "      <td>189</td>\n",
       "      <td>320</td>\n",
       "      <td>131</td>\n",
       "      <td>189</td>\n",
       "      <td>0.22</td>\n",
       "      <td>0.07</td>\n",
       "      <td>60.0</td>\n",
       "      <td>2.18</td>\n",
       "      <td>15.0</td>\n",
       "      <td>40.94</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>320</td>\n",
       "      <td>95</td>\n",
       "      <td>225</td>\n",
       "      <td>640</td>\n",
       "      <td>226</td>\n",
       "      <td>414</td>\n",
       "      <td>0.38</td>\n",
       "      <td>0.16</td>\n",
       "      <td>120.0</td>\n",
       "      <td>1.88</td>\n",
       "      <td>22.0</td>\n",
       "      <td>35.31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>320</td>\n",
       "      <td>74</td>\n",
       "      <td>246</td>\n",
       "      <td>960</td>\n",
       "      <td>300</td>\n",
       "      <td>660</td>\n",
       "      <td>0.50</td>\n",
       "      <td>0.25</td>\n",
       "      <td>180.0</td>\n",
       "      <td>1.67</td>\n",
       "      <td>25.0</td>\n",
       "      <td>31.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>320</td>\n",
       "      <td>78</td>\n",
       "      <td>242</td>\n",
       "      <td>1280</td>\n",
       "      <td>378</td>\n",
       "      <td>902</td>\n",
       "      <td>0.63</td>\n",
       "      <td>0.35</td>\n",
       "      <td>240.0</td>\n",
       "      <td>1.58</td>\n",
       "      <td>28.0</td>\n",
       "      <td>29.53</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>320</td>\n",
       "      <td>56</td>\n",
       "      <td>264</td>\n",
       "      <td>1600</td>\n",
       "      <td>434</td>\n",
       "      <td>1166</td>\n",
       "      <td>0.72</td>\n",
       "      <td>0.45</td>\n",
       "      <td>300.0</td>\n",
       "      <td>1.45</td>\n",
       "      <td>27.0</td>\n",
       "      <td>27.12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>320</td>\n",
       "      <td>62</td>\n",
       "      <td>258</td>\n",
       "      <td>1920</td>\n",
       "      <td>496</td>\n",
       "      <td>1424</td>\n",
       "      <td>0.83</td>\n",
       "      <td>0.55</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.38</td>\n",
       "      <td>28.0</td>\n",
       "      <td>25.83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>320</td>\n",
       "      <td>43</td>\n",
       "      <td>277</td>\n",
       "      <td>2240</td>\n",
       "      <td>539</td>\n",
       "      <td>1701</td>\n",
       "      <td>0.90</td>\n",
       "      <td>0.65</td>\n",
       "      <td>420.0</td>\n",
       "      <td>1.28</td>\n",
       "      <td>25.0</td>\n",
       "      <td>24.06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>320</td>\n",
       "      <td>32</td>\n",
       "      <td>288</td>\n",
       "      <td>2560</td>\n",
       "      <td>571</td>\n",
       "      <td>1989</td>\n",
       "      <td>0.95</td>\n",
       "      <td>0.76</td>\n",
       "      <td>480.0</td>\n",
       "      <td>1.19</td>\n",
       "      <td>19.0</td>\n",
       "      <td>22.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>320</td>\n",
       "      <td>18</td>\n",
       "      <td>302</td>\n",
       "      <td>2880</td>\n",
       "      <td>589</td>\n",
       "      <td>2291</td>\n",
       "      <td>0.98</td>\n",
       "      <td>0.88</td>\n",
       "      <td>540.0</td>\n",
       "      <td>1.09</td>\n",
       "      <td>10.0</td>\n",
       "      <td>20.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>320</td>\n",
       "      <td>11</td>\n",
       "      <td>309</td>\n",
       "      <td>3200</td>\n",
       "      <td>600</td>\n",
       "      <td>2600</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>600.0</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.75</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        count  actual  non_actual  cum_count  cum_actual  cum_non_actual  \\\n",
       "decile                                                                     \n",
       "0         320     131         189        320         131             189   \n",
       "1         320      95         225        640         226             414   \n",
       "2         320      74         246        960         300             660   \n",
       "3         320      78         242       1280         378             902   \n",
       "4         320      56         264       1600         434            1166   \n",
       "5         320      62         258       1920         496            1424   \n",
       "6         320      43         277       2240         539            1701   \n",
       "7         320      32         288       2560         571            1989   \n",
       "8         320      18         302       2880         589            2291   \n",
       "9         320      11         309       3200         600            2600   \n",
       "\n",
       "        percent_cum_actual  percent_cum_non_actual  if_random  lift   K_S  \\\n",
       "decile                                                                      \n",
       "0                     0.22                    0.07       60.0  2.18  15.0   \n",
       "1                     0.38                    0.16      120.0  1.88  22.0   \n",
       "2                     0.50                    0.25      180.0  1.67  25.0   \n",
       "3                     0.63                    0.35      240.0  1.58  28.0   \n",
       "4                     0.72                    0.45      300.0  1.45  27.0   \n",
       "5                     0.83                    0.55      360.0  1.38  28.0   \n",
       "6                     0.90                    0.65      420.0  1.28  25.0   \n",
       "7                     0.95                    0.76      480.0  1.19  19.0   \n",
       "8                     0.98                    0.88      540.0  1.09  10.0   \n",
       "9                     1.00                    1.00      600.0  1.00   0.0   \n",
       "\n",
       "         gain  \n",
       "decile         \n",
       "0       40.94  \n",
       "1       35.31  \n",
       "2       31.25  \n",
       "3       29.53  \n",
       "4       27.12  \n",
       "5       25.83  \n",
       "6       24.06  \n",
       "7       22.30  \n",
       "8       20.45  \n",
       "9       18.75  "
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "createGains(rf_v4)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b931f954",
   "metadata": {},
   "source": [
    "### Interpretations:\n",
    "\n",
    "1. Decile Analysis:\n",
    "\n",
    "- In the first decile, I have 320 instances, and the model predicted 131 actual positive cases. The lift is 2.18, indicating that this decile is 2.18 times more likely to contain actual positive cases than random chance.\n",
    "- The K-S value of 15.0 suggests decent discrimination between positive and negative cases.\n",
    "\n",
    "2. Variable Importance:\n",
    "\n",
    "- \"TD013\" is the most important variable. This means that changes in \"TD013\" have the most significant impact on the model's predictions.\n",
    "\n",
    "3. Scoring History:\n",
    "\n",
    "- The training process involved building 300 trees.\n",
    "- AUC is 0.7002, indicating some level of discrimination between positive and negative instances."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5496a4e0",
   "metadata": {},
   "source": [
    "# OverSampling\n",
    "\n",
    "Oversampling involves increasing the number of instances in the minority class to balance it with the majority class. It duplicates existing instances in the minority class or generating synthetic instances using techniques like SMOTE (Synthetic Minority Over-sampling Technique). It helps the model better learn the patterns in the minority class by providing more instances for training. Oversampling is useful when the minority class has limited data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "fe398be2",
   "metadata": {},
   "outputs": [],
   "source": [
    "from imblearn.over_sampling import RandomOverSampler\n",
    "X_rs, y_rs = make_imbalance(X, y, \n",
    "                            sampling_strategy={1:10000 , 0:  40000},\n",
    "                            random_state=0)\n",
    "X_rs = pd.DataFrame(X_rs)\n",
    "y_rs = pd.DataFrame(y_rs)   "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "b6e64c0c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parse progress: |████████████████████████████████████████████████████████████████| (done) 100%\n"
     ]
    }
   ],
   "source": [
    "y_rs = data[data[target]==1]\n",
    "X_rs = data[data[target]==0].sample(n=40000)\n",
    "smpl = pd.concat([X_rs,y_rs])\n",
    "smpl_hex = h2o.H2OFrame(smpl)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "e0e39492",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "drf Model Build progress: |██████████████████████████████████████████████████████| (done) 100%\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<pre style='margin: 1em 0 1em 0;'>Model Details\n",
       "=============\n",
       "H2ORandomForestEstimator : Distributed Random Forest\n",
       "Model Key: rf_v5\n",
       "</pre>\n",
       "<div style='margin: 1em 0 1em 0;'>\n",
       "<style>\n",
       "\n",
       "#h2o-table-19.h2o-container {\n",
       "  overflow-x: auto;\n",
       "}\n",
       "#h2o-table-19 .h2o-table {\n",
       "  /* width: 100%; */\n",
       "  margin-top: 1em;\n",
       "  margin-bottom: 1em;\n",
       "}\n",
       "#h2o-table-19 .h2o-table caption {\n",
       "  white-space: nowrap;\n",
       "  caption-side: top;\n",
       "  text-align: left;\n",
       "  /* margin-left: 1em; */\n",
       "  margin: 0;\n",
       "  font-size: larger;\n",
       "}\n",
       "#h2o-table-19 .h2o-table thead {\n",
       "  white-space: nowrap; \n",
       "  position: sticky;\n",
       "  top: 0;\n",
       "  box-shadow: 0 -1px inset;\n",
       "}\n",
       "#h2o-table-19 .h2o-table tbody {\n",
       "  overflow: auto;\n",
       "}\n",
       "#h2o-table-19 .h2o-table th,\n",
       "#h2o-table-19 .h2o-table td {\n",
       "  text-align: right;\n",
       "  /* border: 1px solid; */\n",
       "}\n",
       "#h2o-table-19 .h2o-table tr:nth-child(even) {\n",
       "  /* background: #F5F5F5 */\n",
       "}\n",
       "\n",
       "</style>      \n",
       "<div id=\"h2o-table-19\" class=\"h2o-container\">\n",
       "  <table class=\"h2o-table\">\n",
       "    <caption>Model Summary: </caption>\n",
       "    <thead><tr><th></th>\n",
       "<th>number_of_trees</th>\n",
       "<th>number_of_internal_trees</th>\n",
       "<th>model_size_in_bytes</th>\n",
       "<th>min_depth</th>\n",
       "<th>max_depth</th>\n",
       "<th>mean_depth</th>\n",
       "<th>min_leaves</th>\n",
       "<th>max_leaves</th>\n",
       "<th>mean_leaves</th></tr></thead>\n",
       "    <tbody><tr><td></td>\n",
       "<td>300.0</td>\n",
       "<td>300.0</td>\n",
       "<td>1122909.0</td>\n",
       "<td>13.0</td>\n",
       "<td>18.0</td>\n",
       "<td>14.993333</td>\n",
       "<td>252.0</td>\n",
       "<td>276.0</td>\n",
       "<td>262.90332</td></tr></tbody>\n",
       "  </table>\n",
       "</div>\n",
       "</div>\n",
       "<div style='margin: 1em 0 1em 0;'><pre style='margin: 1em 0 1em 0;'>ModelMetricsRegression: drf\n",
       "** Reported on train data. **\n",
       "\n",
       "MSE: 0.18863254385265102\n",
       "RMSE: 0.43431848205280305\n",
       "MAE: 0.3794216886191135\n",
       "RMSLE: 0.3050170892164021\n",
       "Mean Residual Deviance: 0.18863254385265102</pre></div>\n",
       "<div style='margin: 1em 0 1em 0;'><pre style='margin: 1em 0 1em 0;'>ModelMetricsRegression: drf\n",
       "** Reported on cross-validation data. **\n",
       "\n",
       "MSE: 0.1885904992544311\n",
       "RMSE: 0.4342700763976619\n",
       "MAE: 0.3795123184785811\n",
       "RMSLE: 0.304985743054387\n",
       "Mean Residual Deviance: 0.1885904992544311</pre></div>\n",
       "<div style='margin: 1em 0 1em 0;'>\n",
       "<style>\n",
       "\n",
       "#h2o-table-20.h2o-container {\n",
       "  overflow-x: auto;\n",
       "}\n",
       "#h2o-table-20 .h2o-table {\n",
       "  /* width: 100%; */\n",
       "  margin-top: 1em;\n",
       "  margin-bottom: 1em;\n",
       "}\n",
       "#h2o-table-20 .h2o-table caption {\n",
       "  white-space: nowrap;\n",
       "  caption-side: top;\n",
       "  text-align: left;\n",
       "  /* margin-left: 1em; */\n",
       "  margin: 0;\n",
       "  font-size: larger;\n",
       "}\n",
       "#h2o-table-20 .h2o-table thead {\n",
       "  white-space: nowrap; \n",
       "  position: sticky;\n",
       "  top: 0;\n",
       "  box-shadow: 0 -1px inset;\n",
       "}\n",
       "#h2o-table-20 .h2o-table tbody {\n",
       "  overflow: auto;\n",
       "}\n",
       "#h2o-table-20 .h2o-table th,\n",
       "#h2o-table-20 .h2o-table td {\n",
       "  text-align: right;\n",
       "  /* border: 1px solid; */\n",
       "}\n",
       "#h2o-table-20 .h2o-table tr:nth-child(even) {\n",
       "  /* background: #F5F5F5 */\n",
       "}\n",
       "\n",
       "</style>      \n",
       "<div id=\"h2o-table-20\" class=\"h2o-container\">\n",
       "  <table class=\"h2o-table\">\n",
       "    <caption>Cross-Validation Metrics Summary: </caption>\n",
       "    <thead><tr><th></th>\n",
       "<th>mean</th>\n",
       "<th>sd</th>\n",
       "<th>cv_1_valid</th>\n",
       "<th>cv_2_valid</th>\n",
       "<th>cv_3_valid</th>\n",
       "<th>cv_4_valid</th>\n",
       "<th>cv_5_valid</th>\n",
       "<th>cv_6_valid</th>\n",
       "<th>cv_7_valid</th>\n",
       "<th>cv_8_valid</th>\n",
       "<th>cv_9_valid</th>\n",
       "<th>cv_10_valid</th></tr></thead>\n",
       "    <tbody><tr><td>mae</td>\n",
       "<td>0.3795139</td>\n",
       "<td>0.0032554</td>\n",
       "<td>0.3835046</td>\n",
       "<td>0.3859672</td>\n",
       "<td>0.3778064</td>\n",
       "<td>0.3809900</td>\n",
       "<td>0.3778825</td>\n",
       "<td>0.3753001</td>\n",
       "<td>0.3796650</td>\n",
       "<td>0.3797542</td>\n",
       "<td>0.3764649</td>\n",
       "<td>0.3778048</td></tr>\n",
       "<tr><td>mean_residual_deviance</td>\n",
       "<td>0.1885917</td>\n",
       "<td>0.0031454</td>\n",
       "<td>0.1925959</td>\n",
       "<td>0.1946263</td>\n",
       "<td>0.1870202</td>\n",
       "<td>0.1899567</td>\n",
       "<td>0.1875425</td>\n",
       "<td>0.1843479</td>\n",
       "<td>0.1889924</td>\n",
       "<td>0.1886547</td>\n",
       "<td>0.1856057</td>\n",
       "<td>0.1865750</td></tr>\n",
       "<tr><td>mse</td>\n",
       "<td>0.1885917</td>\n",
       "<td>0.0031454</td>\n",
       "<td>0.1925959</td>\n",
       "<td>0.1946263</td>\n",
       "<td>0.1870202</td>\n",
       "<td>0.1899567</td>\n",
       "<td>0.1875425</td>\n",
       "<td>0.1843479</td>\n",
       "<td>0.1889924</td>\n",
       "<td>0.1886547</td>\n",
       "<td>0.1856057</td>\n",
       "<td>0.1865750</td></tr>\n",
       "<tr><td>r2</td>\n",
       "<td>0.0625221</td>\n",
       "<td>0.0045745</td>\n",
       "<td>0.0585802</td>\n",
       "<td>0.0582015</td>\n",
       "<td>0.0662686</td>\n",
       "<td>0.0590192</td>\n",
       "<td>0.0682615</td>\n",
       "<td>0.0576335</td>\n",
       "<td>0.0660258</td>\n",
       "<td>0.0614522</td>\n",
       "<td>0.0600749</td>\n",
       "<td>0.0697038</td></tr>\n",
       "<tr><td>residual_deviance</td>\n",
       "<td>0.1885917</td>\n",
       "<td>0.0031454</td>\n",
       "<td>0.1925959</td>\n",
       "<td>0.1946263</td>\n",
       "<td>0.1870202</td>\n",
       "<td>0.1899567</td>\n",
       "<td>0.1875425</td>\n",
       "<td>0.1843479</td>\n",
       "<td>0.1889924</td>\n",
       "<td>0.1886547</td>\n",
       "<td>0.1856057</td>\n",
       "<td>0.1865750</td></tr>\n",
       "<tr><td>rmse</td>\n",
       "<td>0.4342580</td>\n",
       "<td>0.0036126</td>\n",
       "<td>0.4388574</td>\n",
       "<td>0.4411647</td>\n",
       "<td>0.4324583</td>\n",
       "<td>0.4358403</td>\n",
       "<td>0.4330618</td>\n",
       "<td>0.4293576</td>\n",
       "<td>0.4347325</td>\n",
       "<td>0.4343440</td>\n",
       "<td>0.4308198</td>\n",
       "<td>0.4319433</td></tr>\n",
       "<tr><td>rmsle</td>\n",
       "<td>0.3049818</td>\n",
       "<td>0.0017810</td>\n",
       "<td>0.3073766</td>\n",
       "<td>0.3084275</td>\n",
       "<td>0.3038856</td>\n",
       "<td>0.3060351</td>\n",
       "<td>0.3039139</td>\n",
       "<td>0.3032393</td>\n",
       "<td>0.3048081</td>\n",
       "<td>0.3051335</td>\n",
       "<td>0.3035443</td>\n",
       "<td>0.3034543</td></tr></tbody>\n",
       "  </table>\n",
       "</div>\n",
       "</div>\n",
       "<div style='margin: 1em 0 1em 0;'>\n",
       "<style>\n",
       "\n",
       "#h2o-table-21.h2o-container {\n",
       "  overflow-x: auto;\n",
       "}\n",
       "#h2o-table-21 .h2o-table {\n",
       "  /* width: 100%; */\n",
       "  margin-top: 1em;\n",
       "  margin-bottom: 1em;\n",
       "}\n",
       "#h2o-table-21 .h2o-table caption {\n",
       "  white-space: nowrap;\n",
       "  caption-side: top;\n",
       "  text-align: left;\n",
       "  /* margin-left: 1em; */\n",
       "  margin: 0;\n",
       "  font-size: larger;\n",
       "}\n",
       "#h2o-table-21 .h2o-table thead {\n",
       "  white-space: nowrap; \n",
       "  position: sticky;\n",
       "  top: 0;\n",
       "  box-shadow: 0 -1px inset;\n",
       "}\n",
       "#h2o-table-21 .h2o-table tbody {\n",
       "  overflow: auto;\n",
       "}\n",
       "#h2o-table-21 .h2o-table th,\n",
       "#h2o-table-21 .h2o-table td {\n",
       "  text-align: right;\n",
       "  /* border: 1px solid; */\n",
       "}\n",
       "#h2o-table-21 .h2o-table tr:nth-child(even) {\n",
       "  /* background: #F5F5F5 */\n",
       "}\n",
       "\n",
       "</style>      \n",
       "<div id=\"h2o-table-21\" class=\"h2o-container\">\n",
       "  <table class=\"h2o-table\">\n",
       "    <caption>Scoring History: </caption>\n",
       "    <thead><tr><th></th>\n",
       "<th>timestamp</th>\n",
       "<th>duration</th>\n",
       "<th>number_of_trees</th>\n",
       "<th>training_rmse</th>\n",
       "<th>training_mae</th>\n",
       "<th>training_deviance</th></tr></thead>\n",
       "    <tbody><tr><td></td>\n",
       "<td>2023-11-21 14:09:43</td>\n",
       "<td>14 min 53.648 sec</td>\n",
       "<td>0.0</td>\n",
       "<td>nan</td>\n",
       "<td>nan</td>\n",
       "<td>nan</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 14:09:44</td>\n",
       "<td>14 min 53.786 sec</td>\n",
       "<td>1.0</td>\n",
       "<td>0.4404446</td>\n",
       "<td>0.3770996</td>\n",
       "<td>0.1939915</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 14:09:44</td>\n",
       "<td>14 min 53.923 sec</td>\n",
       "<td>2.0</td>\n",
       "<td>0.4400242</td>\n",
       "<td>0.3781703</td>\n",
       "<td>0.1936213</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 14:09:44</td>\n",
       "<td>14 min 54.046 sec</td>\n",
       "<td>3.0</td>\n",
       "<td>0.4398843</td>\n",
       "<td>0.3784504</td>\n",
       "<td>0.1934982</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 14:09:44</td>\n",
       "<td>14 min 54.160 sec</td>\n",
       "<td>4.0</td>\n",
       "<td>0.4395317</td>\n",
       "<td>0.3790053</td>\n",
       "<td>0.1931881</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 14:09:44</td>\n",
       "<td>14 min 54.287 sec</td>\n",
       "<td>5.0</td>\n",
       "<td>0.4395732</td>\n",
       "<td>0.3794406</td>\n",
       "<td>0.1932246</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 14:09:44</td>\n",
       "<td>14 min 54.411 sec</td>\n",
       "<td>6.0</td>\n",
       "<td>0.4388922</td>\n",
       "<td>0.3795179</td>\n",
       "<td>0.1926264</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 14:09:44</td>\n",
       "<td>14 min 54.533 sec</td>\n",
       "<td>7.0</td>\n",
       "<td>0.4383115</td>\n",
       "<td>0.3796767</td>\n",
       "<td>0.1921170</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 14:09:44</td>\n",
       "<td>14 min 54.698 sec</td>\n",
       "<td>8.0</td>\n",
       "<td>0.4379092</td>\n",
       "<td>0.3797925</td>\n",
       "<td>0.1917644</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 14:09:45</td>\n",
       "<td>14 min 54.850 sec</td>\n",
       "<td>9.0</td>\n",
       "<td>0.4374739</td>\n",
       "<td>0.3796358</td>\n",
       "<td>0.1913834</td></tr>\n",
       "<tr><td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 14:10:00</td>\n",
       "<td>15 min  9.855 sec</td>\n",
       "<td>89.0</td>\n",
       "<td>0.4345110</td>\n",
       "<td>0.3794618</td>\n",
       "<td>0.1887998</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 14:10:04</td>\n",
       "<td>15 min 13.906 sec</td>\n",
       "<td>108.0</td>\n",
       "<td>0.4344390</td>\n",
       "<td>0.3794016</td>\n",
       "<td>0.1887373</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 14:10:08</td>\n",
       "<td>15 min 18.023 sec</td>\n",
       "<td>137.0</td>\n",
       "<td>0.4343972</td>\n",
       "<td>0.3793707</td>\n",
       "<td>0.1887009</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 14:10:12</td>\n",
       "<td>15 min 22.108 sec</td>\n",
       "<td>172.0</td>\n",
       "<td>0.4343526</td>\n",
       "<td>0.3793604</td>\n",
       "<td>0.1886621</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 14:10:16</td>\n",
       "<td>15 min 26.336 sec</td>\n",
       "<td>189.0</td>\n",
       "<td>0.4343548</td>\n",
       "<td>0.3794056</td>\n",
       "<td>0.1886641</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 14:10:20</td>\n",
       "<td>15 min 30.433 sec</td>\n",
       "<td>205.0</td>\n",
       "<td>0.4343558</td>\n",
       "<td>0.3794417</td>\n",
       "<td>0.1886649</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 14:10:24</td>\n",
       "<td>15 min 34.613 sec</td>\n",
       "<td>224.0</td>\n",
       "<td>0.4343354</td>\n",
       "<td>0.3794079</td>\n",
       "<td>0.1886472</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 14:10:28</td>\n",
       "<td>15 min 38.690 sec</td>\n",
       "<td>243.0</td>\n",
       "<td>0.4343263</td>\n",
       "<td>0.3793906</td>\n",
       "<td>0.1886393</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 14:10:33</td>\n",
       "<td>15 min 42.730 sec</td>\n",
       "<td>265.0</td>\n",
       "<td>0.4343189</td>\n",
       "<td>0.3794098</td>\n",
       "<td>0.1886329</td></tr>\n",
       "<tr><td></td>\n",
       "<td>2023-11-21 14:10:37</td>\n",
       "<td>15 min 46.738 sec</td>\n",
       "<td>300.0</td>\n",
       "<td>0.4343185</td>\n",
       "<td>0.3794217</td>\n",
       "<td>0.1886325</td></tr></tbody>\n",
       "  </table>\n",
       "</div>\n",
       "<pre style='font-size: smaller; margin-bottom: 1em;'>[41 rows x 7 columns]</pre></div>\n",
       "<div style='margin: 1em 0 1em 0;'>\n",
       "<style>\n",
       "\n",
       "#h2o-table-22.h2o-container {\n",
       "  overflow-x: auto;\n",
       "}\n",
       "#h2o-table-22 .h2o-table {\n",
       "  /* width: 100%; */\n",
       "  margin-top: 1em;\n",
       "  margin-bottom: 1em;\n",
       "}\n",
       "#h2o-table-22 .h2o-table caption {\n",
       "  white-space: nowrap;\n",
       "  caption-side: top;\n",
       "  text-align: left;\n",
       "  /* margin-left: 1em; */\n",
       "  margin: 0;\n",
       "  font-size: larger;\n",
       "}\n",
       "#h2o-table-22 .h2o-table thead {\n",
       "  white-space: nowrap; \n",
       "  position: sticky;\n",
       "  top: 0;\n",
       "  box-shadow: 0 -1px inset;\n",
       "}\n",
       "#h2o-table-22 .h2o-table tbody {\n",
       "  overflow: auto;\n",
       "}\n",
       "#h2o-table-22 .h2o-table th,\n",
       "#h2o-table-22 .h2o-table td {\n",
       "  text-align: right;\n",
       "  /* border: 1px solid; */\n",
       "}\n",
       "#h2o-table-22 .h2o-table tr:nth-child(even) {\n",
       "  /* background: #F5F5F5 */\n",
       "}\n",
       "\n",
       "</style>      \n",
       "<div id=\"h2o-table-22\" class=\"h2o-container\">\n",
       "  <table class=\"h2o-table\">\n",
       "    <caption>Variable Importances: </caption>\n",
       "    <thead><tr><th>variable</th>\n",
       "<th>relative_importance</th>\n",
       "<th>scaled_importance</th>\n",
       "<th>percentage</th></tr></thead>\n",
       "    <tbody><tr><td>TD013</td>\n",
       "<td>33300.3867188</td>\n",
       "<td>1.0</td>\n",
       "<td>0.1638545</td></tr>\n",
       "<tr><td>AP003</td>\n",
       "<td>27331.7578125</td>\n",
       "<td>0.8207640</td>\n",
       "<td>0.1344858</td></tr>\n",
       "<tr><td>TD009</td>\n",
       "<td>21943.1308594</td>\n",
       "<td>0.6589452</td>\n",
       "<td>0.1079711</td></tr>\n",
       "<tr><td>MB007</td>\n",
       "<td>19522.3710938</td>\n",
       "<td>0.5862506</td>\n",
       "<td>0.0960598</td></tr>\n",
       "<tr><td>TD005</td>\n",
       "<td>14349.4951172</td>\n",
       "<td>0.4309108</td>\n",
       "<td>0.0706067</td></tr>\n",
       "<tr><td>AP005</td>\n",
       "<td>9350.6953125</td>\n",
       "<td>0.2807984</td>\n",
       "<td>0.0460101</td></tr>\n",
       "<tr><td>CR015</td>\n",
       "<td>9310.9228516</td>\n",
       "<td>0.2796040</td>\n",
       "<td>0.0458144</td></tr>\n",
       "<tr><td>TD014</td>\n",
       "<td>9271.7265625</td>\n",
       "<td>0.2784270</td>\n",
       "<td>0.0456215</td></tr>\n",
       "<tr><td>MB005</td>\n",
       "<td>5565.0146484</td>\n",
       "<td>0.1671156</td>\n",
       "<td>0.0273826</td></tr>\n",
       "<tr><td>TD010</td>\n",
       "<td>4809.9116211</td>\n",
       "<td>0.1444401</td>\n",
       "<td>0.0236672</td></tr>\n",
       "<tr><td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td>\n",
       "<td>---</td></tr>\n",
       "<tr><td>TD026</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD027</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD028</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD029</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD044</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD048</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD051</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD054</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD061</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr>\n",
       "<tr><td>TD062</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td>\n",
       "<td>0.0</td></tr></tbody>\n",
       "  </table>\n",
       "</div>\n",
       "<pre style='font-size: smaller; margin-bottom: 1em;'>[46 rows x 4 columns]</pre></div><pre style=\"font-size: smaller; margin: 1em 0 0 0;\">\n",
       "\n",
       "[tips]\n",
       "Use `model.explain()` to inspect the model.\n",
       "--\n",
       "Use `h2o.display.toggle_user_tips()` to switch on/off this section.</pre>"
      ],
      "text/plain": [
       "Model Details\n",
       "=============\n",
       "H2ORandomForestEstimator : Distributed Random Forest\n",
       "Model Key: rf_v5\n",
       "\n",
       "\n",
       "Model Summary: \n",
       "    number_of_trees    number_of_internal_trees    model_size_in_bytes    min_depth    max_depth    mean_depth    min_leaves    max_leaves    mean_leaves\n",
       "--  -----------------  --------------------------  ---------------------  -----------  -----------  ------------  ------------  ------------  -------------\n",
       "    300                300                         1.12291e+06            13           18           14.9933       252           276           262.903\n",
       "\n",
       "ModelMetricsRegression: drf\n",
       "** Reported on train data. **\n",
       "\n",
       "MSE: 0.18863254385265102\n",
       "RMSE: 0.43431848205280305\n",
       "MAE: 0.3794216886191135\n",
       "RMSLE: 0.3050170892164021\n",
       "Mean Residual Deviance: 0.18863254385265102\n",
       "\n",
       "ModelMetricsRegression: drf\n",
       "** Reported on cross-validation data. **\n",
       "\n",
       "MSE: 0.1885904992544311\n",
       "RMSE: 0.4342700763976619\n",
       "MAE: 0.3795123184785811\n",
       "RMSLE: 0.304985743054387\n",
       "Mean Residual Deviance: 0.1885904992544311\n",
       "\n",
       "Cross-Validation Metrics Summary: \n",
       "                        mean       sd          cv_1_valid    cv_2_valid    cv_3_valid    cv_4_valid    cv_5_valid    cv_6_valid    cv_7_valid    cv_8_valid    cv_9_valid    cv_10_valid\n",
       "----------------------  ---------  ----------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  ------------  -------------\n",
       "mae                     0.379514   0.00325543  0.383505      0.385967      0.377806      0.38099       0.377882      0.3753        0.379665      0.379754      0.376465      0.377805\n",
       "mean_residual_deviance  0.188592   0.00314539  0.192596      0.194626      0.18702       0.189957      0.187543      0.184348      0.188992      0.188655      0.185606      0.186575\n",
       "mse                     0.188592   0.00314539  0.192596      0.194626      0.18702       0.189957      0.187543      0.184348      0.188992      0.188655      0.185606      0.186575\n",
       "r2                      0.0625221  0.00457454  0.0585802     0.0582015     0.0662686     0.0590192     0.0682615     0.0576335     0.0660258     0.0614522     0.0600749     0.0697038\n",
       "residual_deviance       0.188592   0.00314539  0.192596      0.194626      0.18702       0.189957      0.187543      0.184348      0.188992      0.188655      0.185606      0.186575\n",
       "rmse                    0.434258   0.00361259  0.438857      0.441165      0.432458      0.43584       0.433062      0.429358      0.434733      0.434344      0.43082       0.431943\n",
       "rmsle                   0.304982   0.00178102  0.307377      0.308427      0.303886      0.306035      0.303914      0.303239      0.304808      0.305133      0.303544      0.303454\n",
       "\n",
       "Scoring History: \n",
       "     timestamp            duration           number_of_trees    training_rmse        training_mae         training_deviance\n",
       "---  -------------------  -----------------  -----------------  -------------------  -------------------  -------------------\n",
       "     2023-11-21 14:09:43  14 min 53.648 sec  0.0                nan                  nan                  nan\n",
       "     2023-11-21 14:09:44  14 min 53.786 sec  1.0                0.44044464804651756  0.3770995678825967   0.1939914879928207\n",
       "     2023-11-21 14:09:44  14 min 53.923 sec  2.0                0.4400241685331004   0.3781702997894806   0.19362126889324635\n",
       "     2023-11-21 14:09:44  14 min 54.046 sec  3.0                0.4398843368270424   0.3784504011288074   0.1934982297857669\n",
       "     2023-11-21 14:09:44  14 min 54.160 sec  4.0                0.439531714106506    0.37900529489926543  0.19318812770540333\n",
       "     2023-11-21 14:09:44  14 min 54.287 sec  5.0                0.4395732338025469   0.3794405784569185   0.19322462787562858\n",
       "     2023-11-21 14:09:44  14 min 54.411 sec  6.0                0.4388922374411245   0.3795178833020582   0.1926263960860764\n",
       "     2023-11-21 14:09:44  14 min 54.533 sec  7.0                0.43831153847116866  0.3796767364092284   0.19211700475696278\n",
       "     2023-11-21 14:09:44  14 min 54.698 sec  8.0                0.43790917431709603  0.37979254888468855  0.19176444495108078\n",
       "     2023-11-21 14:09:45  14 min 54.850 sec  9.0                0.4374738685831307   0.379635761192227    0.19138338569309032\n",
       "---  ---                  ---                ---                ---                  ---                  ---\n",
       "     2023-11-21 14:10:00  15 min  9.855 sec  89.0               0.43451100214462485  0.3794618052487414   0.18879981098472617\n",
       "     2023-11-21 14:10:04  15 min 13.906 sec  108.0              0.43443904188400445  0.3794015506864617   0.1887372811130918\n",
       "     2023-11-21 14:10:08  15 min 18.023 sec  137.0              0.4343972154145688   0.3793706848079454   0.1887009407599313\n",
       "     2023-11-21 14:10:12  15 min 22.108 sec  172.0              0.4343525619434192   0.3793604089742609   0.1886621480668118\n",
       "     2023-11-21 14:10:16  15 min 26.336 sec  189.0              0.4343547589802903   0.37940557945484377  0.18866405664882607\n",
       "     2023-11-21 14:10:20  15 min 30.433 sec  205.0              0.43435578199910996  0.37944165185874973  0.18866494535605835\n",
       "     2023-11-21 14:10:24  15 min 34.613 sec  224.0              0.43433539394046733  0.37940791321827605  0.18864723442942097\n",
       "     2023-11-21 14:10:28  15 min 38.690 sec  243.0              0.4343262592457839   0.3793906005681788   0.18863929947043587\n",
       "     2023-11-21 14:10:33  15 min 42.730 sec  265.0              0.43431887914825873  0.3794098176634363   0.18863288878459977\n",
       "     2023-11-21 14:10:37  15 min 46.738 sec  300.0              0.43431848205280305  0.3794216886191135   0.18863254385265102\n",
       "[41 rows x 7 columns]\n",
       "\n",
       "\n",
       "Variable Importances: \n",
       "variable    relative_importance    scaled_importance    percentage\n",
       "----------  ---------------------  -------------------  --------------------\n",
       "TD013       33300.38671875         1.0                  0.1638544685690423\n",
       "AP003       27331.7578125          0.8207639762066389   0.1344858451419529\n",
       "TD009       21943.130859375        0.6589452262132373   0.10797111985727734\n",
       "MB007       19522.37109375         0.5862505819717043   0.09605977755726537\n",
       "TD005       14349.4951171875       0.4309107650424949   0.07060665440671746\n",
       "AP005       9350.6953125           0.28079840007488654  0.046010072619307854\n",
       "CR015       9310.9228515625        0.2796040457488118   0.045814372325925744\n",
       "TD014       9271.7265625           0.27842699368051166  0.04562150708479633\n",
       "MB005       5565.0146484375        0.1671156162671253   0.02738264049303781\n",
       "TD010       4809.91162109375       0.14444011301482867  0.023667157958097162\n",
       "---         ---                    ---                  ---\n",
       "TD026       0.0                    0.0                  0.0\n",
       "TD027       0.0                    0.0                  0.0\n",
       "TD028       0.0                    0.0                  0.0\n",
       "TD029       0.0                    0.0                  0.0\n",
       "TD044       0.0                    0.0                  0.0\n",
       "TD048       0.0                    0.0                  0.0\n",
       "TD051       0.0                    0.0                  0.0\n",
       "TD054       0.0                    0.0                  0.0\n",
       "TD061       0.0                    0.0                  0.0\n",
       "TD062       0.0                    0.0                  0.0\n",
       "[46 rows x 4 columns]\n",
       "\n",
       "\n",
       "[tips]\n",
       "Use `model.explain()` to inspect the model.\n",
       "--\n",
       "Use `h2o.display.toggle_user_tips()` to switch on/off this section."
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rf_v5 = H2ORandomForestEstimator(\n",
    "        model_id = 'rf_v5',\n",
    "        ntrees = 300,\n",
    "        nfolds=10,\n",
    "        min_rows=100,\n",
    "        seed=1234)\n",
    "rf_v5.train(predictors,target,training_frame=smpl_hex)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "d9cc2223",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "\n",
      "   * ROC curve: The ROC curve plots the true positive rate vs. the false rositive sate\n",
      "\n",
      "\t  * The area under the curve (AUC): A value between 0.5 (random) and 1.0 (perfect), measuring the prediction accuracy\n",
      "\n",
      "   * Recall (R) = The number of true positives / (the number of true positives + the number of false negatives)\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ROC_AUC(rf_v5,smpl_hex,'loan_default')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "8634f0f8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n",
      "\n",
      "   * ROC curve: The ROC curve plots the true positive rate vs. the false rositive sate\n",
      "\n",
      "\t  * The area under the curve (AUC): A value between 0.5 (random) and 1.0 (perfect), measuring the prediction accuracy\n",
      "\n",
      "   * Recall (R) = The number of true positives / (the number of true positives + the number of false negatives)\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ROC_AUC(rf_v5,test_hex,'loan_default')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "8e9f88f1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "drf prediction progress: |███████████████████████████████████████████████████████| (done) 100%\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>actual</th>\n",
       "      <th>non_actual</th>\n",
       "      <th>cum_count</th>\n",
       "      <th>cum_actual</th>\n",
       "      <th>cum_non_actual</th>\n",
       "      <th>percent_cum_actual</th>\n",
       "      <th>percent_cum_non_actual</th>\n",
       "      <th>if_random</th>\n",
       "      <th>lift</th>\n",
       "      <th>K_S</th>\n",
       "      <th>gain</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>decile</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>320</td>\n",
       "      <td>139</td>\n",
       "      <td>181</td>\n",
       "      <td>320</td>\n",
       "      <td>139</td>\n",
       "      <td>181</td>\n",
       "      <td>0.23</td>\n",
       "      <td>0.07</td>\n",
       "      <td>60.0</td>\n",
       "      <td>2.32</td>\n",
       "      <td>16.0</td>\n",
       "      <td>43.44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>320</td>\n",
       "      <td>96</td>\n",
       "      <td>224</td>\n",
       "      <td>640</td>\n",
       "      <td>235</td>\n",
       "      <td>405</td>\n",
       "      <td>0.39</td>\n",
       "      <td>0.16</td>\n",
       "      <td>120.0</td>\n",
       "      <td>1.96</td>\n",
       "      <td>23.0</td>\n",
       "      <td>36.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>320</td>\n",
       "      <td>78</td>\n",
       "      <td>242</td>\n",
       "      <td>960</td>\n",
       "      <td>313</td>\n",
       "      <td>647</td>\n",
       "      <td>0.52</td>\n",
       "      <td>0.25</td>\n",
       "      <td>180.0</td>\n",
       "      <td>1.74</td>\n",
       "      <td>27.0</td>\n",
       "      <td>32.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>320</td>\n",
       "      <td>73</td>\n",
       "      <td>247</td>\n",
       "      <td>1280</td>\n",
       "      <td>386</td>\n",
       "      <td>894</td>\n",
       "      <td>0.64</td>\n",
       "      <td>0.34</td>\n",
       "      <td>240.0</td>\n",
       "      <td>1.61</td>\n",
       "      <td>30.0</td>\n",
       "      <td>30.16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>320</td>\n",
       "      <td>58</td>\n",
       "      <td>262</td>\n",
       "      <td>1600</td>\n",
       "      <td>444</td>\n",
       "      <td>1156</td>\n",
       "      <td>0.74</td>\n",
       "      <td>0.44</td>\n",
       "      <td>300.0</td>\n",
       "      <td>1.48</td>\n",
       "      <td>30.0</td>\n",
       "      <td>27.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>320</td>\n",
       "      <td>59</td>\n",
       "      <td>261</td>\n",
       "      <td>1920</td>\n",
       "      <td>503</td>\n",
       "      <td>1417</td>\n",
       "      <td>0.84</td>\n",
       "      <td>0.55</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.40</td>\n",
       "      <td>29.0</td>\n",
       "      <td>26.20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>320</td>\n",
       "      <td>39</td>\n",
       "      <td>281</td>\n",
       "      <td>2240</td>\n",
       "      <td>542</td>\n",
       "      <td>1698</td>\n",
       "      <td>0.90</td>\n",
       "      <td>0.65</td>\n",
       "      <td>420.0</td>\n",
       "      <td>1.29</td>\n",
       "      <td>25.0</td>\n",
       "      <td>24.20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>320</td>\n",
       "      <td>31</td>\n",
       "      <td>289</td>\n",
       "      <td>2560</td>\n",
       "      <td>573</td>\n",
       "      <td>1987</td>\n",
       "      <td>0.96</td>\n",
       "      <td>0.76</td>\n",
       "      <td>480.0</td>\n",
       "      <td>1.19</td>\n",
       "      <td>20.0</td>\n",
       "      <td>22.38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>320</td>\n",
       "      <td>16</td>\n",
       "      <td>304</td>\n",
       "      <td>2880</td>\n",
       "      <td>589</td>\n",
       "      <td>2291</td>\n",
       "      <td>0.98</td>\n",
       "      <td>0.88</td>\n",
       "      <td>540.0</td>\n",
       "      <td>1.09</td>\n",
       "      <td>10.0</td>\n",
       "      <td>20.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>320</td>\n",
       "      <td>11</td>\n",
       "      <td>309</td>\n",
       "      <td>3200</td>\n",
       "      <td>600</td>\n",
       "      <td>2600</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>600.0</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.75</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        count  actual  non_actual  cum_count  cum_actual  cum_non_actual  \\\n",
       "decile                                                                     \n",
       "0         320     139         181        320         139             181   \n",
       "1         320      96         224        640         235             405   \n",
       "2         320      78         242        960         313             647   \n",
       "3         320      73         247       1280         386             894   \n",
       "4         320      58         262       1600         444            1156   \n",
       "5         320      59         261       1920         503            1417   \n",
       "6         320      39         281       2240         542            1698   \n",
       "7         320      31         289       2560         573            1987   \n",
       "8         320      16         304       2880         589            2291   \n",
       "9         320      11         309       3200         600            2600   \n",
       "\n",
       "        percent_cum_actual  percent_cum_non_actual  if_random  lift   K_S  \\\n",
       "decile                                                                      \n",
       "0                     0.23                    0.07       60.0  2.32  16.0   \n",
       "1                     0.39                    0.16      120.0  1.96  23.0   \n",
       "2                     0.52                    0.25      180.0  1.74  27.0   \n",
       "3                     0.64                    0.34      240.0  1.61  30.0   \n",
       "4                     0.74                    0.44      300.0  1.48  30.0   \n",
       "5                     0.84                    0.55      360.0  1.40  29.0   \n",
       "6                     0.90                    0.65      420.0  1.29  25.0   \n",
       "7                     0.96                    0.76      480.0  1.19  20.0   \n",
       "8                     0.98                    0.88      540.0  1.09  10.0   \n",
       "9                     1.00                    1.00      600.0  1.00   0.0   \n",
       "\n",
       "         gain  \n",
       "decile         \n",
       "0       43.44  \n",
       "1       36.72  \n",
       "2       32.60  \n",
       "3       30.16  \n",
       "4       27.75  \n",
       "5       26.20  \n",
       "6       24.20  \n",
       "7       22.38  \n",
       "8       20.45  \n",
       "9       18.75  "
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "createGains(rf_v5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "400e52f9",
   "metadata": {},
   "source": [
    "### Interpretations:\n",
    "\n",
    "1. Decile Analysis:\n",
    "\n",
    "- In the first decile, I have 320 instances, and the model predicted 139 actual positive cases. The lift is 2.32, indicating that this decile is 2.32 times more likely to contain actual positive cases than random chance.\n",
    "- The K-S value of 16.0 suggests decent discrimination between positive and negative cases.\n",
    "\n",
    "2. Variable Importance:\n",
    "\n",
    "- \"TD013\" is the most important variable. This means that changes in \"TD013\" have the most significant impact on the model's predictions.\n",
    "\n",
    "3. Scoring History:\n",
    "\n",
    "- The training process involved building 300 trees.\n",
    "- AUC is 0.7108, indicating some level of discrimination between positive and negative instances."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b2a1c4fe",
   "metadata": {},
   "source": [
    "# Summary:\n",
    "1. Both undersampling and oversampling has improved the model accuracy by approximately 30%\n",
    "2. Among the 5 models, model 5 with oversampling technique has the best performance with lift of 2.32, K_S 16.0 and AUC of 0.7108"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
